{"version":3,"sources":["../components/theme/mapping/mappingContext.ts","../components/theme/mapping/mappingProvider.component.tsx","../components/theme/theme/themeContext.ts","../components/theme/theme/theme.service.tsx","../components/theme/theme/themeProvider.component.tsx","../components/theme/style/styleProvider.component.tsx","../components/theme/modal/modalResolver.component.tsx","../components/theme/modal/modal.service.tsx","../components/theme/modal/modalPanel.component.tsx","../components/theme/application/applicationProvider.component.tsx","../components/theme/style/style.service.tsx","../components/theme/style/styleConsumer.service.ts","../components/theme/style/styled.tsx","../components/theme/theme/withStyles.tsx","../components/ui/animation/animation.ts","../components/ui/animation/pulseAnimation.ts","../components/ui/animation/shakeAnimation.ts","../components/ui/animation/zoomAnimation.ts","../components/devsupport/components/falsyFC/falsyFC.component.tsx","../components/ui/text/text.component.tsx","../components/devsupport/components/falsyText/falsyText.component.tsx","../components/devsupport/components/touchableWithoutFeedback.component.tsx","../components/devsupport/components/touchableWeb.component.tsx","../components/devsupport/components/measure/type.ts","../components/devsupport/components/measure/measure.component.tsx","../components/devsupport/services/web/webEventResponder.ts","../components/devsupport/services/rtl/rtlFlexMap.ts","../components/devsupport/services/rtl/rtl.service.ts","../components/devsupport/services/props/props.service.ts","../components/devsupport/typings.ts","../components/ui/input/input.component.tsx","../components/ui/list/list.component.tsx","../components/ui/popover/type.ts","../components/ui/popover/popoverView.component.tsx","../components/ui/popover/placement.service.ts","../components/ui/popover/popover.component.tsx","../components/ui/autocomplete/autocomplete.component.tsx","../components/ui/list/listItem.component.tsx","../components/ui/autocomplete/autocompleteItem.component.tsx","../components/ui/avatar/avatar.component.tsx","../components/ui/shared/tabIndicator.component.tsx","../components/ui/bottomNavigation/bottomNavigation.component.tsx","../components/ui/bottomNavigation/bottomNavigationTab.component.tsx","../components/ui/button/button.component.tsx","../components/ui/buttonGroup/buttonGroup.component.tsx","../components/ui/divider/divider.component.tsx","../components/ui/shared/chevronDown.component.tsx","../components/ui/shared/chevronLeft.component.tsx","../components/ui/shared/chevronRight.component.tsx","../components/ui/calendar/type.ts","../components/ui/calendar/components/calendarHeader.component.tsx","../components/ui/calendar/components/calendarMonthHeader.component.tsx","../components/ui/calendar/components/picker/calendarPickerRow.component.tsx","../components/ui/calendar/components/picker/calendarPickerCell.component.tsx","../components/ui/calendar/components/picker/calendarPicker.component.tsx","../components/ui/calendar/components/calendarDateContent.component.tsx","../components/ui/calendar/i18n/type.ts","../components/ui/calendar/service/date.service.ts","../components/ui/calendar/i18n/en.ts","../components/ui/calendar/service/nativeDate.service.ts","../components/ui/calendar/service/helpers.ts","../components/ui/calendar/service/calendarData.service.ts","../components/ui/calendar/baseCalendar.component.tsx","../components/ui/calendar/calendar.component.tsx","../components/ui/card/card.component.tsx","../components/ui/calendar/service/rangeDate.service.ts","../components/ui/calendar/rangeCalendar.component.tsx","../components/ui/shared/checkmark.component.tsx","../components/ui/shared/minus.component.tsx","../components/ui/checkbox/checkbox.component.tsx","../components/ui/datepicker/baseDatepicker.component.tsx","../components/ui/datepicker/datepicker.component.tsx","../components/ui/datepicker/rangeDatepicker.component.tsx","../components/ui/menu/menu.service.ts","../components/ui/menu/menu.component.tsx","../components/ui/drawer/drawer.component.tsx","../components/ui/menu/menuItem.component.tsx","../components/ui/menu/menuGroup.component.tsx","../components/ui/drawer/drawerGroup.component.tsx","../components/ui/drawer/drawerItem.component.tsx","../components/ui/select/select.service.ts","../components/ui/select/select.component.tsx","../components/ui/select/selectItem.component.tsx","../components/ui/select/selectGroup.component.tsx","../components/ui/icon/service/iconRegistry.service.ts","../components/ui/icon/icon.component.tsx","../components/ui/icon/iconAnimation.ts","../components/ui/icon/iconRegistry.component.tsx","../components/ui/layout/layout.component.tsx","../components/ui/modal/modal.component.tsx","../components/ui/overflowMenu/overflowMenu.component.tsx","../components/ui/radio/radio.component.tsx","../components/ui/radioGroup/radioGroup.component.tsx","../components/ui/spinner/animation.ts","../components/ui/spinner/spinner.component.tsx","../components/ui/tab/tabBar.component.tsx","../components/ui/viewPager/viewPager.component.tsx","../components/ui/tab/tabView.component.tsx","../components/ui/tab/tab.component.tsx","../components/ui/toggle/toggle.component.tsx","../components/ui/popover/popoverIndicator.component.tsx","../components/ui/tooltip/tooltip.component.tsx","../components/ui/topNavigation/topNavigation.component.tsx","../components/ui/topNavigation/topNavigationAction.component.tsx","services/theme.service.ts","../eva-icons/evaIcon.component.tsx","../eva-icons/index.ts","../eva-icons/createIconsMap.ts","app/themes.ts","components/showcaseSettings.component.tsx","components/showcaseIFrame.component.tsx","components/showcaseThemingIFrame.component.tsx","components/autocomplete/autocompleteAccessories.component.tsx","components/autocomplete/autocompleteAsync.component.tsx","components/autocomplete/autocompleteHandleKeyboard.component.tsx","components/autocomplete/autocompleteSimpleUsage.component.tsx","components/avatar/avatarImageComponent.component.tsx","components/avatar/avatarShape.component.tsx","components/avatar/avatarSimpleUsage.component.tsx","components/avatar/avatarSize.component.tsx","components/bottomNavigation/bottomNavigationAccessories.component.tsx","components/bottomNavigation/bottomNavigationSimpleUsage.component.tsx","components/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx","components/bottomNavigation/bottomNavigationTabTheming.component.tsx","components/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx","components/button/buttonAccessories.component.tsx","components/button/buttonAppearances.component.tsx","components/button/buttonGhost.component.tsx","components/button/buttonOutline.component.tsx","components/button/buttonSimpleUsage.component.tsx","components/button/buttonSize.component.tsx","components/button/buttonStates.component.tsx","components/button/buttonStatus.component.tsx","components/button/buttonTheming.component.tsx","components/buttonGroup/buttonGroupAppearance.component.tsx","components/buttonGroup/buttonGroupGhost.component.tsx","components/buttonGroup/buttonGroupOutline.component.tsx","components/buttonGroup/buttonGroupSimpleUsage.component.tsx","components/buttonGroup/buttonGroupSize.component.tsx","components/buttonGroup/buttonGroupStatus.component.tsx","components/buttonGroup/buttonGroupWithIcons.component.tsx","components/calendar/calendarCustomDay.component.tsx","components/calendar/calendarFilters.component.tsx","components/calendar/calendarInitialVisibleDate.component.tsx","components/calendar/calendarLocaleSettings.component.tsx","../moment/momentDate.service.ts","components/calendar/calendarMoment.component.tsx","components/calendar/calendarSimpleUsage.component.tsx","components/calendar/calendarTheming.component.tsx","components/calendar/rangeCalendarSimpleUsage.component.tsx","components/card/cardAccessories.component.tsx","components/card/cardSimpleUsage.component.tsx","components/card/cardStatuses.component.tsx","components/checkbox/checkboxIndeterminate.component.tsx","components/checkbox/checkboxSimpleUsage.component.tsx","components/checkbox/checkboxStates.component.tsx","components/checkbox/checkboxStatus.component.tsx","components/checkbox/checkboxTheming.component.tsx","components/datepicker/datepickerAccessories.component.tsx","components/datepicker/datepickerCustomDay.component.tsx","components/datepicker/datepickerFilters.component.tsx","components/datepicker/datepickerInitialVisibleDate.component.tsx","components/datepicker/datepickerLocaleSettings.component.tsx","components/datepicker/datepickerMoment.component.tsx","components/datepicker/datepickerSimpleUsage.component.tsx","components/datepicker/datepickerSize.component.tsx","components/datepicker/datepickerStatus.component.tsx","components/datepicker/datepickerTheming.component.tsx","components/datepicker/rangeDatepickerSimpleUsage.component.tsx","components/divider/dividerSimpleUsage.component.tsx","components/drawer/drawerAccessories.component.tsx","components/drawer/drawerGroups.component.tsx","components/drawer/drawerItemSimpleUsage.component.tsx","components/drawer/drawerNoMarkers.component.tsx","components/drawer/drawerSimpleUsage.component.tsx","components/drawer/drawerTheming.component.tsx","components/icon/iconAnimation.component.tsx","components/icon/iconSimpleUsage.component.tsx","components/icon/iconTheming.component.tsx","components/icon/iconWithinComponents.component.tsx","components/input/inputAccessories.component.tsx","components/input/inputSimpleUsage.component.tsx","components/input/inputSize.component.tsx","components/input/inputStates.component.tsx","components/input/inputStatus.component.tsx","components/input/inputTheming.component.tsx","components/layout/layoutLevel.component.tsx","components/list/listAccessories.component.tsx","components/list/listCustomItem.component.tsx","components/list/listDividers.component.tsx","components/list/listItemSimpleUsage.component.tsx","components/list/listSimpleUsage.component.tsx","components/menu/menuAccessories.component.tsx","components/menu/menuDisabledOptions.component.tsx","components/menu/menuGroups.component.tsx","components/menu/menuItemSimpleUsage.component.tsx","components/menu/menuNoMarkers.component.tsx","components/menu/menuSimpleUsage.component.tsx","components/menu/menuTheming.component.tsx","components/modal/modalSimpleUsage.component.tsx","components/modal/modalWithBackdrop.component.tsx","components/overflowMenu/overflowMenuAccessories.component.tsx","components/overflowMenu/overflowMenuFullWidth.component.tsx","components/overflowMenu/overflowMenuNoMarkers.component.tsx","components/overflowMenu/overflowMenuPlacement.component.tsx","components/overflowMenu/overflowMenuSimpleUsage.component.tsx","components/overflowMenu/overflowMenuStyledBackdrop.component.tsx","components/overflowMenu/overflowMenuWithDisabledItems.component.tsx","components/overflowMenu/overflowMenuWithoutDivider.component.tsx","components/popover/popoverFullWidth.component.tsx","components/popover/popoverPlacement.component.tsx","components/popover/popoverSimpleUsage.component.tsx","components/popover/popoverStyledBackdrop.component.tsx","components/radio/radioSimpleUsage.component.tsx","components/radio/radioStates.component.tsx","components/radio/radioStatus.component.tsx","components/radio/radioTheming.component.tsx","components/radioGroup/radioGroupSimpleUsage.component.tsx","components/select/selectAccessories.component.tsx","components/select/selectDisabledOptions.component.tsx","components/select/selectDisplayValue.component.tsx","components/select/selectItemSimpleUsage.component.tsx","components/select/selectMultiSelect.component.tsx","components/select/selectSimpleUsage.component.tsx","components/select/selectSize.component.tsx","components/select/selectStates.component.tsx","components/select/selectStatus.component.tsx","components/select/selectTheming.component.tsx","components/select/selectWithGroups.component.tsx","components/spinner/spinnerDataLoading.component.tsx","components/spinner/spinnerSimpleUsage.component.tsx","components/spinner/spinnerSizes.component.tsx","components/spinner/spinnerStatuses.component.tsx","components/spinner/spinnerTheming.component.tsx","components/styled/styledComponentSimpleUsage.component.tsx","components/styled/styledComponentStates.component.tsx","components/styled/styledComponentVariants.component.tsx","components/tab/tabBarAccessories.component.tsx","components/tab/tabBarSimpleUsage.component.tsx","components/tab/tabSimpleUsage.component.tsx","components/tab/tabTheming.component.tsx","components/tab/tabViewLazyLoading.component.tsx","components/tab/tabViewSimpleUsage.component.tsx","components/text/textAppearances.component.tsx","components/text/textCategories.component.tsx","components/text/textStatuses.component.tsx","components/themeProvider/themeProviderSimpleUsage.component.tsx","components/toggle/toggleSimpleUsage.component.tsx","components/toggle/toggleStates.component.tsx","components/toggle/toggleStatus.component.tsx","components/toggle/toggleTheming.component.tsx","components/tooltip/tooltipAccessories.component.tsx","components/tooltip/tooltipPlacement.component.tsx","components/tooltip/tooltipSimpleUsage.component.tsx","components/tooltip/tooltipStyledBackdrop.component.tsx","components/topNavigation/topNavigationAccessories.component.tsx","components/topNavigation/topNavigationActionSimpleUsage.component.tsx","components/topNavigation/topNavigationDivider.component.tsx","components/topNavigation/topNavigationImageTitle.component.tsx","components/topNavigation/topNavigationSimpleUsage.component.tsx","components/useStyleSheet/useStyleSheetSimpleUsage.component.tsx","components/useTheme/useThemeSimpleUsage.component.tsx","components/viewPager/viewPagerLazyLoading.component.tsx","components/viewPager/viewPagerSimpleUsage.component.tsx","components/withStyles/withStylesSimpleUsage.component.tsx","navigation/app.navigator.web.tsx","app/app.component.tsx","App.tsx","web-build/register-service-worker.js","../../node_modules/moment/locale sync /^/.//.*$","assets/icon.png"],"names":["MappingContext","React","MappingProvider","this","styles","children","value","ThemeContext","useTheme","ThemeService","create","Object","getValue","themeKey","findValue","theme","isReference","createKeyFromReference","ThemeProvider","StyleProvider","ModalResolver","style","source","componentChildren","StyleSheet","activeOpacity","onPress","defaultProps","visible","ModalServiceType","ModalService","panel","shouldUseTopInsets","element","config","identifier","update","state","ModalPanel","components","Math","key","backdropStyle","onBackdropPress","Array","setState","panelChild","get","childElement","forceUpdate","props","areThereAnyComponents","container","flex","ApplicationProvider","schemaProcessor","customizedMapping","merge","mapping","customMapping","Interaction","State","StyleService","createThemed","createThemedEntry","DOC_ROOT","StyleConsumerService","name","meta","safe","generatedConfig","message","console","appearance","variants","states","styleInfo","getStyleInfo","withValidInteraction","generatedMapping","getGeneratedStyleMapping","JSON","withValidParameters","styleKeys","componentStyles","query","validInteractions","interaction","invalidParameters","variantProps","getDerivedVariants","stateProps","getDerivedStates","matches","isDefault","p","isState","isAssigned","nextValue","transform","info","lhs","rhs","acc","reducer","styled","styleInjector","component","Wrapper","eva","dispatch","forwardedRef","restProps","ref","ResultComponent","WrappingElement","Component","hoistNonReactStatics","DEFAULT_CONFIG","cycles","useNativeDriver","Platform","Animation","counter","running","endCallback","animation","start","stop","end","easing","Easing","duration","PulseAnimation","Animated","scale","restConfig","startAnimation","toValue","endAnimation","offset","ShakeAnimation","translateX","ZoomAnimation","FalsyFC","fallback","Text","textProps","FalsyText","TouchableWithoutFeedback","left","top","right","bottom","hitSlop","useDefaultHitSlop","TouchableWeb","touchableProps","outlineWidth","Point","x","y","other","Size","width","height","Frame","origin","size","equals","window","Dimensions","point","MeasureElement","onUIManagerMeasure","originY","StatusBar","frame","bindToWindow","measureSelf","node","findNodeHandle","UIManager","onLayout","WebEventResponderInstance","eventHandlers","WebEventResponder","onMouseEnter","onMouseLeave","onFocus","onBlur","FlexStartEndMapper","toRTL","rtl","FLEX_PREFIX","RtlFlexMap","alignContent","alignItems","alignSelf","justifyContent","flexDirection","FLEX_ROW_PREFIX","flexWrap","FLEX_WRAP_PREFIX","RTLServiceStatic","RTLService","I18nManager","ltr","isRTL","rtlStyle","currentStyleValue","i18nStyleValue","FlexViewCrossStyleValues","FlexViewCrossStyleProps","FlexStyleProps","PropsService","from","rest","allOf","styleName","IndexPath","row","section","Input","flatStyles","inputContainerStyle","containerStyle","textMarginHorizontal","textFontFamily","textFontSize","textFontWeight","textColor","placeholderColor","iconWidth","iconHeight","iconMarginHorizontal","iconTintColor","labelColor","labelFontSize","labelMarginBottom","labelFontWeight","labelFontFamily","captionColor","captionFontSize","captionFontWeight","captionFontFamily","inputContainer","text","marginHorizontal","fontFamily","fontSize","fontWeight","color","placeholder","icon","tintColor","label","marginBottom","captionLabel","textStyle","caption","accessoryLeft","accessoryRight","testID","textInputProps","evaStyle","getComponentStyle","focusable","placeholderTextColor","webEventResponder","platformStyles","editable","flexGrow","flexShrink","flexBasis","textAlign","default","android","paddingVertical","marginVertical","web","List","index","keyExtractor","flatListProps","Offsets","offsetKeys","flatStyle","offsetValue","MARGIN","MARGIN_HORIZONTAL","MARGIN_VERTICAL","MARGIN_LEFT","MARGIN_TOP","MARGIN_RIGHT","MARGIN_BOTTOM","PlacementOptions","bounds","offsets","PopoverPlacements","RIGHT_START","parent","options","direction","alignment","LEFT_START","RIGHT_END","LEFT_END","RIGHT","fitsEnd","fitsTop","fitsBottom","LEFT","fitsStart","BOTTOM_START","TOP_START","BOTTOM_END","TOP_END","BOTTOM","fitsLeft","fitsRight","TOP","PopoverView","indicatorWidth","indicatorHeight","indicatorBackgroundColor","content","indicator","backgroundColor","isVertical","isStart","isEnd","isReverse","indicatorRotate","indicatorReverseRotate","containerTranslate","INDICATOR_WIDTH","indicatorTranslate","i18nVerticalIndicatorTranslate","rotate","contentContainerStyle","viewProps","directionStyle","PLACEMENT_FAMILIES","PopoverPlacementService","findRecursive","preferredValue","oneOfCurrentFamily","findFromFamily","placement","oneOfReversedFamily","families","firstTruthy","nextPlacement","preferredFrame","familyFrame","familyValue","Popover","childFrame","anchorFrame","forceMeasure","placementOptions","displayFrame","contentFrame","contentElement","fullWidthStyle","onMeasure","modalId","contentPosition","hide","hardwareBackSubscription","BackHandler","isPopoverUnmounted","force","popoverView","position","Autocomplete","listVisible","hasData","onSubmitEditing","isChildCountChanged","data","length","prevProps","shouldBecomeVisible","inputProps","fullWidth","anchor","keyboardShouldPersistTaps","bounces","renderItem","popover","maxHeight","overflow","list","ListItem","titleMarginHorizontal","titleFontFamily","titleFontSize","titleFontWeight","titleColor","descriptionFontFamily","descriptionFontSize","descriptionFontWeight","descriptionColor","descriptionMarginHorizontal","accessoryMarginHorizontal","title","description","accessory","webStyles","onPressIn","onPressOut","renderTemplateChildren","contentContainer","AutocompleteItem","Avatar","roundCoefficient","containerParameters","baseStyle","borderRadius","ImageComponent","imageProps","image","TabIndicator","params","event","animated","contentOffset","addListener","scrollToIndex","removeAllListeners","scrollToOffset","createOffsetAnimation","indicatorLine","renderIndicatorLine","selectedPosition","BottomNavigation","indicatorStyle","selectedIndex","positions","selected","onSelect","tabElements","renderComponentChildren","indicatorElement","item","BottomNavigationTab","iconMarginVertical","textMarginVertical","Button","ButtonGroup","dividerBackgroundColor","dividerWidth","borderWidth","button","borderColor","status","shapeStyle","borderEndWidth","borderEndColor","startShapeStyle","borderTopStartRadius","borderBottomStartRadius","endShapeStyle","borderTopEndRadius","borderBottomEndRadius","renderButtonElements","Divider","ChevronDown","viewBox","data-name","opacity","d","ChevronLeft","ChevronRight","RangeRole","VIEW_MODE_DATE","id","navigationNext","VIEW_MODE_YEAR","pickNext","VIEW_MODE_MONTH","CalendarViewModes","DATE","MONTH","YEAR","CalendarHeader","svgStyle","rotateStyle","fill","IconComponent","onTitlePress","lateralNavigationAllowed","headerButtonText","headerButtonIcon","lateralIcon","subContainer","rotateIcon","CalendarMonthHeader","CalendarPickerRow","CalendarPickerCell","firstRangeItem","lastRangeItem","borderStyle","borderBottomRightRadius","borderTopRightRadius","borderBottomLeftRadius","borderTopLeftRadius","contentBorderWidth","contentBorderRadius","contentBorderColor","contentBackgroundColor","contentTextFontSize","contentTextFontWeight","contentTextColor","contentTextFontFamily","contentText","nextProps","renderContentElement","CalendarPicker","date","disabled","bounding","today","range","shouldComponentUpdate","CalendarDateContent","TranslationWidth","DateService","locale","date1","compareDates","isBetweenIncluding","isSameDay","isSameMonth","isSameYear","DAYS_IN_WEEK","MONTHS_IN_YEAR","EN","dayNames","short","long","monthNames","DEFAULT_OPTIONS","format","startDayOfWeek","NativeDateService","i18nSettings","fecha","i18n","isNaN","parse","SHORT","getFechaDayNames","Date","month","createDate","getMonthEnd","date2","result","year","dayNamesShort","monthNamesShort","batch","target","chunkIndex","res","producer","i","arr","DEFAULT_DATE_OPTIONS","holiday","CalendarDataService","dateService","weeks","yearStart","monthRange","rows","yearRange","numberOfDayPickers","numberOfYears","numberOfYearPickers","days","createDateRangeForMonth","activeMonth","withRangedDates","startOfWeekDayDiff","getStartOfWeekDayDiff","calendarRange","day","isSameStartDate","isSameEndDate","isInRange","rangeRole","withBoundingMonths","isShouldAddPrevBoundingMonth","addPrevBoundingMonth","isShouldAddNextBoundingMonth","addNextBoundingMonth","firstWeek","numberOfBoundingDates","createPrevBoundingDays","lastWeek","createNextBoundingDays","addMonth","daysInMonth","getNumberOfDaysInMonth","startOfMonth","getMonthStart","getDayOfWeek","BaseCalendarComponent","viewMode","visibleDate","pickerDate","headerContainer","paddingHorizontal","divider","daysHeaderContainer","minHeight","minDayStart","maxDayStart","fitsFilter","nextVisibleDate","nextDate","minMonthStart","maxMonthStart","minYearStart","maxYearStart","PICKER_ROWS","minDateFormat","rowStyle","isItemSelected","isItemDisabled","isItemToday","shouldItemUpdate","titleSelector","viewModeId","titleStyle","iconStyle","onNavigationLeftPress","onNavigationRightPress","getCalendarStyle","renderHeaderElement","renderPickerElement","renderFooterElement","getYearStart","getYearEnd","boundingMonth","startView","Calendar","compareDatesSafe","selectionChanged","disablingChanged","Card","bodyPaddingVertical","bodyPaddingHorizontal","accentHeight","accentBackgroundColor","headerPaddingVertical","headerPaddingHorizontal","footerPaddingVertical","footerPaddingHorizontal","body","accent","header","footer","renderStatusAccent","transparent","RangeDateService","startDate","endDate","RangeCalendar","rangeDateService","createRange","rangeChanged","rangeStartPlaceChanged","rangeEndPlaceChanged","CheckMark","Minus","CheckBox","outlineHeight","outlineBorderRadius","outlineBackgroundColor","selectContainer","stroke","strokeWidth","highlight","Icon","renderIconElement","highlightContainer","BaseDatepickerComponent","captionMarginTop","popoverWidth","control","numberOfLines","ellipsizeMode","Datepicker","min","max","initialVisibleDate","filter","renderDay","renderMonth","renderYear","renderFooter","autoDismiss","RangeDatepicker","MenuService","groupIndices","groupDescriptor","Menu","descriptor","nestedElements","listProps","ItemSeparatorComponent","shouldRenderDividers","Drawer","menuProps","showsVerticalScrollIndicator","MenuItem","paddingLeft","titleStyles","indicatorStyles","iconStyles","POSITION_OUTSCREEN","MenuGroup","submenuHeight","expandValue","evaProps","itemProps","renderGroupedItemsIfNeeded","inputRange","outputRange","CHEVRON_DEG_COLLAPSED","CHEVRON_DEG_EXPANDED","outscreen","submenu","DrawerGroup","DrawerItem","SelectService","multiSelect","Select","selectedIndices","placeholderFontSize","placeholderFontWeight","placeholderFontFamily","popoverMaxHeight","popoverBorderRadius","popoverBorderColor","popoverBorderWidth","input","el","SelectItem","textStyles","checked","onChange","renderAccessory","SelectGroup","accessoryProps","groupedProps","renderGroupedItems","selectedElements","indeterminate","createAccessoryProps","throwPackNotFoundError","Error","RegistryService","IconRegistryService","packs","Map","has","pack","iconsPack","getPackOrThrow","getIconFromPack","set","shouldThrow","throwIconNotFoundError","getIconAnimation","iconProps","iconElement","registeredIcon","IconRegistry","requestedPackIndex","defaultIconPack","icons","defaultIcons","registerIcons","Layout","Modal","dimensionsChangeSubscription","show","remove","derivedStyle","centerX","centerY","modalView","OverflowMenu","initialNumToRender","popoverProps","menu","Radio","iconBorderRadius","RadioGroup","itemMarginVertical","radioElements","renderRadioElements","BaseBezierEasing","StartArcEasing","EndArcEasing","PI2","SpinnerAnimation","OFFSET_MAX","progress","boundedProgress","animationValue","setValue","containerInterpolation","startArcInterpolation","createArcInterpolation","endArcInterpolation","toStyleTransformProp","translateY","Spinner","arc","arcSize","animatingChanged","animating","stopAnimation","release","containerSize","renderArcElement","noOverflow","TabBar","indicatorBorderRadius","renderTabElements","ViewPager","PanResponder","i18nOffset","nextSelectedIndex","selectedPageOffset","animationDuration","contentView","childCount","contentWidth","swipeEnabled","panResponderConfig","panResponder","animatedViewProps","shouldLoadComponent","TabViewChildElement","TabViewChildren","tabs","contents","TabView","tab","tabBarStyle","onOffsetChange","Tab","Toggle","gestureState","thumbHeight","thumbBorderRadius","thumbBackgroundColor","ellipseContainer","ellipse","thumb","elevation","callback","toggleContainer","PopoverIndicator","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","borderLeftColor","borderRightColor","Tooltip","TopNavigation","titleContainer","rightControlsContainer","titleTextAlign","subtitleTextAlign","subtitleFontFamily","subtitleFontSize","subtitleFontWeight","subtitleColor","subtitle","evaStyles","alignmentStyles","getAlignmentDependentStyles","containerCentered","titleContainerCentered","leftControlContainer","zIndex","rightControlsContainerStart","TopNavigationAction","EvaIcon","svgProps","fillColor","EvaIconsPack","findIconByName","themes","Eva","Light","Dark","Material","material","AppMapping","AppTheme","setMapping","setTheme","isDarkMode","ShowcaseSettings","themeIconRef","themeContext","nextMapping","nextTheme","level","onSwitchMappingButtonPress","ThemeIcon","onSwitchThemeButtonPress","ShowcaseCaption","category","ShowcaseIFrame","postLayoutChangeEvent","card","orangeTheme","ShowcaseThemingIFrame","currentTheme","OrangeThemeProvider","movies","StarIcon","AutocompleteAccessoriesShowcase","setData","clearInput","renderCloseIcon","onChangeText","renderOption","requestDataWithDebounce","AwesomeDebouncePromise","requestData","fetch","AutocompleteAsyncShowcase","setQuery","updateData","response","json","applyFilter","showEvent","hideEvent","AutocompleteHandleKeyboardShowcase","setPlacement","keyboardShowListener","Keyboard","keyboardHideListener","AutocompleteSimpleUsageShowcase","AvatarImageComponentShowcase","require","AvatarShapeShowcase","shape","avatar","margin","AvatarSimpleUsageShowcase","AvatarSizeShowcase","padding","PersonIcon","BellIcon","EmailIcon","useBottomNavigationState","initialState","setSelectedIndex","BottomNavigationAccessoriesShowcase","topState","bottomState","bottomNavigation","BottomNavigationSimpleUsageShowcase","BottomNavigationTabSimpleUsageShowcase","BottomNavigationTabThemingShowcase","BottomNavigationWithoutIndicatorShowcase","LoadingIndicator","ButtonAccessoriesShowcase","ButtonAppearancesShowcase","ButtonGhostShowcase","controlContainer","ButtonOutlineShowcase","ButtonSimpleUsageShowcase","setCounter","ButtonSizeShowcase","ButtonStatesShowcase","ButtonStatusShowcase","ButtonThemingShowcase","ButtonGroupAppearanceShowcase","buttonGroup","ButtonGroupGhostShowcase","ButtonGroupOutlineShowcase","ButtonGroupSimpleUsageShowcase","setText","ButtonGroupSizeShowcase","ButtonGroupStatusShowcase","ButtonGroupWithIconsShowcase","DayCell","CalendarCustomDayShowcase","setDate","dayContainer","aspectRatio","useCalendarState","now","yesterday","tomorrow","CalendarFiltersShowcase","minMaxCalendarState","filterCalendarState","boundingCalendarState","calendarContainer","CalendarInitialVisibleDateShowcase","selectedDate","setSelectedDate","componentRef","scrollToToday","scrollToSelected","localeDateService","CalendarLocaleSettingsShowcase","MomentDateService","setMomentLocaleData","months","years","getYear","getMonth","getDate","moment","localeData","momentLocaleData","firstDayOfWeek","defaultFormat","CalendarMomentShowcase","CalendarSimpleUsageShowcase","CalendarThemingShowcase","setRange","nextRange","RangeCalendarSimpleUsageShowcase","Header","Footer","CardAccessoriesShowcase","topContainer","footerContainer","footerControl","CardSimpleUsageShowcase","CardStatusesShowcase","CheckboxIndeterminateShowcase","allChecked","setAllChecked","setIndeterminate","readChecked","setReadChecked","writeChecked","setWriteChecked","updateGroup","someChecked","everyChecked","onGroupCheckedChange","onReadCheckedChange","onWriteCheckedChange","group","option","CheckboxSimpleUsageShowcase","setChecked","nextChecked","CheckboxStatesShowcase","activeChecked","setActiveChecked","indeterminateChecked","setIndeterminateChecked","onIndeterminateChange","checkbox","useCheckboxState","initialCheck","CheckboxStatusShowcase","primaryCheckboxState","successCheckboxState","infoCheckboxState","warningCheckboxState","dangerCheckboxState","basicCheckboxState","controlCheckboxState","CheckboxThemingShowcase","CalendarIcon","DatepickerAccessoriesShowcase","DatepickerCustomDayShowcase","useDatepickerState","initialDate","DatepickerFiltersShowcase","minMaxPickerState","filterPickerState","boundingPickerState","rowContainer","picker","DatepickerInitialVisibleDateShowcase","setInitialVisibleDate","formatDateService","DatepickerLocaleSettingsShowcase","dateFormatPickerState","localePickerState","DatepickerMomentShowcase","DatepickerSimpleUsageShowcase","DatepickerSizeShowcase","smallDatepickerState","mediumDatepickerState","largeDatepickerState","datepicker","DatepickerStatusShowcase","primaryDatepickerState","successDatepickerState","infoDatepickerState","warningDatepickerState","dangerDatepickerState","basicDatepickerState","DatepickerThemingShowcase","RangeDatepickerSimpleUsageShowcase","DividerSimpleUsageShowcase","details","installButton","ForwardIcon","DrawerAccessoriesShowcase","SmartphoneIcon","BrowserIcon","ColorPaletteIcon","DrawerGroupsShowcase","DrawerItemSimpleUsageShowcase","DrawerNoMarkersShowcase","selectedTitle","setSelectedTitle","onUsersPress","onOrdersPress","onTransactionsPress","onSettingsPress","DrawerSimpleUsageShowcase","DrawerThemingShowcase","IconAnimationShowcase","zoomIconRef","pulseIconRef","shakeIconRef","infiniteAnimationIconRef","noAnimationIconRef","renderZoomIcon","renderPulseIcon","renderShakeIcon","renderInfiniteAnimationIcon","animationConfig","renderNoAnimationIcon","IconSimpleUsageShowcase","IconThemingShowcase","HeartIcon","IconWithinComponentsShowcase","secureTextEntry","setSecureTextEntry","selectIndex","setSelectIndex","menuVisible","setMenuVisible","tooltipVisible","setTooltipVisible","toggleSecureEntry","toggleTooltip","toggleMenu","renderInputIcon","renderMenuButton","renderTooltipButton","buttonContainer","InputAccessoriesShowcase","renderCaption","AlertIcon","renderIcon","captionContainer","display","captionIcon","marginRight","captionText","InputSimpleUsageShowcase","useInputState","initialValue","InputSizeShowcase","smallInputState","mediumInputState","largeInputState","multilineInputState","multiline","InputStatesShowcase","InputStatusShowcase","primaryInputState","successInputState","infoInputState","warningInputState","dangerInputState","basicInputState","controlInputState","InputThemingShowcase","LayoutLevelShowcase","layout","ListAccessoriesShowcase","renderItemAccessory","renderItemIcon","ListCustomItemShowcase","renderItemFooter","headerProps","renderItemHeader","ListDividersShowcase","InstallButton","ItemImage","ListItemSimpleUsageShowcase","ListSimpleUsageShowcase","useMenuState","MenuAccessoriesShowcase","leftMenuState","rightMenuState","MenuDisabledOptionsShowcase","MenuGroupsShowcase","MenuItemSimpleUsageShowcase","MenuNoMarkersShowcase","MenuSimpleUsageShowcase","MenuThemingShowcase","ModalSimpleUsageShowcase","setVisible","ModalWithBackdropShowcase","backdrop","OverflowMenuAccessoriesShowcase","renderToggleButton","OverflowMenuFullWidthShowcase","onItemSelect","OverflowMenuNoMarkersShowcase","placements","OverflowMenuPlacementShowcase","placementIndex","setPlacementIndex","onPlacementSelect","renderPlacementItem","OverflowMenuSimpleUsageShowcase","OverflowMenuStyledBackdropShowcase","OverflowMenuWithDisabledItemsShowcase","OverflowMenuWithoutDividerShowcase","PopoverFullWidthShowcase","PopoverPlacementShowcase","PopoverSimpleUsageShowcase","PopoverStyledBackdropShowcase","RadioSimpleUsageShowcase","RadioStatesShowcase","radio","useRadioState","RadioStatusShowcase","primaryRadioState","successRadioState","infoRadioState","warningRadioState","dangerRadioState","basicRadioState","controlRadioState","RadioThemingShowcase","RadioGroupSimpleUsageShowcase","SelectAccessoriesShowcase","SelectDisabledOptionsShowcase","groupedData","SelectDisplayValueShowcase","multiSelectedIndex","setMultiSelectedIndex","displayValue","groupDisplayValues","groupTitle","renderGroup","select","SelectItemSimpleUsageShowcase","SelectMultiSelectShowcase","SelectSimpleUsageShowcase","useSelectState","SelectSizeShowcase","smallSelectState","mediumSelectState","largeSelectState","SelectStatesShowcase","SelectStatusShowcase","primarySelectState","successSelectState","infoSelectState","warningSelectState","dangerSelectState","basicSelectState","controlSelectState","SelectThemingShowcase","SelectWithGroupsShowcase","DATA","SpinnerDataLoadingShowcase","setTimeout","loadData","renderDataItem","loading","SpinnerSimpleUsageShowcase","SpinnerSizesShowcase","SpinnerStatusesShowcase","SpinnerThemingShowcase","StyledComponent","StyledComponentSimpleUsageShowcase","StyledComponentStatesShowcase","StyledComponentVariantsShowcase","useTabBarState","TabBarAccessoriesShowcase","TabBarSimpleUsageShowcase","TabSimpleUsageShowcase","TabThemingShowcase","TabViewLazyLoadingShowcase","tabContainer","TabViewSimpleUsageShowcase","TextAppearancesShowcase","alternativeContainer","TextCategoriesShowcase","TextStatusesShowcase","ThemeProviderSimpleUsageShowcase","ToggleSimpleUsageShowcase","onCheckedChange","ToggleStatesShowcase","onActiveCheckedChange","toggle","useToggleState","ToggleStatusShowcase","primaryToggleState","successToggleState","infoToggleState","warningToggleState","dangerToggleState","basicToggleState","controlToggleState","ToggleThemingShowcase","InfoIcon","TooltipAccessoriesShowcase","TooltipPlacementShowcase","TooltipSimpleUsageShowcase","TooltipStyledBackdropShowcase","BackIcon","EditIcon","MenuIcon","LogoutIcon","TopNavigationAccessoriesShowcase","renderMenuAction","renderBackAction","renderRightActions","TopNavigationActionSimpleUsageShowcase","SettingsIcon","TopNavigationDividerShowcase","renderSettingsAction","TopNavigationImageTitleShowcase","renderTitle","renderOverflowMenuAction","logo","BackAction","TopNavigationSimpleUsageShowcase","UseStyleSheetSimpleUsageShowcase","useStyleSheet","useMemo","themedStyles","UseThemeSimpleUsageShowcase","ViewPagerLazyLoadingShowcase","ViewPagerSimpleUsageShowcase","WithStylesSimpleUsageShowcase","withStyles","createStyles","ThemedComponent","routes","AutocompleteAccessories","AutocompleteAsync","AutocompleteHandleKeyboard","AutocompleteSimpleUsage","AvatarImageComponent","AvatarShape","AvatarSimpleUsage","AvatarSize","BottomNavigationAccessories","BottomNavigationSimpleUsage","BottomNavigationTabSimpleUsage","BottomNavigationTabTheming","BottomNavigationWithoutIndicator","ButtonAccessories","ButtonAppearances","ButtonGhost","ButtonOutline","ButtonSimpleUsage","ButtonSize","ButtonStates","ButtonStatus","ButtonTheming","ButtonGroupAppearance","ButtonGroupGhost","ButtonGroupOutline","ButtonGroupSimpleUsage","ButtonGroupSize","ButtonGroupStatus","ButtonGroupWithIcons","CalendarCustomDay","CalendarFilters","CalendarInitialVisibleDate","CalendarLocaleSettings","CalendarMoment","CalendarSimpleUsage","CalendarTheming","RangeCalendarSimpleUsage","CardAccessories","CardSimpleUsage","CardStatuses","CheckboxIndeterminate","CheckboxSimpleUsage","CheckboxStates","CheckboxStatus","CheckboxTheming","DatepickerAccessories","DatepickerCustomDay","DatepickerFilters","DatepickerInitialVisibleDate","DatepickerLocaleSettings","DatepickerMoment","DatepickerSimpleUsage","DatepickerSize","DatepickerStatus","DatepickerTheming","RangeDatepickerSimpleUsage","DividerSimpleUsage","DrawerAccessories","DrawerGroups","DrawerItemSimpleUsage","DrawerNoMarkers","DrawerSimpleUsage","DrawerTheming","IconAnimation","IconSimpleUsage","IconTheming","IconWithinComponents","InputAccessories","InputSimpleUsage","InputSize","InputStates","InputStatus","InputTheming","LayoutLevel","ListAccessories","ListCustomItem","ListDividers","ListItemSimpleUsage","ListSimpleUsage","MenuAccessories","MenuDisabledOptions","MenuGroups","MenuItemSimpleUsage","MenuNoMarkers","MenuSimpleUsage","MenuTheming","ModalSimpleUsage","ModalWithBackdrop","OverflowMenuAccessories","OverflowMenuFullWidth","OverflowMenuNoMarkers","OverflowMenuPlacement","OverflowMenuSimpleUsage","OverflowMenuStyledBackdrop","OverflowMenuWithDisabledItems","OverflowMenuWithoutDivider","PopoverFullWidth","PopoverPlacement","PopoverSimpleUsage","PopoverStyledBackdrop","RadioSimpleUsage","RadioStates","RadioStatus","RadioTheming","RadioGroupSimpleUsage","SelectAccessories","SelectDisabledOptions","SelectDisplayValue","SelectItemSimpleUsage","SelectMultiSelect","SelectSimpleUsage","SelectSize","SelectStates","SelectStatus","SelectTheming","SelectWithGroups","SpinnerDataLoading","SpinnerSimpleUsage","SpinnerSizes","SpinnerStatuses","SpinnerTheming","StyledComponentSimpleUsage","StyledComponentStates","StyledComponentVariants","TabBarAccessories","TabBarSimpleUsage","TabSimpleUsage","TabTheming","TabViewLazyLoading","TabViewSimpleUsage","TextAppearances","TextCategories","TextStatuses","ThemeProviderSimpleUsage","ToggleSimpleUsage","ToggleStates","ToggleStatus","ToggleTheming","TooltipAccessories","TooltipPlacement","TooltipSimpleUsage","TooltipStyledBackdrop","TopNavigationAccessories","TopNavigationActionSimpleUsage","TopNavigationDivider","TopNavigationImageTitle","TopNavigationSimpleUsage","UseStyleSheetSimpleUsage","UseThemeSimpleUsage","ViewPagerLazyLoading","ViewPagerSimpleUsage","WithStylesSimpleUsage","AppStack","createStackNavigator","headerMode","AppNavigator","createBrowserApp","history","mappings","storedMapping","localStorage","enableScreens","applicationProviderConfig","themeContextProviderConfig","dispatchMappingChange","Updates","navigator","scope","error","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/app.ac18bf3c.chunk.js","sourcesContent":["import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\n\nconst defaultValue: ThemeStyleType = {};\n\nexport const MappingContext: React.Context<ThemeStyleType> = React.createContext(defaultValue);\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { MappingContext } from './mappingContext';\n\nexport interface MappingProviderProps {\n  styles: ThemeStyleType;\n  children?: React.ReactNode;\n}\n\nexport class MappingProvider extends React.PureComponent<MappingProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, children } = this.props;\n\n    return (\n      <MappingContext.Provider\n        value={styles}>\n        {children}\n      </MappingContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeType } from './theme.service';\n\nconst defaultTheme: ThemeType = {};\n\nexport const ThemeContext: React.Context<ThemeType> = React.createContext(defaultTheme);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\n\nexport type ThemeValue = string;\nexport type ThemeType = Record<string, ThemeValue>;\n\n/**\n * Takes an actual theme provided by ApplicationProvider or ThemeProvider and\n * @returns it to a functional component.\n *\n * @overview-example UseThemeSimpleUsage\n */\nexport const useTheme = (): ThemeType => {\n  return React.useContext(ThemeContext);\n};\n\n/**\n * Service for working with Eva themes\n */\nexport class ThemeService {\n\n  /**\n   * @returns compiled theme since Eva theme may contain variables referencing each other.\n   */\n  static create = (theme: ThemeType): ThemeType => {\n    return Object.keys(theme).reduce((acc: ThemeType, key: string): ThemeType => {\n      return { ...acc, [key]: ThemeService.getValue(key, theme, key) };\n    }, {});\n  };\n\n  /**\n   * Finds theme value recursively since eva theme variables can reference each other.\n   *\n   * @returns ThemeValue if found, fallback param otherwise.\n   */\n  static getValue = (name: string,\n                     theme: ThemeType,\n                     fallback?: ThemeValue): ThemeValue | undefined => {\n\n    if (ThemeService.isReference(name)) {\n      const themeKey: string = ThemeService.createKeyFromReference(name);\n      return ThemeService.findValue(themeKey, theme) || fallback;\n    }\n\n    return ThemeService.findValue(name, theme) || fallback;\n  };\n\n  /**\n   * Finds theme value recursively since eva theme variables can reference each other.\n   *\n   * @returns ThemeValue if found.\n   */\n  private static findValue = (name: string, theme: ThemeType): ThemeValue | undefined => {\n    const value: ThemeValue = theme[name];\n\n    if (ThemeService.isReference(value)) {\n      const themeKey: string = ThemeService.createKeyFromReference(value);\n      return ThemeService.findValue(themeKey, theme);\n    }\n\n    return value;\n  };\n\n  /**\n   * @returns true if theme value references to another\n   */\n  private static isReference = (value: ThemeValue): boolean => {\n    return `${value}`.startsWith('$');\n  };\n\n  /**\n   * Transforms reference key to theme key\n   */\n  private static createKeyFromReference = (value: ThemeValue): string => {\n    return `${value}`.substring(1);\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\nimport {\n  ThemeService,\n  ThemeType,\n} from './theme.service';\n\nexport interface ThemeProviderProps {\n  theme: ThemeType;\n  children?: React.ReactNode;\n}\n\n/**\n * Since ApplicationProvider is the root component of the application,\n * it provides same theme for all underlying components.\n *\n * ThemeProvider allows modifying this theme so that each component that is the child\n * of ThemeProvider will use modified theme.\n *\n * @overview-example ThemeProviderSimpleUsage\n */\nexport class ThemeProvider extends React.PureComponent<ThemeProviderProps> {\n\n  public render(): React.ReactNode {\n    const { theme, children } = this.props;\n\n    return (\n      <ThemeContext.Provider\n        value={ThemeService.create(theme)}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MappingProvider,\n  MappingProviderProps,\n} from '../mapping/mappingProvider.component';\nimport {\n  ThemeProvider,\n  ThemeProviderProps,\n} from '../theme/themeProvider.component';\n\nexport type StyleProviderProps = MappingProviderProps & ThemeProviderProps;\n\nexport class StyleProvider extends React.PureComponent<StyleProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, theme, children } = this.props;\n\n    return (\n      <MappingProvider styles={styles}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </MappingProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { ModalPresentingConfig } from './modal.service';\n\ntype ChildElement = React.ReactElement;\ntype ChildrenProp = ChildElement | ChildElement[];\n\nexport interface ModalResolverProps extends ViewProps, ModalPresentingConfig {\n  visible: boolean;\n  children: ChildrenProp;\n  backdropStyle: StyleProp<ViewStyle>;\n  onBackdropPress: () => void;\n}\n\nexport class ModalResolver extends React.Component<ModalResolverProps> {\n\n  static defaultProps: Partial<ModalResolverProps> = {\n    visible: false,\n  };\n\n  private renderChildElement = (source: ChildElement): ChildElement => {\n    return React.cloneElement(source, {\n      style: [source.props.style, this.props.style],\n    });\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): ChildElement[] => {\n    return React.Children.map(source, this.renderChildElement);\n  };\n\n  private renderComponent = (): React.ReactElement<ViewProps> => {\n    const componentChildren = this.renderComponentChildren(this.props.children);\n\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <TouchableOpacity\n          style={[StyleSheet.absoluteFill, this.props.backdropStyle]}\n          activeOpacity={1.0}\n          onPress={this.props.onBackdropPress}\n        />\n        {componentChildren}\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> | undefined {\n    return this.props.visible && this.renderComponent();\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\n/**\n * Singleton service designed to manage modal components.\n *\n * @type ModalService\n *\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\n * Shows component in a modal window. Returns its id.\n *\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\n *\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\n *\n * @property {boolean} getShouldUseTopInsets - returns `true` if StatusBar additional offset is not enabled, returns `false`\n * if StatusBar additional offset is enabled.\n *\n * @property {boolean} setShouldUseTopInsets - `true` value enables StatusBar additional offset, `false` disables StatusBar\n * additional offset\n *\n * @overview-example Simple Usage example\n * ModalService simple usage example.\n *\n * ```\n * import React from 'react';\n * import { Layout, Button, Text, ModalService } from '@ui-kitten/components';\n *\n * export const ModalServiceShowcase = () => {\n *\n *   let modalID = '';\n *\n *   const showModal = () => {\n *     const contentElement = renderModalContentElement();\n *     modalID = ModalService.show(contentElement, { onBackdropPress: hideModal });\n *   };\n *\n *   const hideModal = () => {\n *     ModalService.hide(modalID);\n *   };\n *\n *   const renderModalContentElement = () => {\n *     return (\n *       <Layout>\n *         <Text>Hi, I'm modal!</Text>\n *       </Layout>\n *     );\n *   };\n *\n *   return (\n *     <Layout>\n *       <Button onPress={showModal}>SHOW MODAL</Button>\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\n *     </Layout>\n *   );\n * }\n * ```\n *\n * @overview-example StatusBar additional offset support configuration\n * ModalService could also control additional status bar offset configuration for all related UI Kitten measurable elements like\n * [Modal](components/modal) and [Popover](components/popover).\n *\n * ```\n * import React from 'react';\n * import * as eva from '@eva-design/eva';\n * import { ApplicationProvider, Layout, Text, ModalService } from '@ui-kitten/components';\n *\n * ModalService.setShouldUseTopInsets = true //applies StatusBar additional offset\n *\n * const HomeScreen = () => (\n *   <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * export default () => {\n *\n *   return (\n *     <ApplicationProvider {...eva} theme={eva.light}>\n *       <HomeScreen />\n *     </ApplicationProvider>\n *   )\n * };\n * ```\n */\nclass ModalServiceType {\n\n  panel: ModalPresenting | null = null;\n  private shouldUseTopInsets: boolean = false;\n\n  public mount(panel: ModalPresenting | null): void {\n    this.panel = panel;\n  }\n\n  public unmount(): void {\n    this.panel = null;\n  }\n\n  public show(element: React.ReactElement, config: ModalPresentingConfig): string {\n    if (this.panel) {\n      return this.panel.show(element, config);\n    }\n  }\n\n  public update(identifier: string, children: React.ReactElement): void {\n    if (this.panel) {\n      this.panel.update(identifier, children);\n    }\n  }\n\n  public hide(identifier: string): string {\n    if (this.panel) {\n      return this.panel.hide(identifier);\n    }\n  }\n\n  public set setShouldUseTopInsets(state: boolean) {\n    this.shouldUseTopInsets = state;\n  }\n\n  public get getShouldUseTopInsets(): boolean {\n    return this.shouldUseTopInsets;\n  }\n}\n\nexport interface ModalPresentingConfig {\n  backdropStyle?: StyleProp<ViewStyle>;\n  onBackdropPress?: () => void;\n}\n\nexport interface ModalPresenting {\n  show(element: React.ReactElement, config: ModalPresentingConfig): string;\n\n  hide(identifier: string): string;\n\n  update(identifier: string, children: React.ReactElement): void;\n}\n\nexport const ModalService = new ModalServiceType();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  ModalResolver,\n  ModalResolverProps,\n} from './modalResolver.component';\nimport {\n  ModalPresenting,\n  ModalPresentingConfig,\n  ModalService,\n} from './modal.service';\n\ninterface ModalPanelChild extends ModalPresentingConfig {\n  element: React.ReactElement;\n}\n\nexport interface ModalPanelProps {\n  children: React.ReactNode;\n}\n\ninterface ModalPanelState {\n  components: Map<string, ModalPanelChild>;\n}\n\nexport class ModalPanel extends React.Component<ModalPanelProps, ModalPanelState> implements ModalPresenting {\n\n  public state: ModalPanelState = {\n    components: new Map(),\n  };\n\n  public componentDidMount(): void {\n    ModalService.mount(this);\n  }\n\n  public componentWillUnmount(): void {\n    ModalService.unmount();\n  }\n\n  public hide = (identifier: string): string => {\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    this.setState({ components });\n    return '';\n  };\n\n  public show(element: React.ReactElement, config: ModalPresentingConfig): string {\n    const key: string = this.generateUniqueComponentKey();\n    const components: Map<string, ModalPanelChild> = this.state.components\n                                                         .set(key, { ...config, element });\n\n    this.setState({ components });\n\n    return key;\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    const panelChild: ModalPanelChild = this.state.components.get(identifier);\n\n    if (!panelChild) {\n      return;\n    }\n\n    const childElement: React.ReactElement = panelChild.element;\n    panelChild.element = React.cloneElement(childElement, childElement.props, children);\n\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.set(identifier, panelChild);\n    this.forceUpdate();\n  }\n\n  private generateUniqueComponentKey = (): string => {\n    return Math.random().toString(36).substring(2);\n  };\n\n  private areThereAnyComponents = (): boolean => {\n    return this.state.components && this.state.components.size !== 0;\n  };\n\n  private renderModal = (config: ModalPanelChild, index: number): React.ReactElement<ModalResolverProps> => {\n    return (\n      <ModalResolver\n        key={index}\n        visible={true}\n        backdropStyle={config.backdropStyle}\n        onBackdropPress={config.onBackdropPress}>\n        {config.element}\n      </ModalResolver>\n    );\n  };\n\n  private renderModals = (): React.ReactElement<ModalResolverProps>[] => {\n    return Array.from(this.state.components.values()).map(this.renderModal);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <View style={styles.container}>\n        {this.props.children}\n        {this.areThereAnyComponents() && this.renderModals()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","/**\n  * @license\n  * Copyright Akveo. All Rights Reserved.\n  * Licensed under the MIT License. See License.txt in the project root for license information.\n  */\n\nimport React from 'react';\nimport merge from 'lodash.merge';\nimport { SchemaProcessor } from '@eva-design/processor';\nimport {\n  CustomSchemaType,\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport { StyleProvider } from '../style/styleProvider.component';\nimport { ThemeProviderProps } from '../theme/themeProvider.component';\nimport { ModalPanel } from '../modal/modalPanel.component';\n \ninterface EvaRuntimeProcessingProps {\n  mapping: SchemaType;\n  customMapping?: CustomSchemaType;\n}\n \ninterface EvaBuildtimeProcessingProps {\n  styles: ThemeStyleType;\n}\n \ntype EvaProcessingProps = EvaRuntimeProcessingProps | EvaBuildtimeProcessingProps;\n \nexport type ApplicationProviderProps = EvaProcessingProps & ThemeProviderProps;\nexport type ApplicationProviderElement = React.ReactElement<ApplicationProviderProps>;\n \ninterface State {\n  styles: ThemeStyleType;\n}\n \n/**\n * Overall application container.\n *\n * @extends React.Component\n *\n * @property {ReactNode} children - Overall application component.\n * Usually, a router or nested providers.\n *\n * @property {SchemaType} mapping - Mapping for UI Kitten components.\n * This is designed to be provided from any `@eva-design/*` package.\n * If provided, will be merged with *customMapping* and compiled into styles during the runtime.\n * Can be improved with build-time processing with `@ui-kitten/metro-config` package.\n *\n * @property {CustomSchemaType} customMapping - Customized mapping.\n *\n * @property {ThemeType} theme - Current theme.\n * Designed to be provided from any `@eva-design/*` package.\n *\n * @property {ThemeStyleType} styles - Styles compiled by bootstrapping Eva packages.\n * If provided, will replace runtime styles processing.\n * Usually, can be provided by `@ui-kitten/metro-config` package.\n *\n * @overview-example Simple Usage\n * ApplicationProvider is designed to be the root component of the application.\n * It should be rendered **once**, to provide Eva styles for nested components.\n * ```\n * import React from 'react';\n * import { ApplicationProvider, Layout, Text } from '@ui-kitten/components';\n * import * as eva from '@eva-design/eva';\n *\n * export default () => (\n *   <ApplicationProvider {...eva} theme={eva.light}> // <-- {eva.dark} for dark mode\n *     <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *       <Text>Welcome to UI Kitten</Text>\n *     </Layout>\n *   </ApplicationProvider>\n * );\n * ```\n *\n * @overview-example Ecosystem\n * Also, it may accept [custom themes](guides/branding) and [icon packages](guides/icon-packages)\n * to provide a highly customizable, design system based application.\n * ```\n * import React from 'react';\n * import { ApplicationProvider, IconRegistry, Layout, Text } from '@ui-kitten/components';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons';\n * import * as eva from '@eva-design/eva';\n *\n * export default () => (\n *   <React.Fragment>\n *     <IconRegistry icons={EvaIconsPack} />\n *     <ApplicationProvider {...eva} theme={{ ...eva.light, ...myTheme }}>\n *       <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *         <Text>Welcome to UI Kitten</Text>\n *       </Layout>\n *     </ApplicationProvider>\n *   </React.Fragment>\n * );\n * ```\n */\nexport class ApplicationProvider extends React.Component<ApplicationProviderProps, State> {\n\n  public state: State = {\n    styles: (this.props as EvaBuildtimeProcessingProps).styles,\n  };\n\n  private schemaProcessor: SchemaProcessor = new SchemaProcessor();\n\n  constructor(props: ApplicationProviderProps) {\n    super(props);\n\n    if (!this.state.styles) {\n      const { mapping, customMapping } = this.props as EvaRuntimeProcessingProps;\n      this.state.styles = this.createStyles(mapping, customMapping);\n    }\n  }\n \n  private createStyles = (mapping: SchemaType, custom: CustomSchemaType): ThemeStyleType => {\n    const customizedMapping: SchemaType = merge({}, mapping, custom);\n    return this.schemaProcessor.process(customizedMapping);\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <StyleProvider\n        theme={this.props.theme}\n        styles={this.state.styles}>\n        <ModalPanel>\n          {this.props.children}\n        </ModalPanel>\n      </StyleProvider>\n    );\n  }\n}","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ThemeService,\n  ThemeType,\n  useTheme,\n} from '../theme/theme.service';\n\nexport type StyleType = Record<string, any>;\nexport type Styles<T> = StyleSheet.NamedStyles<T>;\n\n/**\n * User interactions that can be handled by Eva.\n */\nexport enum Interaction {\n  HOVER = 'hover',\n  ACTIVE = 'active',\n  FOCUSED = 'focused',\n  INDETERMINATE = 'indeterminate',\n  VISIBLE = 'visible',\n}\n\n/**\n * Component states that can be handled by Eva.\n */\nexport enum State {\n  CHECKED = 'checked',\n  SELECTED = 'selected',\n  DISABLED = 'disabled',\n}\n\n/**\n * Takes a theme provided by ApplicationProvider or ThemeProvider and applies it to style.\n * Consider not using this function when not using Eva theme variables.\n *\n * @overview-example UseStyleSheetSimpleUsage\n */\nexport const useStyleSheet = <T extends Styles<T>>(styles: Styles<T>): T => {\n  const theme: ThemeType = useTheme();\n\n  return useMemo(() => {\n    return StyleService.createThemed(styles, theme);\n  }, [theme]);\n};\n\n/**\n * Service for creating styles that fit current theme.\n * Unlike StyleSheet class exported from React Native package, it allows using Eva theme variables.\n */\nexport class StyleService {\n\n  /**\n   * Unlike `StyleSheet.create` from RN package,\n   * this does nothing with `styles` validation because of inability to process Eva theme variables\n   * and returns styles as it is just to support the syntax we used to.\n   *\n   * However, this may be useful to have this function\n   * because future RN versions may allow pre-processing.\n   * @see {StyleSheet.setStyleAttributePreprocessor}\n   *\n   * Notice it is better to use `StyleSheet.create` from RN package since it does style registering.\n   * You don't need to use this function if custom variables are not used.\n   *\n   * When using Eva theme variables, `useStyleSheet` should be called.\n   *\n   * @example\n   * ```\n   * const Component = () => {\n   *   const styles = useStyleSheet(themedStyles);\n   *   return (\n   *     <View style={styles.container} />\n   *   );\n   * };\n   *\n   * const themedStyles = StyleService.create({\n   *   container: { backgroundColor: 'color-primary-default' },\n   * });\n   * ```\n   */\n  static create = <T extends Styles<T>>(styles: T): T => {\n    return styles;\n  };\n\n  /**\n   * @returns stylesheet mapped to theme\n   */\n  static createThemed = <T extends Styles<T>>(styles: Styles<T>, theme: ThemeType): T => {\n    return Object.keys(styles).reduce((acc: T, key: string): T => {\n      return { ...acc, [key]: StyleService.createThemedEntry(styles[key], theme) };\n    }, {} as T);\n  };\n\n  /**\n   * @returns a style mapped to theme\n   */\n  static createThemedEntry = (style: StyleType, theme: ThemeType): StyleType => {\n    return Object.keys(style).reduce((acc: StyleType, key: string): StyleType => {\n      const value: any = style[key];\n      return { ...acc, [key]: ThemeService.getValue(value, theme, value) };\n    }, {});\n  };\n}\n\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ControlMetaType,\n  ControlThemedStyleType,\n  ThemedStyleType,\n} from '@eva-design/dss';\nimport { StyledComponentProps } from './styled';\nimport {\n  Interaction,\n  StyleService,\n  StyleType,\n} from './style.service';\nimport { ThemeType } from '../theme/theme.service';\n\nconst SEPARATOR_MAPPING_ENTRY: string = '.';\nconst DOC_ROOT: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\ninterface StyleInfo {\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class StyleConsumerService {\n\n  private readonly name: string;\n  private readonly meta: ControlMetaType;\n\n  constructor(name: string, style: StyleType) {\n    this.name = name;\n\n    this.meta = this.safe(style[name], (generatedConfig): ControlMetaType => {\n      return generatedConfig.meta;\n    });\n\n    if (!this.meta) {\n      const message: string = [\n        `\\n${this.name}: unsupported configuration.`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `📖 Documentation: ${DOC_ROOT}/guides/getting-started#manual-installation`,\n        '\\nIn case you have all in place, there might be an incorrect usage of a \"styled\" function.',\n        `📖 Documentation: ${DOC_ROOT}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.error(message);\n    }\n  }\n\n  public createDefaultProps<P extends object>(): StyledComponentProps {\n    const appearance: string = this.getDefaultAppearance();\n    const variants: { [key: string]: string } = this.getDefaultVariants();\n    const states: { [key: string]: boolean } = this.getDefaultStates();\n\n    return { appearance, ...variants, ...states };\n  }\n\n  public createStyleProp<P extends object>(source: P,\n                                           style: StyleType,\n                                           theme: ThemeType,\n                                           interaction: Interaction[]): StyleType {\n\n    const styleInfo: StyleInfo = this.getStyleInfo(source, this.withValidInteraction(interaction));\n    const generatedMapping: StyleType = this.getGeneratedStyleMapping(style, styleInfo);\n\n    if (!generatedMapping) {\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following prop values: ${JSON.stringify(styleInfo, null, 2)}`,\n        `📖 Documentation: ${DOC_ROOT}/components/${this.name.toLowerCase()}/api`,\n      ].join('\\n');\n\n      console.warn(message);\n\n      return this.createStyleProp({ ...source, ...this.createDefaultProps() }, style, theme, interaction);\n    }\n\n    const mapping: StyleType = this.withValidParameters(generatedMapping);\n\n    return StyleService.createThemedEntry(mapping, theme);\n  }\n\n  private getGeneratedStyleMapping<P extends StyledComponentProps>(style: StyleType, info: StyleInfo): StyleType {\n\n    return this.safe(style[this.name], (componentStyles: ControlThemedStyleType): ThemedStyleType => {\n      const styleKeys: string[] = Object.keys(componentStyles.styles);\n      const query: string = this.findGeneratedQuery(info, styleKeys);\n\n      return componentStyles.styles[query];\n    });\n  }\n\n  private withValidInteraction(interaction: Interaction[]): Interaction[] {\n    const validInteractions: Interaction[] = interaction.filter((key: Interaction) => {\n      return Object.keys(this.meta.states).includes(key);\n    });\n\n    if (validInteractions.length < interaction.length) {\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following dispatched interactions: ${interaction}`,\n        `📖 Documentation: ${DOC_ROOT}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return validInteractions;\n  }\n\n  private withValidParameters(mapping: StyleType): StyleType {\n    const invalidParameters: string[] = [];\n\n    Object.keys(mapping).forEach((key: string) => {\n      if (!Object.keys(this.meta.parameters).includes(key)) {\n        invalidParameters.push(key);\n        delete mapping[key];\n      }\n    });\n\n    if (invalidParameters.length !== 0) {\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Unable to apply ${invalidParameters}`,\n        'There might be an incorrect usage of mapping',\n        `📖 Documentation: ${DOC_ROOT}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return mapping;\n  }\n\n  private getStyleInfo<P extends StyledComponentProps>(props: P,\n                                                       interaction: Interaction[]): StyleInfo {\n    const variantProps: Partial<P> = this.getDerivedVariants(this.meta, props);\n    const stateProps: Partial<P> = this.getDerivedStates(this.meta, props);\n\n    const variants: string[] = Object.keys(variantProps).map((variant: string): string => {\n      return variantProps[variant];\n    });\n\n    const states: string[] = Object.keys(stateProps);\n\n    return {\n      appearance: props.appearance,\n      variants: variants,\n      states: [...states, ...interaction],\n    };\n  }\n\n  private getDefaultAppearance(): string {\n    const matches: string[] = Object.keys(this.meta.appearances).filter((appearance: string): boolean => {\n      return this.meta.appearances[appearance].default === true;\n    });\n\n    return matches[matches.length - 1];\n  }\n\n  private getDefaultVariants(): { [key: string]: any } {\n    return this.transformObject(this.meta.variantGroups, (variants, group: string): string | undefined => {\n      return Object.keys(variants[group]).find((variant: string): boolean => {\n\n        return variants[group][variant].default === true;\n      });\n    });\n  }\n\n  private getDefaultStates(): { [key: string]: any } {\n    return this.transformObject(this.meta.states, (states, state: string): boolean | undefined => {\n      const isDefault: boolean = states[state].default === true;\n\n      return isDefault ? isDefault : undefined;\n    });\n  }\n\n  private getDerivedVariants<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): string | undefined => {\n      const isVariant: boolean = Object.keys(meta.variantGroups).includes(prop);\n\n      return isVariant ? p[prop] : undefined;\n    });\n  }\n\n  private getDerivedStates<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): boolean => {\n      const isState: boolean = Object.keys(meta.states).includes(prop);\n      const isAssigned: boolean = p[prop] === true;\n\n      return isState && isAssigned;\n    });\n  }\n\n  /**\n   * Iterates throw `value` object keys and fills it values with values provided by `transform` callback\n   * If `transform` returns `undefined`, then appends nothing\n   *\n   * @param value (V extends object) - object to transform\n   * @param transform - object key transformation callback\n   */\n  private transformObject<V extends object>(value: V, transform: (value: V, key: string) => any): Partial<V> {\n    return Object.keys(value).reduce((acc: Partial<V>, key: string): any => {\n      const nextValue: any = transform(value, key);\n\n      return nextValue ? {\n        ...acc,\n        [key]: nextValue,\n      } : acc;\n    }, {});\n  }\n\n  /**\n   * Finds identical keys across `source` keys array\n   *\n   * Example:\n   *\n   * source = ['default.error.small.checked', ...]\n   * info = { appearance: 'default', variants: ['small', 'error'], states: ['checked'] }\n   *\n   * will return ['default', 'error', 'small', 'checked']\n   *\n   * @param info (StyleInfo) - component style info\n   * @param source (string[]) - array of style keys\n   *\n   * @return (string | undefined) - key identical to some of `source` keys if presents\n   */\n  private findGeneratedQuery(info: StyleInfo, source: string[]): string | undefined {\n    const query: string[] = [\n      info.appearance,\n      ...info.variants,\n      ...info.states,\n    ];\n\n    return source.find((value) => this.compareArrays(query, value.split(SEPARATOR_MAPPING_ENTRY)));\n  }\n\n  /**\n   * @param lhs (string[]) - comparable array\n   * @param rhs (string[]) - comparing array\n   *\n   * @return true if all of lhs keys are included in rhs\n   */\n  private compareArrays(lhs: string[], rhs: string[]): boolean {\n    if (lhs.length !== rhs.length) {\n      return false;\n    }\n\n    return lhs.reduce((acc: boolean, current: string): boolean => acc && rhs.includes(current), true);\n  }\n\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   * @param fallback (R) - fallback value to return. Optional\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `fallback` otherwise\n   **/\n  private safe<T, R>(value: T | undefined, reducer: (value: T) => R, fallback?: R): R | undefined {\n    if (value) {\n      return reducer(value);\n    }\n\n    return fallback;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { StyleConsumerService } from './styleConsumer.service';\nimport {\n  Interaction,\n  StyleType,\n} from './style.service';\nimport { MappingContext } from '../mapping/mappingContext';\nimport { ThemeContext } from '../theme/themeContext';\nimport { ThemeType } from '../theme/theme.service';\n\ninterface PrivateRefProps<T = React.ReactInstance> {\n  forwardedRef?: React.Ref<T>;\n}\n\nexport interface EvaProp {\n  theme?: ThemeType;\n  style?: StyleType;\n  dispatch?: (interaction: Interaction[]) => void;\n}\n\nexport interface StyledComponentProps {\n  appearance?: string;\n  eva?: EvaProp;\n}\n\ninterface State {\n  interaction: Interaction[];\n}\n\ntype WrappedComponentProps = any;\n// TODO: Better types. React.ComponentType<WrappedComponentProps>?\ntype WrappedComponent = any;\ntype StyledComponent = any;\n\n/**\n * `@styled` is a High Order Function to apply style mapping on a component.\n * Used by all UI Kitten components and can be used when building custom components with Eva.\n *\n * @property {string} appearance - Appearance of component. Default is provided by mapping.\n *\n * @property {EvaProp} eva - Additional property injected to all `styled` components. Includes following properties:\n * `theme` - current theme,\n * `style` - style provided by Eva,\n * `dispatch` - Function for requesting styles from Eva for current component state.\n *\n * @param name - Type: {string}. Name of the component in mapping.json.\n *\n * @overview-example StyledComponentSimpleUsage\n * The below examples demonstrate how components can be styled with Eva.\n * See [the guide](design-system/custom-component-mapping) for more details.\n *\n * @overview-example StyledComponentEvaProp\n * A styled function injects `eva` property into props of decorated component, where\n * theme - a current theme,\n * styles - a styles object provided by Eva\n * dispatch - a function to request styles for a particular state.\n *\n * ```\n * interface EvaProp {\n *   theme: ThemeType;\n *   style: StyleType;\n *   dispatch: (interaction: Interaction[]) => void;\n * }\n * ```\n *\n * @overview-example StyledComponentStates\n * Styled components may describe its style for a particular state.\n *\n * Let's say we don't like the standard behavior of TouchableOpacity when it's pressed and\n * we want the component to change it's color rather being highlighted.\n *\n * We define an active state in `meta` key and in mapping, so that component will change `backgroundColor`,\n * when `active` is requested. To do this, we call `dispatch` function when Touchable is pressed.\n * Then, when touch is released, we request nothing, which stands for `default`.\n *\n * @overview-example StyledComponentVariants\n * Now let's say we want to have a `status` property to make component change its color, for example,\n * within the forms validation. Furthermore, we want to control its color for both statuses when it is pressed.\n *\n * The `variantGroups` key in `meta` defines all properties that can be applied by component.\n * Each key in variant group is a string value that can be passed to component props.\n */\nexport const styled = (name: string): StyledComponent => {\n  return (component: WrappedComponent): StyledComponent => {\n    return styleInjector(component, name);\n  };\n};\n\nconst styleInjector = (Component: WrappedComponent, name: string): StyledComponent => {\n\n  if (!name) {\n    console.warn('Components annotated with @styled function should also have its in mapping.json.');\n    return null;\n  }\n\n  class Wrapper extends React.PureComponent<PrivateRefProps, State> {\n    public state: State = {\n      interaction: [],\n    };\n\n    private init: boolean = false;\n    private defaultProps: WrappedComponentProps;\n    private service: StyleConsumerService;\n\n    private onInit = (style: ThemeStyleType, theme: ThemeType): void => {\n      this.service = new StyleConsumerService(name, style);\n      this.defaultProps = this.service.createDefaultProps();\n      this.init = true;\n    };\n\n    private onDispatch = (interaction: Interaction[]): void => {\n      this.setState({ interaction });\n    };\n\n    private withEvaProp = (sourceProps: WrappedComponentProps,\n                           sourceStyle: ThemeStyleType,\n                           theme: ThemeType): StyledComponentProps => {\n\n      const props: WrappedComponentProps = { ...this.defaultProps, ...sourceProps };\n      const style: StyleType = this.service.createStyleProp(props, sourceStyle, theme, this.state.interaction);\n\n      return {\n        ...props,\n        eva: {\n          theme,\n          style,\n          dispatch: this.onDispatch,\n        },\n      };\n    };\n\n    private renderWrappedElement = (style: ThemeStyleType, theme: ThemeType): React.ReactElement => {\n      if (!this.init) {\n        this.onInit(style, theme);\n      }\n\n      const { forwardedRef, ...restProps } = this.props;\n\n      return (\n        <Component\n          {...this.withEvaProp(restProps as any, style, theme)}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactElement {\n      return (\n        <MappingContext.Consumer>{(style: ThemeStyleType): React.ReactElement => (\n          <ThemeContext.Consumer>{(theme: ThemeType): React.ReactElement => {\n            return this.renderWrappedElement(style, theme);\n          }}</ThemeContext.Consumer>\n        )}</MappingContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappedComponentProps, ref: React.Ref<React.ReactInstance>): React.ReactElement => {\n    return (\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ResultComponent = React.forwardRef<React.ReactInstance, PrivateRefProps>(WrappingElement);\n  ResultComponent.displayName = Component.displayName || Component.name;\n  hoistNonReactStatics(ResultComponent, Component);\n\n  return ResultComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeContext } from './themeContext';\nimport { ThemeType } from './theme.service';\nimport { Styles } from '../style/style.service';\nimport { EvaProp } from '../style/styled';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\nexport interface ThemedComponentProps<T extends Styles<T> = any> {\n  eva?: EvaProp;\n}\n\nexport type ThemedComponentClass<P, S extends Styles<S>> = React.ComponentClass<ThemedComponentProps<S> & P>;\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\ntype CreateStylesFunction<T extends Styles<T>> = (theme: ThemeType) => T;\n\n/**\n * High Order Function for creating styles mapped to current theme\n * Returns component class which can be used as themed component.\n *\n * @param Component - Type: {ComponentType}. Component to be themed.\n *\n * @param createStyles - Type: {(ThemeType) => NamedStyles}. Function used to create styles mapped on theme.\n *\n * @overview-example WithStylesSimpleUsage\n *\n * @overview-example WithStylesEvaProp\n * A withStyles function injects `eva` property into props of wrapped component, where\n * theme - a current theme,\n * styles - a styles object provided by a function used as a second argument of withStyles.\n * ```\n * interface EvaProp {\n *   theme: ThemeType;\n *   style: StyleType;\n * }\n * ```\n */\nexport const withStyles = <P extends object, S>(Component: React.ComponentType<P>,\n                                                createStyles?: CreateStylesFunction<S>): ThemedComponentClass<P, S> => {\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = ThemedComponentProps<S> & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.PureComponent<WrappingProps> {\n\n    private withThemedProps = (props: P, theme: ThemeType): WrappedProps => {\n      const style = createStyles && createStyles(theme);\n      return {\n        ...props,\n        eva: {\n          theme,\n          style,\n        },\n      };\n    };\n\n    private renderWrappedElement = (theme: ThemeType): React.ReactElement<ThemedComponentProps<S>> => {\n      const { forwardedRef, ...restProps } = this.props;\n      const props: WrappedProps = this.withThemedProps(restProps as P, theme);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactElement {\n      return (\n        <ThemeContext.Consumer>\n          {this.renderWrappedElement}\n        </ThemeContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ThemedComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ThemedComponent.displayName = Component.displayName || Component.name;\n\n  hoistNonReactStatics(ThemedComponent, Component);\n\n  // @ts-ignore\n  return ThemedComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Platform,\n} from 'react-native';\n\nexport const DEFAULT_CONFIG: AnimationConfig = {\n  cycles: 1,\n  useNativeDriver: Platform.OS !== 'web',\n};\n\n/**\n * @property {number} cycles - number of animation cycles. -1 for infinite\n */\nexport interface AnimationConfig extends Animated.AnimationConfig {\n  cycles?: number;\n}\n\nexport abstract class Animation<C extends AnimationConfig, R> {\n\n  protected abstract animation: Animated.CompositeAnimation;\n  protected counter: number = 0;\n  protected endCallback: Animated.EndCallback;\n  protected running: boolean = false;\n  protected config: C;\n\n  constructor(config?: C) {\n    this.config = {\n      ...DEFAULT_CONFIG,\n      ...config,\n    };\n  }\n\n  public abstract toProps(): R;\n\n  public start(callback?: Animated.EndCallback) {\n    this.endCallback = callback;\n    this.running = true;\n\n    this.animation.start(this.onAnimationEnd);\n  }\n\n  public stop() {\n    this.running = false;\n\n    this.animation.stop();\n  }\n\n  public release() {\n    this.stop();\n  }\n\n  protected onAnimationEnd = (result: Animated.EndResult) => {\n    this.counter += 1;\n    if (this.counter === this.config.cycles) {\n      this.stop();\n    }\n    if (this.running) {\n      this.start(this.endCallback);\n    }\n    if (!this.running) {\n      this.counter = 0;\n      this.endCallback && this.endCallback(result);\n      this.endCallback = null;\n    }\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing, Platform,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: PulseAnimationConfig = {\n  start: 1.0,\n  end: 1.25,\n  easing: Easing.linear,\n  duration: 500,\n  useNativeDriver: Platform.OS !== 'web',\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface PulseAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class PulseAnimation extends Animation<PulseAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  constructor(config?: PulseAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing, Platform,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ShakeAnimationConfig = {\n  start: 0.0,\n  offset: 2.5,\n  easing: Easing.linear,\n  duration: 25,\n  cycles: 8,\n  useNativeDriver: Platform.OS !== 'web',\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ShakeAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  offset?: number;\n}\n\nexport class ShakeAnimation extends Animation<ShakeAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  constructor(config?: ShakeAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, offset, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? -offset : offset,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? offset : -offset,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ translateX: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing, Platform,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ZoomAnimationConfig = {\n  start: 1.0,\n  end: 0.5,\n  easing: Easing.linear,\n  duration: 500,\n  useNativeDriver: Platform.OS !== 'web',\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ZoomAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class ZoomAnimation extends Animation<ZoomAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  constructor(config?: ZoomAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","import React from 'react';\n\nexport type RenderFCProp<Props = {}> = (props?: Props) => React.ReactElement;\n\nexport type RenderProp<Props = {}> = RenderFCProp<Props> | React.ReactElement\n\nexport type FalsyFCProps<Props = {}> = Props & {\n  component?: RenderProp<Props>;\n  fallback?: React.ReactElement;\n};\n\n/**\n * Helper component for optional properties that should render a component.\n *\n * Accepts props of a component that is expected to be rendered,\n * and `component` which may be a string, a function, null or undefined.\n *\n * If it is a function, will call it with props passed to this component.\n * Otherwise, will return null.\n *\n * @property {RenderProp} component - Function component to be rendered.\n * @property {React.ReactElement} fallback - Element to render if children is null or undefined.\n *\n * @example Will render nothing.\n * ```\n * <FalsyFC />\n * ```\n *\n * @example Will render red title.\n * ```\n * const Title = () => (\n *   <FalsyFC\n *     style={{ color: 'red' }}\n *     component={props => <Text {...props}>Title</Text>}\n *   />\n * );\n * ```\n */\nexport class FalsyFC<Props = {}> extends React.Component<FalsyFCProps<Props>> {\n\n  public render(): React.ReactElement {\n    const { component, fallback, ...props } = this.props;\n\n    if (!component) {\n      return fallback || null;\n    }\n\n    if (React.isValidElement(component)) {\n      return React.cloneElement(component, props);\n    }\n\n    return React.createElement(component as RenderFCProp<Props>, props as Props);\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\nimport {\n  EvaStatus,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype TextStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | 'alternative' | 'hint'>;\n}>;\n\ntype ChildElement = React.ReactText | TextElement;\n\nexport interface TextProps extends RNTextProps, TextStyledProps {\n  children?: ChildElement | ChildElement[];\n  category?: LiteralUnion<'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 's1' | 's2' | 'p1' | 'p2' | 'c1' | 'c2' | 'label'>;\n  status?: EvaStatus;\n}\n\nexport type TextElement = React.ReactElement<TextProps>;\n\n/**\n * Basic text writing.\n *\n * @extends React.Component\n *\n * @property {ReactText | ReactElement<TextProps>} children - String or number to be rendered as text.\n * Also can be ReactElement<TextProps> - nested Text component.\n *\n * @property {string} appearance - Can be `default`, `alternative` or `hint`.\n * Use `alternative` for displaying light text on a dark content and vice versa.\n * Use `hint` for giving user a hint on something.\n *\n * @property {string} category - Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.\n * Defaults to *p1*.\n * Use *h* categories when needed to display headings.\n * Use *s* categories when needed to display subtitles.\n * Use *p* categories when needed to display regular text.\n * Use *c* and *label* categories when needed to give user a hint on something.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TextProps} ...TextProps - Any props applied to Text component.\n *\n * @overview-example TextCategories\n * Text has pre-defined set of styles for headings, subtitles, paragraphs, and more.\n *\n * @overview-example TextAppearances\n * Also, it has 2 types of additional appearances:\n * `hint` and `alternative`.\n *\n * Use hints when needed to give user a hint on action.\n * And use alternative when needed to display light text in light themes (same for dark).\n *\n * @overview-example TextStatuses\n *\n * @overview-example TextStyling\n * Text can be styled with `style` property.\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n * ```\n * import { Text } from '@ui-kitten/components';\n *\n * <Text style={...}>Place your Text</Text>\n * ```\n */\n@styled('Text')\nexport class Text extends React.Component<TextProps> {\n\n  public render(): React.ReactElement<RNTextProps> {\n    const { eva, style, ...textProps } = this.props;\n\n    return (\n      <RNText\n        {...textProps}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { RenderProp } from '../falsyFC/falsyFC.component';\nimport {\n  Text,\n  TextProps,\n} from '../../../ui/text/text.component';\n\nexport interface FalsyTextProps extends Omit<TextProps, 'children'> {\n  component?: RenderProp<TextProps> | React.ReactText;\n}\n\n/**\n * Helper component for optional text properties.\n *\n * Accepts same props as Text component,\n * and `component` which may be a string, a function, null or undefined.\n *\n * If it is null or undefined, will render nothing.\n * If it is a function, will call it with props passed to this component.\n * Otherwise, will render a Text with props passed to this component.\n *\n * @example Will render nothing.\n * ```\n * <FalsyText />\n * ```\n *\n * @example Will render red title.\n * ```\n * const Title = () => (\n *   <FalsyText style={{ color: 'red' }} component='Title' />\n * );\n * ```\n *\n * @example Will render image and red title.\n * ```\n * const renderTitle = (props) => (\n *   <React.Fragment>\n *     <Image source={require('../asset.png')}/>\n *     <Text {...props}>Title</Text>\n *   </React.Fragment>\n * );\n *\n * const Title = () => (\n *   <FalsyText\n *     style={{ color: 'red' }}\n *     component={renderTitle}\n *   />\n * );\n * ```\n */\nexport class FalsyText extends React.Component<FalsyTextProps> {\n\n  public render(): React.ReactElement {\n    const { component, ...textProps } = this.props;\n\n    if (!component) {\n      return null;\n    }\n\n    if (React.isValidElement(component)) {\n      return React.cloneElement(component, textProps as TextProps);\n    }\n\n    if (typeof component === 'function') {\n      return React.createElement(component, textProps as TextProps);\n    }\n\n    return (\n      <Text {...textProps}>\n        {component}\n      </Text>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Insets,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  ViewStyle,\n} from 'react-native';\n\nexport interface TouchableWithoutFeedbackProps extends TouchableOpacityProps {\n  useDefaultHitSlop?: boolean;\n  children?: React.ReactNode;\n  focusable?: boolean;\n}\n\nexport type TouchableWithoutFeedbackElement = React.ReactElement<TouchableWithoutFeedbackProps>;\n\n/**\n * Helper component for the Touchable component with no opacity feedback.\n *\n * Applies recommended hitSlop by default.\n * @see https://reactnative.dev/docs/view#hitslop\n *\n * Allows passing ReactNode as children whereas original TouchableWithoutFeedback not.\n */\nexport class TouchableWithoutFeedback extends React.Component<TouchableWithoutFeedbackProps> {\n\n  private createHitSlopInsets = (): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(this.props.style || {});\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.height || 0;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  public render(): React.ReactElement {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={this.props.useDefaultHitSlop && this.createHitSlopInsets()}\n        {...this.props}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  NativeSyntheticEvent,\n  Platform,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n} from './touchableWithoutFeedback.component';\n\nexport interface TouchableWebProps extends TouchableWithoutFeedbackProps {\n  onMouseEnter?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onMouseLeave?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onFocus?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n  onBlur?: (e: NativeSyntheticEvent<TargetedEvent>) => void;\n}\n\nexport type TouchableWebElement = React.ReactElement<TouchableWebProps>;\n\n/**\n * Helper component for the Touchable component rendered on the web.\n */\nexport class TouchableWeb extends React.Component<TouchableWebProps> {\n\n  public render(): React.ReactElement {\n    const { style, ...touchableProps } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        {...touchableProps}\n        style={[styles.container, style]}\n      />\n    );\n  }\n}\n\nconst styles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n\n","import {\n  Dimensions,\n  ScaledSize,\n} from 'react-native';\n\nexport class Point {\n\n  constructor(readonly x: number,\n              readonly y: number) {\n  }\n\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n\n  static outscreen(): Point {\n    return new Point(-999, -999);\n  }\n\n  public equals(other: Point): boolean {\n    if (!other) {\n      return false;\n    }\n    return this.x === other.x && this.y === other.y;\n  }\n}\n\nexport class Size {\n\n  constructor(readonly width: number,\n              readonly height: number) {\n\n  }\n\n  static zero(): Size {\n    return new Size(0, 0);\n  }\n\n  public equals(other: Size): boolean {\n    if (!other) {\n      return false;\n    }\n    return this.width === other.width && this.height === other.height;\n  }\n}\n\nexport class Frame {\n\n  readonly origin: Point;\n  readonly size: Size;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.origin = new Point(x, y);\n    this.size = new Size(width, height);\n  }\n\n  static zero(): Frame {\n    return new Frame(0, 0, 0, 0);\n  }\n\n  static window(): Frame {\n    const window: ScaledSize = Dimensions.get('window');\n    return new Frame(0, 0, window.width, window.height);\n  }\n\n  static outscreen(): Frame {\n    const point: Point = Point.outscreen();\n    return new Frame(point.x, point.y, 0, 0);\n  }\n\n  public equals(other: Frame): boolean {\n    if (!other) {\n      return false;\n    }\n    return this.origin.equals(other.origin) && this.size.equals(other.size);\n  }\n\n  /**\n   * Creates new frame aligned to left of other\n   */\n  public leftOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x - this.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to top of other\n   */\n  public topOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y - this.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to right of other\n   */\n  public rightOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + other.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to bottom of other\n   */\n  public bottomOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + other.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered horizontally to other\n   */\n  public centerHorizontalOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered vertically to other\n   */\n  public centerVerticalOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  public centerOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n  StatusBar,\n} from 'react-native';\nimport { Frame } from './type';\n \nexport interface MeasureElementProps<P = any> {\n  force?: boolean;\n  shouldUseTopInsets?: boolean;\n  onMeasure: (frame: Frame) => void;\n  children: React.ReactElement<P>;\n}\n\nexport type MeasuringElement<P = any> = React.ReactElement;\n \n/**\n * Measures child element size and it's screen position asynchronously.\n * Returns measure result in `onMeasure` callback.\n *\n * Usage:\n *\n * ```tsx\n * const onMeasure = (frame: Frame): void => {\n *   const { x, y } = frame.origin;\n *   const { width, height } = frame.size;\n *   ...\n * };\n *\n * <MeasureElement\n *   shouldUseTopInsets={ModalService.getShouldUseTopInsets} \n *   onMeasure={onMeasure}>\n *   <ElementToMeasure />\n * </MeasureElement>\n * ```\n *\n * By default, it measures each time onLayout is called,\n * but `force` property may be used to measure any time it's needed.\n * DON'T USE THIS FLAG IF THE COMPONENT RENDERS FIRST TIME OR YOU KNOW `onLayout` WILL BE CALLED.\n */\nexport const MeasureElement: React.FC<MeasureElementProps> = (props): MeasuringElement => {\n\n  const ref = React.useRef<any>();\n\n  const bindToWindow = (frame: Frame, window: Frame): Frame => {\n    if (frame.origin.x < window.size.width) {\n      return frame;\n    }\n\n    const boundFrame: Frame = new Frame(\n      frame.origin.x - window.size.width,\n      frame.origin.y,\n      frame.size.width,\n      frame.size.height,\n    );\n\n    return bindToWindow(boundFrame, window);\n  };\n\n  const onUIManagerMeasure = (x: number, y: number, w: number, h: number): void => {\n    const originY = props.shouldUseTopInsets ? y + StatusBar.currentHeight || 0 : y;\n    const frame: Frame = bindToWindow(new Frame(x, originY, w, h), Frame.window());\n    props.onMeasure(frame);\n  };\n\n  const measureSelf = (): void => {\n    const node: number = findNodeHandle(ref.current);\n    UIManager.measureInWindow(node, onUIManagerMeasure);\n  };\n\n  if (props.force) {\n    measureSelf();\n  }\n\n  return React.cloneElement(props.children, { ref, onLayout: measureSelf });\n};\n\nMeasureElement.defaultProps = {\n  shouldUseTopInsets: false,\n}","export interface WebEventResponderCallbacks {\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport class WebEventResponderInstance {\n  readonly eventHandlers: WebEventResponderCallbacks;\n\n  constructor(props: WebEventResponderCallbacks) {\n    this.eventHandlers = props;\n  }\n}\n\nclass WebEventResponderStatic {\n  static create(config: WebEventResponderCallbacks): WebEventResponderInstance {\n    return new WebEventResponderInstance({\n      onMouseEnter: () => {\n        config.onMouseEnter && config.onMouseEnter();\n      },\n      onMouseLeave: () => {\n        config.onMouseLeave && config.onMouseLeave();\n      },\n      onFocus: () => {\n        config.onFocus && config.onFocus();\n      },\n      onBlur: () => {\n        config.onBlur && config.onBlur();\n      },\n    });\n  }\n}\n\nexport const WebEventResponder = WebEventResponderStatic;\n","const FLEX_PREFIX: string = 'flex';\nconst FLEX_ROW_PREFIX: string = 'row';\nconst FLEX_WRAP_PREFIX: string = 'wrap';\nconst FLEX_START_PREFIX: string = 'start';\nconst FLEX_END_PREFIX: string = 'end';\nconst FLEX_REVERSE_PREFIX: string = 'reverse';\n\n/**\n * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n *\n * E.g justifyContent: flex-start\n */\nconst FlexStartEndMapper: RTLFlexMapper<string> = {\n  toRTL(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_END_PREFIX);\n\n    if (isReverse) {\n      return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n    }\n\n    return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n *\n * E.g flexDirection: row-reverse\n */\nconst FlexRowMapper: RTLFlexMapper<string> = {\n  toRTL(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_REVERSE_PREFIX);\n\n    if (isReverse) {\n      return FLEX_ROW_PREFIX;\n    }\n\n    return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n *\n * E.g flexWrap: wrap-reverse\n */\nconst FlexWrapMapper: RTLFlexMapper<string> = {\n  toRTL(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n\n    if (isReverse) {\n      return FLEX_WRAP_PREFIX;\n    }\n\n    return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n */\nexport const RtlFlexMap: Record<string, RTLFlexMapper<any>> = {\n  alignContent: FlexStartEndMapper,\n  alignItems: FlexStartEndMapper,\n  alignSelf: FlexStartEndMapper,\n  justifyContent: FlexStartEndMapper,\n  flexDirection: FlexRowMapper,\n  flexWrap: FlexWrapMapper,\n};\n\ninterface RTLFlexMapper<T> {\n  toRTL(value: T, rtl: boolean): T;\n}\n","import {\n  I18nManager,\n  ViewStyle,\n} from 'react-native';\nimport { RtlFlexMap } from './rtlFlexMap';\n\nclass RTLServiceStatic {\n\n  /**\n   * @returns true if it is Right-to-Left layout\n   */\n  public isRTL(): boolean {\n    return I18nManager.isRTL;\n  }\n\n  public select<T>(ltr: T, rtl: T): T {\n    return this.isRTL() ? rtl : ltr;\n  }\n\n  /**\n   * Iterates through {RtlFlexMap} and reverses style values if needed.\n   *\n   * @param {ViewStyle} source - style to convert\n   * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)\n   *\n   * @returns {ViewStyle} - style reversed to fit RTL\n   */\n  public ignoreRTL(source: ViewStyle, rtl: boolean = this.isRTL()): ViewStyle {\n    const rtlStyle: ViewStyle = Object.keys(RtlFlexMap).reduce((style: ViewStyle, prop: string): ViewStyle => {\n      const currentStyleValue = source[prop];\n      if (currentStyleValue) {\n        const i18nStyleValue = RtlFlexMap[prop].toRTL(currentStyleValue, rtl);\n        return {\n          ...style,\n          [prop]: i18nStyleValue,\n        };\n      }\n\n      return style;\n    }, {});\n\n    return { ...source, ...rtlStyle };\n  }\n}\n\nexport const RTLService = new RTLServiceStatic();\n","import { StyleType } from '../../../theme';\n\nexport const TextStyleProps: string[] = [\n\n  // TextStyle\n\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'textAlign',\n  'textDecorationLine',\n  'textDecorationStyle',\n  'textDecorationColor',\n  'textShadowColor',\n  'textShadowColor',\n  'textShadowOffset',\n  'textShadowRadius',\n\n  // TextStyleIOS\n\n  'textTransform',\n  'writingDirection',\n\n  // TextStyleAndroid\n\n  'textAlignVertical',\n  'includeFontPadding',\n];\n\nexport const FlexStyleProps: string[] = [\n  'alignContent',\n  'alignItems',\n  'alignSelf',\n  'aspectRatio',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderStartWidth',\n  'borderTopWidth',\n  'borderWidth',\n  'bottom',\n  'display',\n  'end',\n  'flex',\n  'flexBasis',\n  'flexDirection',\n  'flexGrow',\n  'flexShrink',\n  'flexWrap',\n  'height',\n  'justifyContent',\n  'left',\n  'margin',\n  'marginBottom',\n  'marginEnd',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginStart',\n  'marginTop',\n  'marginVertical',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'overflow',\n  'padding',\n  'paddingBottom',\n  'paddingEnd',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingStart',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'start',\n  'top',\n  'width',\n  'zIndex',\n\n  // ios\n\n  'direction',\n];\n\nconst FlexViewCrossStyleValues = [\n  'borderBottomWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderWidth',\n];\n\nexport const FlexViewCrossStyleProps: string[] = FlexStyleProps.filter((el) => !FlexViewCrossStyleValues.includes(el));\n\nexport interface Props {\n  [key: string]: any;\n}\n\nexport interface RestProps {\n  rest?: Partial<Props>;\n}\n\nexport type AllOfProps = Partial<Props>;\nexport type AllWithRestProps = Partial<Props> & RestProps;\n\nclass NativePropsService {\n  /**\n   * Retrieves all props included in `from` array\n   *\n   * @param source (Props) - source object\n   * @param from (string[]) - array of keys needed to retrieve from `source`\n   *\n   * @return (Partial<Props>) - object with keys contained in `from` array\n   */\n\n  public all(source: Props | undefined, from: string[]): AllOfProps {\n    if (!source) {\n      return {};\n    }\n\n    return from.reduce((acc: Partial<AllOfProps>, prop: string): Partial<AllOfProps> => {\n      return { ...acc, [prop]: source[prop] };\n    }, {});\n  }\n\n  /**\n   * Retrieves all props included in `from` array, rest props includes in under the `rest` key\n   */\n  public allWithRest(source: Props | undefined, from: string[]): AllWithRestProps {\n    if (!source) {\n      return { rest: {} };\n    }\n\n    return Object.keys(source).reduce((acc: Partial<AllWithRestProps>, prop: string): Partial<AllWithRestProps> => {\n      const { rest, ...allOf } = acc;\n\n      if (from.includes(prop)) {\n        return { ...allOf, [prop]: source[prop], rest };\n      }\n\n      return { ...allOf, rest: { ...rest, [prop]: source[prop] } };\n    }, {});\n  }\n\n  /**\n   * Returns all styles with prefix\n   *\n   * @param {StyleType} source - Eva Styles\n   * @param {string} key - prefix\n   *\n   * @return {StyleType} - all styles with prefix\n   */\n  public allWithPrefix(source: StyleType, key: string): StyleType {\n    return Object.keys(source)\n                 .filter((styleName: string) => styleName.includes(key))\n                 .reduce((obj: StyleType, styleKey: string) => {\n                   return {\n                     ...obj,\n                     [styleKey]: source[styleKey],\n                   };\n                 }, {});\n  }\n}\n\nexport const PropsService = new NativePropsService();\n","import { ReactElement } from 'react';\n\nexport type ChildrenProp<Element extends ReactElement = ReactElement> = Element | Element[];\nexport type ChildrenWithProps<Props = {}> = ChildrenProp<ReactElement<Props>>;\n\n\n/*\n * https://github.com/microsoft/TypeScript/issues/29729#issuecomment-505826972\n */\nexport type LiteralUnion<T extends U, U = string> = T | (U & {});\n\nexport type EvaStatus = LiteralUnion<'basic' | 'primary' | 'success' | 'info' | 'warning' | 'danger' | 'control'>;\nexport type EvaSize = LiteralUnion<'tiny' | 'small' | 'medium' | 'large' | 'giant'>;\nexport type EvaInputSize = LiteralUnion<'small' | 'medium' | 'large'>;\n\nexport class IndexPath {\n\n  constructor(readonly row: number, readonly section?: number) {\n  }\n\n  get groupIndex(): IndexPath {\n    return this.section >= 0 && new IndexPath(this.row);\n  }\n\n  public toString(): string {\n    if (this.section >= 0) {\n      return `${this.section + 1}.${this.row + 1}`;\n    }\n    return (this.row + 1).toString();\n  }\n\n  public equals = (other: IndexPath): boolean => {\n    if (!other) {\n      return false;\n    }\n    return this.row === other.row && this.section === other.section;\n  };\n}\n\n/*\n * @see https://github.com/piotrwitek/utility-types#overwritet-u\n */\nexport type Overwrite<T extends object, U extends object, I = Diff<T, U> & Intersection<U, T>> = Pick<I, keyof I>;\n\n/*\n * @see https://github.com/piotrwitek/utility-types#intersectiont-u\n */\nexport type Intersection<T extends object, U extends object> =\n  Pick<T, Extract<keyof T, keyof U> & Extract<keyof U, keyof T>>;\n\n/*\n * @see https://github.com/piotrwitek/utility-types#setdifferencea-b-same-as-exclude\n */\nexport type SetDifference<A, B> = A extends B ? never : A;\n\n/*\n * @see https://github.com/piotrwitek/utility-types#difft-u\n */\nexport type Diff<T extends object, U extends object> = Pick<T, SetDifference<keyof T, keyof U>>;\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  NativeSyntheticEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputProps,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  EvaSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  FlexViewCrossStyleProps,\n  PropsService,\n  RenderProp,\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n  Overwrite,\n  LiteralUnion,\n  TouchableWithoutFeedback,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype InputStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface InputProps extends TextInputProps, InputStyledProps {\n  status?: EvaStatus;\n  size?: EvaSize;\n  disabled?: boolean;\n  label?: RenderProp<TextProps> | React.ReactText;\n  caption?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  textStyle?: StyleProp<TextStyle>;\n}\n\nexport type InputElement = React.ReactElement<InputProps>;\n\n/**\n * Inputs let users enter and edit text.\n *\n * @extends React.Component\n *\n * @property {string} value - A value displayed in input field.\n *\n * @property {(string) => void} onChangeText - Called when the value should be changed.\n *\n * @property {() => void} onFocus - Called when input field becomes focused.\n *\n * @property {() => void} onBlur - Called when input field looses focus.\n *\n * @property {string} placeholder - A string to be displayed when there is no value.\n *\n * @property {boolean} disabled - Whether input field is disabled.\n * This property overrides `editable` property of TextInput.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render above the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} caption - Function component to render below Input view.\n * Expected to return View.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes the style of the text field.\n *\n * @property {TextInputProps} ...TextInputProps - Any props applied to TextInput component.\n *\n * @overview-example InputSimpleUsage\n *\n * @overview-example InputStates\n * Input can be disabled with `disabled` property.\n *\n * @overview-example InputStatus\n * Or marked with `status` property, which is useful within forms validation.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example InputAccessories\n * Input may contain labels, captions and inner views by configuring `accessoryLeft` or `accessoryRight` properties.\n * Within Eva, Input accessories are expected to be images or [svg icons](guides/icon-packages).\n *\n * @overview-example InputSize\n * To resize Input, a `size` property may be used.\n *\n * @overview-example InputStyling\n * Input and it's inner views can be styled by passing them as function components.\n * ```\n * import { Input, Text } from '@ui-kitten/components';\n *\n * <Input\n *   textStyle={{ ... }}\n *   label={evaProps => <Text {...evaProps}>Label</Text>}\n *   caption={evaProps => <Text {...evaProps}>Caption</Text>}\n * />\n * ```\n *\n * @overview-example InputTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n@styled('Input')\nexport class Input extends React.Component<InputProps> implements WebEventResponderCallbacks {\n\n  private textInputRef = React.createRef<TextInput>();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public focus = (): void => {\n    this.textInputRef.current?.focus();\n  };\n\n  public blur = (): void => {\n    this.textInputRef.current?.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.textInputRef.current?.isFocused();\n  };\n\n  public clear = (): void => {\n    this.textInputRef.current?.clear();\n  };\n\n  // WebEventResponderCallbacks\n\n  public onMouseEnter = (): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n  };\n\n  public onMouseLeave = (): void => {\n    this.props.eva.dispatch([]);\n  };\n\n  private onTextFieldFocus = (event: NativeSyntheticEvent<TextInputFocusEventData>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onTextFieldBlur = (event: NativeSyntheticEvent<TextInputFocusEventData>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const flatStyles: ViewStyle = StyleSheet.flatten(this.props.style);\n    const { rest: inputContainerStyle, ...containerStyle } = PropsService.allWithRest(flatStyles, FlexViewCrossStyleProps);\n\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelMarginBottom,\n      labelFontWeight,\n      labelFontFamily,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionFontWeight,\n      captionFontFamily,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerStyle,\n      inputContainer: {\n        ...containerParameters,\n        ...inputContainerStyle,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n        fontFamily: labelFontFamily,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        fontFamily: captionFontFamily,\n        color: captionColor,\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const {\n      eva,\n      textStyle,\n      label,\n      caption,\n      accessoryLeft,\n      accessoryRight,\n      testID,\n      ...textInputProps\n    } = this.props;\n\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWithoutFeedback\n        testID={testID}\n        style={evaStyle.container}\n        focusable={false}\n        onPress={this.focus}>\n        <FalsyText\n          style={[evaStyle.label, styles.label]}\n          component={label}\n        />\n        <View style={[evaStyle.inputContainer, styles.inputContainer]}>\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryLeft}\n          />\n          <TextInput\n            ref={this.textInputRef}\n            placeholderTextColor={evaStyle.placeholder.color}\n            {...textInputProps}\n            {...this.webEventResponder.eventHandlers}\n            style={[evaStyle.text, styles.text, platformStyles.text, textStyle]}\n            editable={!textInputProps.disabled}\n            onFocus={this.onTextFieldFocus}\n            onBlur={this.onTextFieldBlur}\n          />\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryRight}\n          />\n        </View>\n        <FalsyText\n          style={[evaStyle.captionLabel, styles.captionLabel]}\n          component={caption}\n        />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  text: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n  },\n  label: {\n    textAlign: 'left',\n  },\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n\nconst platformStyles = StyleSheet.create({\n  text: Platform.select({\n    default: null,\n    android: {\n      paddingVertical: 0,\n      marginVertical: -2,\n    },\n    web: {\n      outlineWidth: 0,\n    },\n  }),\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n} from 'react-native';\nimport { Overwrite, LiteralUnion } from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype ListStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport type ListProps<ItemT = any> = FlatListProps<ItemT> & ListStyledProps;\nexport type ListElement<ItemT = any> = React.ReactElement<ListProps<ItemT>>;\n\nexport interface BaseScrollParams {\n  animated?: boolean;\n}\n\nexport interface ViewScrollParams {\n  viewOffset?: number;\n  viewPosition?: number;\n}\n\nexport interface ScrollToIndexParams extends BaseScrollParams, ViewScrollParams {\n  index: number;\n}\n\nexport interface ScrollToOffsetParams extends BaseScrollParams {\n  offset: number;\n}\n\n/**\n * Performant interface for rendering simple, flat lists.\n *\n * @extends React.Component\n *\n * @property {any[]} data - An array of anything to be rendered within the list\n *\n * @property {(ListRenderItemInfo<ItemT>) => ReactElement} renderItem - Takes an\n * item from *data* and renders it into the list.\n *\n * @property {FlatListProps} ...FlatListProps - Any props applied to FlatList component.\n *\n * @overview-example ListSimpleUsage\n * Lists should render ListItem components by providing them through `renderItem` property\n * to provide a useful component.\n *\n * @overview-example ListDividers\n * It is a good idea to separate items with `Divider` component.\n *\n * @overview-example ListAccessories\n * Items may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n *\n * @overview-example ListCustomItem\n * Using ListItem is helpful for basic lists, but not required. For example, `Card` may be used.\n */\n@styled('List')\nexport class List<ItemT = any> extends React.Component<ListProps<ItemT>> {\n\n  private listRef = React.createRef<FlatList>();\n\n  public scrollToEnd = (params?: BaseScrollParams): void => {\n    this.listRef.current?.scrollToEnd(params);\n  };\n\n  public scrollToIndex = (params: ScrollToIndexParams): void => {\n    this.listRef.current?.scrollToIndex(params);\n  };\n\n  public scrollToOffset(params: ScrollToOffsetParams): void {\n    this.listRef.current?.scrollToOffset(params);\n  }\n\n  private keyExtractor = (item: ItemT, index: number): string => {\n    return index.toString();\n  };\n\n  public render(): React.ReactElement {\n    const { eva, style, keyExtractor, ...flatListProps } = this.props;\n\n    return (\n      <FlatList\n        keyExtractor={keyExtractor || this.keyExtractor}\n        {...flatListProps}\n        ref={this.listRef}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  FlexStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Frame,\n  RTLService,\n} from '../../devsupport';\n\nexport interface Offset {\n  rawValue: string;\n\n  apply(frame: Frame, value: number): Frame;\n}\n\nexport class Offsets {\n\n  static MARGIN: Offset = new class implements Offset {\n    rawValue: string = 'margin';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, value, value, value);\n    }\n  };\n\n  static MARGIN_HORIZONTAL: Offset = new class implements Offset {\n    rawValue: string = 'marginHorizontal';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, frame.origin.y, value, frame.size.height);\n    }\n  };\n\n  static MARGIN_VERTICAL: Offset = new class implements Offset {\n    rawValue: string = 'marginVertical';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, value, frame.size.width, value);\n    }\n  };\n\n  static MARGIN_LEFT: Offset = new class implements Offset {\n    rawValue: string = 'marginLeft';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(value, frame.origin.y, frame.size.width, frame.size.height);\n    }\n  };\n\n  static MARGIN_TOP: Offset = new class implements Offset {\n    rawValue: string = 'marginTop';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, value, frame.size.width, frame.size.height);\n    }\n  };\n\n  static MARGIN_RIGHT: Offset = new class implements Offset {\n    rawValue: string = 'marginRight';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, frame.origin.y, value, frame.size.height);\n    }\n  };\n\n  static MARGIN_BOTTOM: Offset = new class implements Offset {\n    rawValue: string = 'marginBottom';\n\n    apply(frame: Frame, value: number): Frame {\n      return new Frame(frame.origin.x, frame.origin.y, frame.size.width, value);\n    }\n  };\n\n  static find(source: StyleProp<FlexStyle>): Frame {\n    const offsetKeys: string[] = [\n      Offsets.MARGIN.rawValue,\n      Offsets.MARGIN_HORIZONTAL.rawValue,\n      Offsets.MARGIN_VERTICAL.rawValue,\n      Offsets.MARGIN_LEFT.rawValue,\n      Offsets.MARGIN_TOP.rawValue,\n      Offsets.MARGIN_RIGHT.rawValue,\n      Offsets.MARGIN_BOTTOM.rawValue,\n    ];\n\n    const flatStyle: FlexStyle = StyleSheet.flatten(source) || {};\n\n    return Object.keys(flatStyle)\n                 .filter((key: string): boolean => offsetKeys.includes(key))\n                 .reduce((acc: Frame, key: string): Frame => {\n\n                   const value: number = flatStyle[key];\n                   const offsetValue: Offset | undefined = Offsets.parse(key);\n\n                   return offsetValue ? offsetValue.apply(acc, value) : acc;\n                 }, Frame.zero());\n  }\n\n  static parse(value: string | Offset, fallback?: Offset): Offset | undefined {\n    return Offsets.typeOf(value) ? value : Offsets.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: Offset): Offset | undefined {\n    switch (rawValue) {\n      case Offsets.MARGIN.rawValue:\n        return Offsets.MARGIN;\n      case Offsets.MARGIN_HORIZONTAL.rawValue:\n        return Offsets.MARGIN_HORIZONTAL;\n      case Offsets.MARGIN_VERTICAL.rawValue:\n        return Offsets.MARGIN_VERTICAL;\n      case Offsets.MARGIN_LEFT.rawValue:\n        return Offsets.MARGIN_LEFT;\n      case Offsets.MARGIN_TOP.rawValue:\n        return Offsets.MARGIN_TOP;\n      case Offsets.MARGIN_RIGHT.rawValue:\n        return Offsets.MARGIN_RIGHT;\n      case Offsets.MARGIN_BOTTOM.rawValue:\n        return Offsets.MARGIN_BOTTOM;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is Offset {\n    const { rawValue } = (<Offset>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nexport class PlacementOptions {\n  constructor(readonly source: Frame = Frame.zero(),\n              readonly other: Frame = Frame.zero(),\n              readonly bounds: Frame = Frame.zero(),\n              readonly offsets: Frame = Frame.zero()) {\n  }\n}\n\nexport interface PopoverPlacement {\n  rawValue: string;\n\n  frame(options: PlacementOptions): Frame;\n\n  flex(): FlexPlacement;\n\n  parent(): PopoverPlacement;\n\n  reverse(): PopoverPlacement;\n\n  family(): PopoverPlacement[];\n\n  fits(frame: Frame, other: Frame): boolean;\n}\n\nexport class PopoverPlacements {\n\n  static RIGHT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static LEFT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static RIGHT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static LEFT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'left end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static RIGHT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.rightOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = RTLService.select(\n        origin.x - options.offsets.size.width,\n        options.bounds.size.width - size.width - (origin.x - options.offsets.size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.RIGHT,\n        PopoverPlacements.RIGHT_START,\n        PopoverPlacements.RIGHT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsEnd(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n  static LEFT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.leftOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = RTLService.select(\n        origin.x + options.offsets.origin.x,\n        options.bounds.size.width - size.width - (origin.x + options.offsets.size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.LEFT,\n        PopoverPlacements.LEFT_START,\n        PopoverPlacements.LEFT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsStart(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n  static BOTTOM_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.origin.x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static TOP_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.origin.x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static BOTTOM_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.size.width,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static TOP_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.size.width,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n  static BOTTOM: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.bottomOf(options.other).centerHorizontalOf(options.other);\n\n      const x: number = RTLService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y - options.offsets.size.height,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.BOTTOM,\n        PopoverPlacements.BOTTOM_START,\n        PopoverPlacements.BOTTOM_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsBottom(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n  static TOP: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.topOf(options.other).centerHorizontalOf(options.other);\n\n\n      const x: number = RTLService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y + options.offsets.origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.TOP,\n        PopoverPlacements.TOP_START,\n        PopoverPlacements.TOP_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsTop(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static parse(value: string | PopoverPlacement, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    return PopoverPlacements.typeOf(value) ? value : PopoverPlacements.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    switch (rawValue) {\n      case PopoverPlacements.LEFT.rawValue:\n        return PopoverPlacements.LEFT;\n      case PopoverPlacements.TOP.rawValue:\n        return PopoverPlacements.TOP;\n      case PopoverPlacements.RIGHT.rawValue:\n        return PopoverPlacements.RIGHT;\n      case PopoverPlacements.BOTTOM.rawValue:\n        return PopoverPlacements.BOTTOM;\n      case PopoverPlacements.LEFT_START.rawValue:\n        return PopoverPlacements.LEFT_START;\n      case PopoverPlacements.LEFT_END.rawValue:\n        return PopoverPlacements.LEFT_END;\n      case PopoverPlacements.TOP_START.rawValue:\n        return PopoverPlacements.TOP_START;\n      case PopoverPlacements.TOP_END.rawValue:\n        return PopoverPlacements.TOP_END;\n      case PopoverPlacements.RIGHT_START.rawValue:\n        return PopoverPlacements.RIGHT_START;\n      case PopoverPlacements.RIGHT_END.rawValue:\n        return PopoverPlacements.RIGHT_END;\n      case PopoverPlacements.BOTTOM_START.rawValue:\n        return PopoverPlacements.BOTTOM_START;\n      case PopoverPlacements.BOTTOM_END.rawValue:\n        return PopoverPlacements.BOTTOM_END;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is PopoverPlacement {\n    const { rawValue } = (<PopoverPlacement>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nexport interface FlexPlacement {\n  direction: 'column' | 'row' | 'column-reverse' | 'row-reverse';\n  alignment: 'flex-start' | 'flex-end' | 'center';\n}\n\nconst fitsStart = (frame: Frame, other: Frame): boolean => {\n  return RTLService.select(fitsLeft, fitsRight)(frame, other);\n};\n\nconst fitsEnd = (frame: Frame, other: Frame): boolean => {\n  return RTLService.select(fitsRight, fitsLeft)(frame, other);\n};\n\nconst fitsLeft = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x >= other.origin.x;\n};\n\nconst fitsRight = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x + frame.size.width <= other.size.width;\n};\n\nconst fitsTop = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y >= other.origin.y;\n};\n\nconst fitsBottom = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y + frame.size.height <= other.size.height;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  TransformsStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  FalsyFC,\n  RTLService,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\ntype AnimatedViewStyle = ViewStyle | any;\n\nexport interface PopoverViewProps extends ViewProps, StyledComponentProps {\n  contentContainerStyle?: StyleProp<AnimatedViewStyle>;\n  placement?: PopoverPlacement | string;\n  indicator?: (props: ViewProps) => React.ReactElement;\n}\n\nexport type PopoverViewElement = React.ReactElement<PopoverViewProps>;\n\nconst INDICATOR_OFFSET: number = 8;\nconst INDICATOR_WIDTH: number = 6;\n\n@styled('Popover')\nexport class PopoverView extends React.Component<PopoverViewProps> {\n\n  private get placement(): PopoverPlacement {\n    return PopoverPlacements.parse(this.props.placement);\n  }\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorWidth, indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      content: containerParameters,\n      indicator: {\n        width: indicatorWidth,\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private getDirectionStyle = () => {\n    const { direction, alignment } = this.placement.flex();\n\n    const isVertical: boolean = direction.startsWith('column');\n    const isStart: boolean = alignment.endsWith('start');\n    const isEnd: boolean = alignment.endsWith('end');\n    const isReverse: boolean = direction.endsWith('reverse');\n\n    // Rotate indicator by 90 deg if we have `row` direction (left/right placement)\n    // Rotate it again by 180 if we have `row-reverse` (bottom/right placement)\n    const indicatorRotate: number = isVertical ? 180 : 90;\n    const indicatorReverseRotate: number = isReverse ? 0 : 180;\n\n    // Translate container by half of `indicatorWidth`. Exactly half (because it has a square shape)\n    // Reverse if needed\n\n    // @ts-ignore: indicatorWidth type is always number\n    let containerTranslate: number = (this.props.indicator && !isVertical) ? INDICATOR_WIDTH / 2 : 0;\n    containerTranslate = isReverse ? containerTranslate : -containerTranslate;\n\n    // Translate indicator by passed `indicatorOffset`\n    // Reverse if needed\n\n    let indicatorTranslate: number = isVertical ? -INDICATOR_OFFSET : INDICATOR_OFFSET;\n    indicatorTranslate = isReverse ? -indicatorTranslate : indicatorTranslate;\n    const i18nVerticalIndicatorTranslate = RTLService.select(indicatorTranslate, -indicatorTranslate);\n    indicatorTranslate = isVertical ? i18nVerticalIndicatorTranslate : indicatorTranslate;\n\n    const contentTransforms: TransformsStyle = {\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    };\n\n    const indicatorTransforms: TransformsStyle = {\n      transform: [\n        { rotate: `${indicatorRotate}deg` },\n        { rotate: `${indicatorReverseRotate}deg` },\n        // Translate indicator \"to start\" if we have `-start` alignment\n        // Or translate it \"to end\" if we have `-end` alignment\n        { translateX: isStart ? -indicatorTranslate : 0 },\n        { translateX: isEnd ? indicatorTranslate : 0 },\n      ],\n    };\n\n    return {\n      container: {\n        flexDirection: direction,\n        alignItems: alignment,\n      },\n      content: contentTransforms,\n      indicator: indicatorTransforms,\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, contentContainerStyle, onLayout, indicator, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const directionStyle = this.getDirectionStyle();\n\n    return (\n      <View\n        style={[directionStyle.container, contentContainerStyle]}\n        onLayout={onLayout}>\n        <FalsyFC\n          style={[evaStyle.indicator, directionStyle.indicator]}\n          component={indicator}\n        />\n        <View\n          {...viewProps}\n          style={[evaStyle.content, directionStyle.content, style]}\n        />\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { Frame } from '../../devsupport';\n\nconst PLACEMENT_FAMILIES: string[] = [\n  PopoverPlacements.BOTTOM.rawValue,\n  PopoverPlacements.TOP.rawValue,\n  PopoverPlacements.LEFT.rawValue,\n  PopoverPlacements.RIGHT.rawValue,\n];\n\nexport class PopoverPlacementService {\n\n  public find(preferredValue: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const placement: PopoverPlacement = this.findRecursive(preferredValue, PLACEMENT_FAMILIES, options);\n\n    return placement || preferredValue;\n  }\n\n  private findRecursive(placement: PopoverPlacement, families: string[], options: PlacementOptions): PopoverPlacement {\n    const oneOfCurrentFamily: PopoverPlacement = this.findFromFamily(placement, options);\n\n    if (oneOfCurrentFamily) {\n      return oneOfCurrentFamily;\n    }\n\n    const oneOfReversedFamily: PopoverPlacement = this.findFromFamily(placement.reverse(), options);\n\n    if (oneOfReversedFamily) {\n      return oneOfReversedFamily;\n    }\n\n    delete families[families.indexOf(placement.parent().rawValue)];\n    delete families[families.indexOf(placement.reverse().parent().rawValue)];\n\n    const firstTruthy: string = families.filter(Boolean)[0];\n\n    if (firstTruthy) {\n      const nextPlacement: PopoverPlacement = PopoverPlacements.parse(firstTruthy);\n\n      return this.findRecursive(nextPlacement, families, options);\n    }\n\n    return null;\n  }\n\n  private findFromFamily(placement: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const preferredFrame: Frame = placement.frame(options);\n\n    if (placement.fits(preferredFrame, options.bounds)) {\n      return placement;\n    }\n\n    return placement.family().find((familyValue: PopoverPlacement): boolean => {\n      const familyFrame = familyValue.frame(options);\n\n      return familyValue.fits(familyFrame, options.bounds);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  BackHandler,\n  NativeEventSubscription,\n  Platform,\n} from 'react-native';\nimport {\n  Frame,\n  MeasureElement,\n  MeasuringElement,\n  Point,\n  RenderFCProp,\n  Overwrite,\n} from '../../devsupport';\nimport { ModalService } from '../../theme';\nimport { ModalProps } from '../modal/modal.component';\nimport {\n  PopoverView,\n  PopoverViewElement,\n  PopoverViewProps,\n} from './popoverView.component';\nimport { PopoverPlacementService } from './placement.service';\nimport {\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\ntype PopoverModalProps = Overwrite<ModalProps, {\n  children?: React.ReactElement;\n}>;\n\nexport interface PopoverProps extends PopoverViewProps, PopoverModalProps {\n  anchor: RenderFCProp;\n  fullWidth?: boolean;\n}\n\nexport type PopoverElement = React.ReactElement<PopoverProps>;\n\ninterface State {\n  childFrame: Frame;\n  anchorFrame: Frame;\n  forceMeasure: boolean;\n}\n\n/**\n * Displays a content positioned relative to another view.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets `content` component visible.\n *\n * @method {() => void} hide - Sets `content` component invisible.\n *\n * @property {boolean} visible - Whether content component is visible.\n * Defaults to false.\n * The property is more specific that the show/hide methods, so do not use them at the same time.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {ReactElement} children - A component displayed within the popover.\n *\n * @property {() => void} onBackdropPress - Called when popover is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {boolean} fullWidth - Whether a content component should take the width of `anchor`.\n *\n * @property {string | PopoverPlacement} placement - Position of the content component relative to the `anchor`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example PopoverSimpleUsage\n * Popover accepts it's content as child element and is displayed relative to `anchor` view.\n *\n * @overview-example PopoverPlacement\n * By default, it is displayed to the bottom of `anchor` view, but it is configurable with `placement` property.\n *\n * @overview-example PopoverFullWidth\n * Popover may take the full width of the anchor view by configuring `fullWidth` property.\n *\n * @overview-example PopoverStyledBackdrop\n * To style the underlying view, `backdropStyle` property may be used.\n */\nexport class Popover extends React.Component<PopoverProps, State> {\n\n  static defaultProps: Partial<PopoverProps> = {\n    placement: PopoverPlacements.BOTTOM,\n  };\n\n  public state: State = {\n    childFrame: Frame.zero(),\n    anchorFrame: Frame.zero(),\n    forceMeasure: false,\n  };\n\n  private hardwareBackSubscription: NativeEventSubscription;\n  private modalId: string;\n  private contentPosition: Point = Point.outscreen();\n  private placementService: PopoverPlacementService = new PopoverPlacementService();\n  private isPopoverUnmounted: boolean;\n\n  private actualPlacement: PopoverPlacement = this.preferredPlacement;\n\n  private get preferredPlacement(): PopoverPlacement {\n    return PopoverPlacements.parse(this.props.placement);\n  }\n\n  private get contentFlexPosition() {\n    const { x: left, y: top } = this.contentPosition;\n    return { left, top };\n  }\n\n  private get backdropConfig() {\n    const { onBackdropPress, backdropStyle } = this.props;\n    return {\n      onBackdropPress,\n      backdropStyle,\n    };\n  }\n\n  public show = (): void => {\n    if (!this.isPopoverUnmounted) {\n      this.modalId = ModalService.show(this.renderMeasuringPopoverElement(), this.backdropConfig);\n    }\n  };\n\n  public hide = (): void => {\n    this.modalId = ModalService.hide(this.modalId);\n  };\n\n  private onHardwareBackPress = (): boolean => {\n    this.hide();\n    return false;\n  };\n\n  public componentDidUpdate(prevProps: PopoverProps): void {\n    if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n      this.setState({ forceMeasure: true });\n      return;\n    }\n\n    if (this.modalId && !this.props.visible) {\n      this.contentPosition = Point.outscreen();\n      this.hide();\n    }\n  }\n\n  public componentDidMount(): void {\n    if (Platform.OS === 'android') {\n      this.hardwareBackSubscription = BackHandler.addEventListener('hardwareBackPress', this.onHardwareBackPress);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.hardwareBackSubscription?.remove();\n    this.hide();\n\n    this.isPopoverUnmounted = true;\n  }\n\n  private onChildMeasure = (childFrame: Frame): void => {\n    this.state.childFrame = childFrame;\n\n    if (!this.modalId && this.props.visible) {\n      this.show();\n      return;\n    }\n\n    if (this.modalId && this.props.visible) {\n      ModalService.update(this.modalId, this.renderPopoverElement());\n    }\n  };\n\n  private onContentMeasure = (anchorFrame: Frame): void => {\n    this.state.anchorFrame = anchorFrame;\n\n    const placementOptions: PlacementOptions = this.findPlacementOptions(anchorFrame, this.state.childFrame);\n    this.actualPlacement = this.placementService.find(this.preferredPlacement, placementOptions);\n\n    const displayFrame: Frame = this.actualPlacement.frame(placementOptions);\n    this.contentPosition = displayFrame.origin;\n\n    ModalService.update(this.modalId, this.renderPopoverElement());\n  };\n\n  private findPlacementOptions = (contentFrame: Frame, childFrame: Frame): PlacementOptions => {\n    const width: number = this.props.fullWidth ? childFrame.size.width : contentFrame.size.width;\n    const frame: Frame = new Frame(contentFrame.origin.x, contentFrame.origin.y, width, contentFrame.size.height);\n\n    return new PlacementOptions(frame, childFrame, Frame.window(), Frame.zero());\n  };\n\n  private renderContentElement = (): React.ReactElement => {\n    const contentElement: React.ReactElement = this.props.children;\n    const fullWidthStyle = { width: this.state.childFrame.size.width };\n\n    return React.cloneElement(contentElement, {\n      style: [this.props.fullWidth && fullWidthStyle, contentElement.props.style],\n    });\n  };\n\n  private renderPopoverElement = (): PopoverViewElement => {\n    return (\n      <PopoverView\n        {...this.props}\n        contentContainerStyle={[this.props.contentContainerStyle, styles.popoverView, this.contentFlexPosition]}\n        placement={this.actualPlacement.reverse()}>\n          {this.renderContentElement()}\n      </PopoverView>\n    );\n  };\n\n  private renderMeasuringPopoverElement = (): MeasuringElement => {\n    return (\n      <MeasureElement\n        shouldUseTopInsets={ModalService.getShouldUseTopInsets}\n        onMeasure={this.onContentMeasure}>\n          {this.renderPopoverElement()}\n      </MeasureElement>\n    );\n  };\n\n  public render(): React.ReactElement {\n    return (\n      <MeasureElement\n        shouldUseTopInsets={ModalService.getShouldUseTopInsets}\n        force={this.state.forceMeasure}\n        onMeasure={this.onChildMeasure}>\n          {this.props.anchor()}\n      </MeasureElement>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverView: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInputFocusEventData,\n  TextInputSubmitEditingEventData,\n  View,\n} from 'react-native';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  Input,\n  InputElement,\n  InputProps,\n} from '../input/input.component';\nimport { List } from '../list/list.component';\nimport {\n  Popover,\n  PopoverElement,\n} from '../popover/popover.component';\nimport {\n  AutocompleteItemElement,\n  AutocompleteItemProps,\n} from './autocompleteItem.component';\n\nexport interface AutocompleteProps extends InputProps {\n  children?: ChildrenWithProps<AutocompleteItemProps>;\n  onSelect?: (index: number) => void;\n  placement?: string;\n}\n\nexport type AutocompleteElement = React.ReactElement<AutocompleteProps>;\n\ninterface State {\n  listVisible: boolean;\n}\n\n/**\n * Autocomplete is a normal text input enhanced by a panel of suggested options.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets data list visible.\n *\n * @method {() => void} hide - Sets data list invisible.\n *\n * @method {() => void} focus - Focuses an input field and sets data list visible.\n *\n * @method {() => void} blur - Removes focus from input field and sets data list invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the input field is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input field.\n *\n * @property {ReactElement<AutocompleteItemProps> | ReactElement<AutocompleteItemProps>[]} children -\n * Options displayed within list.\n *\n * @property {(number) => void} onSelect - Called when option is pressed.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string | PopoverPlacement} placement - Position of the options list relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {() => void} onFocus - Called when options list becomes visible.\n *\n * @property {() => void} onBlur - Called when options list becomes invisible.\n *\n * @property {InputProps} ...InputProps - Any props applied to Input component.\n *\n * @overview-example AutocompleteSimpleUsage\n * Autocomplete may contain options to be rendered within suggestions list.\n * Options should be provided by passing them to children.\n *\n * @overview-example AutocompleteAccessories\n * Autocomplete may contain accessories by passing `accessoryLeft` or `accessoryRight` props.\n * By default, we expect it to be images.\n *\n * @example AutocompleteHandleKeyboard\n * On mobile devices, options may be overlapped by keyboard.\n * It can be handled with `placement` property.\n *\n * @example AutocompleteAsync\n * For requesting a real-world data by typing, http requests may be sent with debounce.\n */\nexport class Autocomplete extends React.Component<AutocompleteProps, State> {\n\n  public state: State = {\n    listVisible: false,\n  };\n\n  private popoverRef = React.createRef<Popover>();\n  private inputRef = React.createRef<Input>();\n\n  private get data(): any[] {\n    return React.Children.toArray(this.props.children || []);\n  }\n\n  public show = (): void => {\n    this.popoverRef.current?.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current?.hide();\n  };\n\n  public focus = (): void => {\n    this.inputRef.current?.focus();\n  };\n\n  public blur = (): void => {\n    this.inputRef.current?.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.inputRef.current?.isFocused();\n  };\n\n  public clear = (): void => {\n    this.inputRef.current?.clear();\n  };\n\n  public componentDidUpdate(prevProps: AutocompleteProps): void {\n    const isChildCountChanged: boolean = this.data.length !== React.Children.count(prevProps.children);\n    const shouldBecomeVisible: boolean = !this.state.listVisible && this.isFocused() && isChildCountChanged;\n\n    shouldBecomeVisible && this.setState({ listVisible: shouldBecomeVisible });\n  }\n\n  private onInputFocus = (event: NativeSyntheticEvent<TextInputFocusEventData>): void => {\n    this.setOptionsListVisible();\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onInputSubmitEditing = (e: NativeSyntheticEvent<TextInputSubmitEditingEventData>): void => {\n    this.setOptionsListInvisible();\n    this.props.onSubmitEditing && this.props.onSubmitEditing(e);\n  };\n\n  private onBackdropPress = (): void => {\n    this.blur();\n    this.setOptionsListInvisible();\n  };\n\n  private onItemPress = (index: number): void => {\n    if (this.props.onSelect) {\n      this.setOptionsListInvisible();\n      this.props.onSelect(index);\n    }\n  };\n\n  private setOptionsListVisible = (): void => {\n    const hasData: boolean = this.data.length > 0;\n    hasData && this.setState({ listVisible: true });\n  };\n\n  private setOptionsListInvisible = (): void => {\n    this.setState({ listVisible: false });\n  };\n\n  private renderItem = (info: ListRenderItemInfo<AutocompleteItemElement>): AutocompleteItemElement => {\n    return React.cloneElement(info.item, { onPress: () => this.onItemPress(info.index) });\n  };\n\n  private renderInputElement = (props: InputProps): InputElement => {\n    return (\n      <View>\n        <Input\n          {...props}\n          ref={this.inputRef}\n          onFocus={this.onInputFocus}\n          onSubmitEditing={this.onInputSubmitEditing}\n        />\n      </View>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { placement, children, testID, ...inputProps } = this.props;\n\n    return (\n      <Popover\n        ref={this.popoverRef}\n        style={styles.popover}\n        placement={placement}\n        testID={testID}\n        visible={this.state.listVisible}\n        fullWidth={true}\n        anchor={() => this.renderInputElement(inputProps)}\n        onBackdropPress={this.onBackdropPress}>\n        <List\n          style={styles.list}\n          keyboardShouldPersistTaps='always'\n          data={this.data}\n          bounces={false}\n          renderItem={this.renderItem}\n        />\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    maxHeight: 192,\n    overflow: 'hidden',\n  },\n  list: {\n    flexGrow: 0,\n    overflow: 'hidden',\n  },\n});\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  Platform,\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype ListItemStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface ListItemProps extends TouchableWebProps, ListItemStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  description?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<ViewProps>;\n  children?: React.ReactNode;\n}\n\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\n/**\n * A single item rendered in List.\n * Items should be rendered within List by providing them through `renderItem` property to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} description - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ViewProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n *\n * @property {ReactNode} children - Component to render within the item.\n * Useful when needed to render a custom item and get a feedback when it is pressed.\n * If provided, *title* and other properties will be ignored.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ListItemSimpleUsage\n *\n * @overview-example ListItemStyling\n * List Item and it's inner views can be styled by passing them as function components.\n *\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n * ```\n * import { ListItem, Text } from '@ui-kitten/components';\n *\n * <ListItem\n *   title={evaProps => <Text {...evaProps}>TITLE</Text>}\n *   description={evaProps => <Text {...evaProps}>DESCRIPTION</Text>}\n * />\n * ```\n */\n@styled('ListItem')\nexport class ListItem extends React.Component<ListItemProps> {\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      titleMarginHorizontal,\n      titleFontFamily,\n      titleFontSize,\n      titleFontWeight,\n      titleColor,\n      descriptionFontFamily,\n      descriptionFontSize,\n      descriptionFontWeight,\n      descriptionColor,\n      descriptionMarginHorizontal,\n      accessoryMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginHorizontal: titleMarginHorizontal,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      description: {\n        color: descriptionColor,\n        fontFamily: descriptionFontFamily,\n        fontSize: descriptionFontSize,\n        fontWeight: descriptionFontWeight,\n        marginHorizontal: descriptionMarginHorizontal,\n      },\n      accessory: {\n        marginHorizontal: accessoryMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTemplateChildren = (props: ListItemProps, evaStyle): React.ReactFragment => {\n    return (\n      <React.Fragment>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryLeft}\n        />\n        <View style={styles.contentContainer}>\n          <FalsyText\n            style={[evaStyle.title, styles.title]}\n            component={props.title}\n          />\n          <FalsyText\n            style={[evaStyle.description, styles.description]}\n            component={props.description}\n          />\n        </View>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryRight}\n        />\n      </React.Fragment>\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const {\n      eva,\n      style,\n      children,\n      title,\n      description,\n      accessoryLeft,\n      accessoryRight,\n      ...touchableProps\n    } = this.props;\n\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, webStyles.container, style]}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {children || this.renderTemplateChildren(this.props, evaStyle)}\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  title: {\n    textAlign: 'left',\n  },\n  description: {\n    textAlign: 'left',\n  },\n});\n\nconst webStyles = Platform.OS === 'web' && StyleSheet.create({\n  container: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListItem,\n  ListItemElement,\n  ListItemProps,\n} from '../list/listItem.component';\n\nexport type AutocompleteItemProps = ListItemProps;\nexport type AutocompleteItemElement = React.ReactElement<AutocompleteItemProps>;\n\n/**\n * A single item in Autocomplete List.\n * Items should be rendered within Autocomplete children to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the button.\n * If it is a function, expected to return a Text.\n *\n * @property {(ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {(ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example AutocompleteItemSimpleUsage\n */\nexport class AutocompleteItem extends React.Component<ListItemProps> {\n\n  public render(): ListItemElement {\n    return (\n      <ListItem {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n} from 'react-native';\nimport {\n  EvaSize,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\n\ntype AvatarStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport type AvatarProps<P = ImageProps> = AvatarStyledProps & P & {\n  shape?: 'round' | 'rounded' | 'square' | string;\n  size?: EvaSize;\n  /**\n   * We use `any` here to prevent ts complains for most of the libraries that use\n   * React.ComponentType & SomeType to describe static / instance methods for the components.\n   */\n  ImageComponent?: React.ComponentType<P> & any;\n};\n\nexport type AvatarElement = React.ReactElement<AvatarProps>;\n\n/**\n * An Image with additional styles provided by Eva.\n *\n * @extends React.Component\n *\n * @property {string} shape - Shape of the component.\n * Can be `round`, `rounded` or `square`.\n * Defaults to *round*.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @property {React.ComponentType} ImageComponent - A component to render.\n * Defaults to Image.\n *\n * @property {P = ImageProps} ...P - Any props that may be accepted by the component passed to ImageComponent property.\n *\n * @overview-example AvatarSimpleUsage\n *\n * @overview-example AvatarSize\n * Avatar can be resized by passing `size` property.\n *\n * @overview-example AvatarShape\n * Also, it may have different shape configurable with `shape` property.\n *\n * @overview-example AvatarImageComponent\n * Avatar may have different root component to render images.\n * This might be helpful when needed to improve image loading with 3rd party image libraries.\n */\n@styled('Avatar')\nexport class Avatar extends React.Component<AvatarProps> {\n\n  static defaultProps: Partial<AvatarProps> = {\n    ImageComponent: Image,\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { roundCoefficient, ...containerParameters } = source;\n\n    // @ts-ignore: avoid checking `containerParameters`\n    const baseStyle: ImageStyle = StyleSheet.flatten([\n      containerParameters,\n      this.props.style,\n    ]);\n\n    // @ts-ignore: rhs operator is restricted to be number\n    const borderRadius: number = roundCoefficient * baseStyle.height;\n\n    return {\n      borderRadius,\n      ...baseStyle,\n    };\n  };\n\n  public render(): React.ReactElement {\n    const { eva, ImageComponent, ...imageProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <ImageComponent\n        {...imageProps}\n        style={[styles.image, evaStyle]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  image: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { RTLService } from '../../devsupport';\n\nexport interface TabIndicatorProps extends ViewProps {\n  positions: number;\n  selectedPosition?: number;\n  indicatorStyle: StyleProp<ViewStyle>;\n}\n\nexport type TabIndicatorElement = React.ReactElement<TabIndicatorProps>;\n\nexport class TabIndicator extends React.Component<TabIndicatorProps> {\n\n  static defaultProps: Partial<TabIndicatorProps> = {\n    selectedPosition: 0,\n  };\n  private indicatorWidth: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(0);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate() {\n    const { selectedPosition: index } = this.props;\n\n    this.scrollToIndex({\n      index,\n      animated: true,\n    });\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  /**\n   * scrolls indicator to passed index\n   *\n   * @param params (object) - {\n   *  index: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const offset: number = this.indicatorWidth * index;\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  /**\n   * scrolls indicator to passed offset\n   *\n   * @param params (object) - {\n   *  offset: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  }\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    // no-op\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    // no-op\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    return Animated.timing(this.contentOffset, {\n      toValue: RTLService.select(params.offset, -params.offset),\n      duration: 200,\n      easing: Easing.linear,\n      useNativeDriver: Platform.OS !== 'web',\n    });\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.indicatorWidth = event.nativeEvent.layout.width;\n\n    this.scrollToOffset({\n      offset: this.indicatorWidth * this.props.selectedPosition,\n      animated: false,\n    });\n  };\n\n  private getComponentStyle = (): ViewStyle => {\n    const widthPercent: number = 100 / this.props.positions;\n\n    return {\n      width: `${widthPercent}%`,\n      position: 'absolute',\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [ { translateX: this.contentOffset } ],\n    };\n  };\n\n  private renderIndicatorLine = (style: StyleProp<ViewStyle>): React.ReactElement => {\n    return (\n      <View\n        testID={'indicator body'}\n        style={[ { width: '100%', alignSelf: 'center' }, style ]}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...viewProps } = this.props;\n    const evaStyle: ViewStyle = this.getComponentStyle();\n    const indicatorLine = this.renderIndicatorLine(style);\n\n    return (\n      <Animated.View\n        {...viewProps}\n        style={[ evaStyle ]}\n        onLayout={this.onLayout}>\n        {indicatorLine}\n      </Animated.View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  BottomNavigationTabElement,\n  BottomNavigationTabProps,\n} from './bottomNavigationTab.component';\nimport {\n  TabIndicator,\n  TabIndicatorElement,\n} from '../shared/tabIndicator.component';\n\ntype BottomNavigationStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | 'noIndicator'>;\n}>;\n\nexport interface BottomNavigationProps extends ViewProps, BottomNavigationStyledProps {\n  children?: ChildrenWithProps<BottomNavigationTabProps>;\n  selectedIndex?: number;\n  onSelect?: (index: number) => void;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nexport type BottomNavigationElement = React.ReactElement<BottomNavigationProps>;\n\n/**\n * A bar with tabs styled by Eva.\n * BottomNavigation should contain BottomNavigationTab components to provide a usable navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Tabs to be rendered within the bar.\n *\n * @property {number} selectedIndex - Index of currently selected tab.\n *\n * @property {(number) => void} onSelect - Called when tab is pressed.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noIndicator`.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Styles of the indicator.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example BottomNavigationSimpleUsage\n * In basic examples, tabs are wrapped within `BottomNavigation`.\n *\n * @overview-example Using with React Navigation\n * BottomNavigation can also be [configured with React Navigation](guides/configure-navigation)\n * to provide a navigational component.\n *\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n * import { BottomNavigation, BottomNavigationTab, Layout, Text } from '@ui-kitten/components';\n *\n * const { Navigator, Screen } = createBottomTabNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const BottomTabBar = ({ navigation, state }) => (\n *   <BottomNavigation\n *     selectedIndex={state.index}\n *     onSelect={index => navigation.navigate(state.routeNames[index])}>\n *     <BottomNavigationTab title='USERS'/>\n *     <BottomNavigationTab title='ORDERS'/>\n *   </BottomNavigation>\n * );\n *\n * const TabNavigator = () => (\n *   <Navigator tabBar={props => <BottomTabBar {...props} />}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <TabNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example BottomNavigationAccessories\n * Tabs also may contain [icons](guides/icon-packages) to provide a better user interfaces.\n *\n * @overview-example BottomNavigationTabStyling\n * Tabs and it's inner views can be styled by passing them as function components.\n * ```\n * import { BottomNavigationTab, Text } from '@ui-kitten/components';\n *\n * <BottomNavigationTab\n *   title={evaProps => <Text {...evaProps}>USERS</Text>}\n * />\n * ```\n * @overview-example BottomNavigationTabTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n *\n * @example BottomNavigationWithoutIndicator\n * To remove indicator, `appearance` property may be used.\n */\n\n@styled('BottomNavigation')\nexport class BottomNavigation extends React.Component<BottomNavigationProps> {\n\n  static defaultProps: Partial<BottomNavigationProps> = {\n    selectedIndex: 0,\n  };\n\n  private onTabSelect = (index: number): void => {\n    this.props.onSelect && this.props.onSelect(index);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderIndicatorElement = (positions: number, style: ViewStyle): TabIndicatorElement => {\n    const { indicatorStyle, selectedIndex } = this.props;\n\n    return (\n      <TabIndicator\n        key={0}\n        style={[ style, indicatorStyle ]}\n        selectedPosition={selectedIndex}\n        positions={positions}\n      />\n    );\n  };\n\n  private renderTabElement = (element: BottomNavigationTabElement, index: number): BottomNavigationTabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: index === this.props.selectedIndex,\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenWithProps<BottomNavigationTabProps>): BottomNavigationTabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const tabElements: BottomNavigationTabElement[] = this.renderTabElements(this.props.children);\n    const hasIndicator: boolean = style.indicator.height > 0;\n\n    return [\n      hasIndicator && this.renderIndicatorElement(tabElements.length, style.indicator),\n      ...tabElements,\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const [indicatorElement, ...tabElements] = this.renderComponentChildren(evaStyle);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, styles.container, style]}>\n        {indicatorElement}\n        {tabElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype BottomNavigationTabStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | string>;\n}>;\n\nexport interface BottomNavigationTabProps extends TouchableWebProps, BottomNavigationTabStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  icon?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\n/**\n * A single tab within the BottomNavigation.\n * Bottom tabs should be rendered within BottomNavigation to provide a usable navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the tab.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} icon - Function component\n * to render within the tab.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example BottomNavigationTabSimpleUsage\n */\n\n@styled('BottomNavigationTab')\nexport class BottomNavigationTab extends React.Component<BottomNavigationTabProps> {\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onPress = (): void => {\n    this.props.onSelect && this.props.onSelect(!this.props.selected);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, title, icon, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onPress={this.onPress}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={icon}\n        />\n        <FalsyText\n          style={evaStyle.text}\n          component={title}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  EvaSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype ButtonStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'filled' | 'outline' | 'ghost'>;\n}>;\n\nexport interface ButtonProps extends TouchableWebProps, ButtonStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  status?: EvaStatus;\n  size?: EvaSize;\n}\n\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\n/**\n * Buttons allow users to take actions, and make choices, with a single tap.\n *\n * @extends React.Component\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render within the button.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `filled`, `outline` or `ghost`.\n * Defaults to *filled*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *primary*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ButtonSimpleUsage\n * Default button size is `medium` and status color is `primary`.\n *\n * @overview-example ButtonStates\n * Button can be disabled with `disabled` property.\n *\n * @overview-example ButtonAppearances\n * Within Eva Design System, it can be `filled`, `outline` or `ghost`.\n *\n * @overview-example ButtonAccessories\n * Also, it may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n * Within Eva it is expected to be an image or [svg icon](guides/icon-packages).\n *\n * @overview-example ButtonSize\n * Buttons can be resized by using `size` property.\n *\n * @overview-example ButtonStatus\n * Or marked with `status` property.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example ButtonOutline\n * Status can be combined with `outline` appearance.\n *\n * @overview-example ButtonGhost\n * As well as for `ghost`.\n *\n * @overview-example ButtonStyling\n * Button and it's inner views can be styled by passing them as function components.\n * ```\n * import { Button, Text } from '@ui-kitten/components';\n *\n * <Button style={...}>\n *   {evaProps => <Text {...evaProps}>BUTTON</Text>}\n * </Button>\n * ```\n *\n * @overview-example ButtonTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n\n@styled('Button')\nexport class Button extends React.Component<ButtonProps> {\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textMarginHorizontal,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      iconMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n        marginHorizontal: iconMarginHorizontal,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, accessoryLeft, accessoryRight, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryLeft}\n        />\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryRight}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  EvaSize,\n  EvaStatus,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  ButtonElement,\n  ButtonProps,\n} from '../button/button.component';\n\ntype ButtonGroupStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'filled' | 'outline' | 'ghost'>;\n}>;\n\nexport interface ButtonGroupProps extends ViewProps, ButtonGroupStyledProps {\n  children: ChildrenWithProps<ButtonProps>;\n  status?: EvaStatus;\n  size?: EvaSize;\n}\n\nexport type ButtonGroupElement = React.ReactElement<ButtonGroupProps>;\n\n/**\n * A group of buttons with additional styles provided by Eva.\n * ButtonGroup should contain Button components to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<ButtonProps> | ReactElement<ButtonProps>[]} children -\n * Buttons to be rendered within the group.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `filled`, `outline` or `ghost`.\n * Defaults to *filled*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *primary*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ButtonGroupSimpleUsage\n * Button Group accepts buttons as child elements.\n *\n * @overview-example ButtonGroupAppearance\n * Appearance passed to group is also applied for grouped buttons.\n *\n * @overview-example ButtonGroupStatus\n * Same for status.\n *\n * @overview-example ButtonGroupSize\n * And size.\n *\n * @overview-example ButtonGroupOutline\n *\n * @overview-example ButtonGroupWithIcons\n */\n\n@styled('ButtonGroup')\nexport class ButtonGroup extends React.Component<ButtonGroupProps> {\n\n  private getComponentStyle = (source: StyleType) => {\n    const { dividerBackgroundColor, dividerWidth, ...containerParameters } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        borderWidth: containerParameters.borderWidth + 0.25,\n      },\n      button: {\n        borderWidth: dividerWidth,\n        borderColor: dividerBackgroundColor,\n      },\n    };\n  };\n\n  private isFirstElement = (index: number): boolean => {\n    return index === 0;\n  };\n\n  private isLastElement = (index: number): boolean => {\n    return index === React.Children.count(this.props.children) - 1;\n  };\n\n  private renderButtonElement = (element: ButtonElement, index: number, style: StyleType): ButtonElement => {\n    const { appearance, size, status } = this.props;\n    const { borderRadius }: ViewStyle = style.container;\n    const { borderWidth, borderColor }: ViewStyle = style.button;\n\n    const shapeStyle: ViewStyle = !this.isLastElement(index) && {\n      borderEndWidth: borderWidth,\n      borderEndColor: borderColor,\n    };\n\n    const startShapeStyle: ViewStyle = this.isFirstElement(index) && {\n      borderTopStartRadius: borderRadius,\n      borderBottomStartRadius: borderRadius,\n    };\n\n    const endShapeStyle: ViewStyle = this.isLastElement(index) && {\n      borderTopEndRadius: borderRadius,\n      borderBottomEndRadius: borderRadius,\n    };\n\n    return React.cloneElement(element, {\n      key: index,\n      appearance: appearance,\n      size: size,\n      status: status,\n      style: [element.props.style, styles.button, shapeStyle, startShapeStyle, endShapeStyle],\n    });\n  };\n\n  private renderButtonElements = (source: ChildrenWithProps<ButtonProps>, style: StyleType): ButtonElement[] => {\n    return React.Children.map(source, (element: ButtonElement, index: number): ButtonElement => {\n      return this.renderButtonElement(element, index, style);\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, children, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, styles.container, style]}>\n        {this.renderButtonElements(children, evaStyle)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  button: {\n    borderRadius: 0,\n    borderWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite, LiteralUnion } from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype DividerStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport type DividerProps = ViewProps & DividerStyledProps;\nexport type DividerElement = React.ReactElement<DividerProps>;\n\n/**\n * A divider is a thin line that groups content in lists and layouts.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example DividerSimpleUsage\n */\n@styled('Divider')\nexport class Divider extends React.Component<DividerProps> {\n\n  public render(): React.ReactElement {\n    const { eva, style, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronDownProps = SvgProps;\nexport type ChevronDownElement = React.ReactElement<ChevronDownProps>;\n\nexport class ChevronDown extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-down'>\n            <Rect width='24' height='24' opacity='0'/>\n            <Path\n              d='M12 15.5a1 1 0 0 1-.71-.29l-4-4a1 1 0 1 1 1.42-1.42L12 13.1l3.3-3.18a1 1 0 1 1 1.38 1.44l-4 3.86a1 1 0 0 1-.68.28z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronLeftProps = SvgProps;\nexport type ChevronLeftElement = React.ReactElement<ChevronLeftProps>;\n\nexport class ChevronLeft extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-left'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(90 12 12)'\n              opacity='0'\n            />\n            <Path\n              d='M13.36 17a1 1 0 0 1-.72-.31l-3.86-4a1 1 0 0 1 0-1.4l4-4a1 1 0 1 1 1.42 1.42L10.9 12l3.18 3.3a1 1 0 0 1 0 1.41 1 1 0 0 1-.72.29z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type ChevronRightProps = SvgProps;\nexport type ChevronRightElement = React.ReactElement<ChevronRightProps>;\n\nexport class ChevronRight extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='chevron-right'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(-90 12 12)'\n              opacity='0'\n            />\n            <Path\n              d='M10.5 17a1 1 0 0 1-.71-.29 1 1 0 0 1 0-1.42L13.1 12 9.92 8.69a1 1 0 0 1 0-1.41 1 1 0 0 1 1.42 0l3.86 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-.7.32z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport enum RangeRole {\n  none ,\n  member ,\n  start = 1 << 1,\n  end = 2 << 1,\n  complete = start | end,\n}\n\nexport interface CalendarDateOptions {\n  bounding: boolean;\n  holiday: boolean;\n  range?: RangeRole;\n}\n\nexport interface CalendarRange<D> {\n  startDate?: D;\n  endDate?: D;\n}\n\nexport interface CalendarDateInfo<D> extends CalendarDateOptions {\n  date: D;\n}\n\nconst VIEW_MODE_DATE: CalendarViewMode = {\n  id: 'DATE',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_YEAR;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_MONTH: CalendarViewMode = {\n  id: 'MONTH',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_YEAR: CalendarViewMode = {\n  id: 'YEAR',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_MONTH;\n  },\n};\n\nexport type CalendarViewModeId = 'DATE' | 'MONTH' | 'YEAR';\n\nexport interface CalendarViewMode {\n  id: CalendarViewModeId;\n  navigationNext: () => CalendarViewMode;\n  pickNext: () => CalendarViewMode;\n}\n\ninterface CalendarViewModes {\n  DATE: CalendarViewMode;\n  MONTH: CalendarViewMode;\n  YEAR: CalendarViewMode;\n}\n\nexport const CalendarViewModes: CalendarViewModes = {\n  DATE: VIEW_MODE_DATE,\n  MONTH: VIEW_MODE_MONTH,\n  YEAR: VIEW_MODE_YEAR,\n};\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { SvgProps } from 'react-native-svg';\nimport { RTLService } from '../../../devsupport';\nimport { Button } from '../../button/button.component';\nimport {\n  Text,\n  TextProps,\n} from '../../text/text.component';\nimport {\n  ChevronDown,\n  ChevronDownElement,\n} from '../../shared/chevronDown.component';\nimport {\n  ChevronLeft,\n  ChevronLeftElement,\n} from '../../shared/chevronLeft.component';\nimport {\n  ChevronRight,\n  ChevronRightElement,\n} from '../../shared/chevronRight.component';\nimport {\n  CalendarViewModeId,\n  CalendarViewModes,\n} from '@ui-kitten/components/ui/calendar/type';\n\nexport interface CalendarHeaderProps extends ViewProps {\n  viewModeId: CalendarViewModeId;\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  iconStyle?: ImageStyle;\n  lateralNavigationAllowed: boolean;\n  onTitlePress?: () => void;\n  onNavigationLeftPress?: () => void;\n  onNavigationRightPress?: () => void;\n}\n\nexport type CalendarHeaderElement = React.ReactElement<CalendarHeaderProps>;\n\nexport class CalendarHeader extends React.Component<CalendarHeaderProps> {\n\n  private renderTitleIcon = (): ChevronDownElement => {\n    const { tintColor, ...svgStyle } = this.props.iconStyle;\n    const rotateStyle = this.props.viewModeId === CalendarViewModes.DATE.id\n      ? {}\n      : styles.rotateIcon;\n\n    return (\n      <ChevronDown\n        style={[styles.headerButtonIcon, rotateStyle, svgStyle]}\n        fill={tintColor}\n      />\n    );\n  };\n\n  private renderLeftIcon = (): ChevronLeftElement => {\n    const { tintColor, ...svgStyle } = this.props.iconStyle;\n    const IconComponent: React.ComponentType<SvgProps> = RTLService.select(ChevronLeft, ChevronRight);\n\n    return (\n      <IconComponent\n        style={[styles.lateralIcon, svgStyle]}\n        fill={tintColor}\n      />\n    );\n  };\n\n  private renderRightIcon = (): ChevronRightElement => {\n    const { tintColor, ...svgStyle } = this.props.iconStyle;\n    const IconComponent: React.ComponentType<SvgProps> = RTLService.select(ChevronRight, ChevronLeft);\n\n    return (\n      <IconComponent\n        style={[styles.lateralIcon, svgStyle]}\n        fill={tintColor}\n      />\n    );\n  };\n\n  private renderLateralNavigationControls = (): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.subContainer}>\n        <Button\n          appearance='ghost'\n          accessoryRight={this.renderLeftIcon}\n          onPress={this.props.onNavigationLeftPress}\n        />\n        <Button\n          appearance='ghost'\n          accessoryRight={this.renderRightIcon}\n          onPress={this.props.onNavigationRightPress}\n        />\n      </View>\n    );\n  };\n\n  private renderTitleElement = (props: TextProps): React.ReactElement => {\n    return (\n      <Text\n        {...props}\n        style={[props.style, styles.headerButtonText, this.props.titleStyle]}>\n        {this.props.title}\n      </Text>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, titleStyle, onTitlePress, title, lateralNavigationAllowed, viewModeId, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        <Button\n          appearance='ghost'\n          accessoryRight={this.renderTitleIcon}\n          onPress={onTitlePress}>\n          {(props) => this.renderTitleElement(props)}\n        </Button>\n        {lateralNavigationAllowed && this.renderLateralNavigationControls()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButtonText: {\n    marginHorizontal: 0,\n  },\n  headerButtonIcon: {\n    marginHorizontal: 0,\n  },\n  lateralIcon: {\n    marginHorizontal: 0,\n  },\n  subContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  rotateIcon: {\n    transform: [{ rotate: '180deg' }],\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\nexport interface CalendarMonthHeaderProps extends ViewProps {\n  data: string[];\n  children: (data: string, index: number) => React.ReactElement;\n}\n\nexport type CalendarMonthHeaderElement = React.ReactElement<CalendarMonthHeaderProps>;\n\nexport class CalendarMonthHeader extends React.Component<CalendarMonthHeaderProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { CalendarPickerCellElement } from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\nexport interface CalendarPickerRowProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[];\n  children: (item: CalendarDateInfo<D>, index: number) => CalendarPickerCellElement<D>;\n}\n\nexport type CalendarPickerRowElement<D> = React.ReactElement<CalendarPickerRowProps<D>>;\n\nexport class CalendarPickerRow<D> extends React.Component<CalendarPickerRowProps<D>> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacityProps,\n} from 'react-native';\nimport { TouchableWithoutFeedback } from '../../../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../../../theme';\nimport { CalendarDateInfo } from '../../type';\n\ntype ChildrenProp<D> = (date: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n\nexport interface CalendarPickerCellProps<D> extends StyledComponentProps, TouchableOpacityProps {\n  date: CalendarDateInfo<D>;\n  selected?: boolean;\n  bounding?: boolean;\n  today?: boolean;\n  range?: boolean;\n  firstRangeItem?: boolean;\n  lastRangeItem?: boolean;\n  onSelect?: (date: CalendarDateInfo<D>) => void;\n  children: ChildrenProp<D>;\n  shouldComponentUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n}\n\nexport type CalendarPickerCellElement<D> = React.ReactElement<CalendarPickerCellProps<D>>;\n\n@styled('CalendarCell')\nexport class CalendarPickerCell<D> extends React.Component<CalendarPickerCellProps<D>> {\n\n  public shouldComponentUpdate(nextProps: CalendarPickerCellProps<D>): boolean {\n    if (nextProps.shouldComponentUpdate) {\n      return nextProps.shouldComponentUpdate(this.props, nextProps);\n    }\n    return true;\n  }\n\n  private onPress = (): void => {\n    this.props.onSelect && this.props.onSelect(this.props.date);\n  };\n\n  private getContainerBorderRadius = (borderRadius: number): StyleType => {\n    const { firstRangeItem, lastRangeItem } = this.props;\n\n    const borderStyle = {\n      borderBottomRightRadius: 0,\n      borderTopRightRadius: 0,\n      borderBottomLeftRadius: 0,\n      borderTopLeftRadius: 0,\n    };\n\n    if (firstRangeItem) {\n      borderStyle.borderBottomLeftRadius = borderRadius;\n      borderStyle.borderTopLeftRadius = borderRadius;\n    }\n\n    if (lastRangeItem) {\n      borderStyle.borderBottomRightRadius = borderRadius;\n      borderStyle.borderTopRightRadius = borderRadius;\n    }\n\n    return borderStyle;\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      contentBorderWidth,\n      contentBorderRadius,\n      contentBorderColor,\n      contentBackgroundColor,\n      contentTextFontSize,\n      contentTextFontWeight,\n      contentTextColor,\n      contentTextFontFamily,\n      borderRadius,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        ...this.getContainerBorderRadius(borderRadius),\n      },\n      contentContainer: {\n        borderWidth: contentBorderWidth,\n        borderRadius: contentBorderRadius,\n        borderColor: contentBorderColor,\n        backgroundColor: contentBackgroundColor,\n      },\n      contentText: {\n        fontSize: contentTextFontSize,\n        fontWeight: contentTextFontWeight,\n        color: contentTextColor,\n        fontFamily: contentTextFontFamily,\n      },\n    };\n  };\n\n  private renderContentElement = (source: ChildrenProp<D>, evaStyle): React.ReactElement => {\n    return source && source(this.props.date, {\n      container: evaStyle.contentContainer,\n      text: evaStyle.contentText,\n    });\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { eva, style, date, bounding, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWithoutFeedback\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onPress={this.onPress}>\n        {this.renderContentElement(children, evaStyle)}\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '../../../../theme';\nimport {\n  CalendarPickerRow,\n  CalendarPickerRowElement,\n} from './calendarPickerRow.component';\nimport {\n  CalendarPickerCell,\n  CalendarPickerCellElement,\n  CalendarPickerCellProps,\n} from './calendarPickerCell.component';\nimport {\n  CalendarDateInfo,\n  RangeRole,\n} from '../../type';\n\nexport interface CalendarPickerProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[][];\n  isItemSelected: (item: CalendarDateInfo<D>) => boolean;\n  isItemDisabled: (item: CalendarDateInfo<D>) => boolean;\n  isItemToday: (item: CalendarDateInfo<D>) => boolean;\n  onSelect?: (item: CalendarDateInfo<D>) => void;\n  children: (item: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  shouldItemUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n  rowStyle?: StyleProp<ViewProps>;\n}\n\nexport type CalendarPickerElement<D> = React.ReactElement<CalendarPickerProps<D>>;\n\nexport class CalendarPicker<D> extends React.Component<CalendarPickerProps<D>> {\n\n  private renderCellElement = (item: CalendarDateInfo<D>, index: number): CalendarPickerCellElement<D> => {\n    const firstRangeItem = !!(item.range & RangeRole.start);\n    const lastRangeItem = !!(item.range & RangeRole.end);\n\n    return (\n      <CalendarPickerCell\n        key={index}\n        date={item}\n        selected={this.props.isItemSelected(item)}\n        disabled={this.props.isItemDisabled(item)}\n        bounding={item.bounding}\n        today={this.props.isItemToday(item)}\n        range={!!item.range}\n        firstRangeItem={firstRangeItem}\n        lastRangeItem={lastRangeItem}\n        onSelect={this.props.onSelect}\n        shouldComponentUpdate={this.props.shouldItemUpdate}>\n        {this.props.children}\n      </CalendarPickerCell>\n    );\n  };\n\n  private renderRowElement = (item: CalendarDateInfo<D>[], index: number): CalendarPickerRowElement<D> => {\n    return (\n      <CalendarPickerRow\n        key={index}\n        style={this.props.rowStyle}\n        data={item}>\n        {this.renderCellElement}\n      </CalendarPickerRow>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { data, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}>\n        {data.map(this.renderRowElement)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Text } from '../../text/text.component';\n\nexport interface CalendarDateContentProps extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  children: React.ReactText;\n}\n\nexport type CalendarDateContentElement = React.ReactElement<CalendarDateContentProps>;\n\nexport class CalendarDateContent extends React.Component<CalendarDateContentProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, textStyle, children, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        <Text style={textStyle}>{children}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\ntype DaysArray = [string, string, string, string, string, string, string];\ntype MonthsArray = [string, string, string, string, string, string, string, string, string, string, string, string];\n\nexport enum TranslationWidth {\n  SHORT = 'short',\n  LONG = 'long',\n}\n\nexport interface I18nDayNames {\n  [TranslationWidth.SHORT]: DaysArray;\n  [TranslationWidth.LONG]: DaysArray;\n}\n\nexport interface I18nMonthNames {\n  [TranslationWidth.SHORT]?: MonthsArray;\n  [TranslationWidth.LONG]?: MonthsArray;\n}\n\nexport interface I18nConfig {\n  dayNames: I18nDayNames;\n  monthNames: I18nMonthNames;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { TranslationWidth } from '../i18n/type';\n\nexport abstract class DateService<D> {\n  static DAYS_IN_WEEK: number = 7;\n  static MONTHS_IN_YEAR: number = 12;\n\n  protected locale: string;\n\n  public setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  public compareDatesSafe(date1: D, date2: D): number {\n    if (date1 && date2) {\n      return this.compareDates(date1, date2);\n    } else if (!date1 && !date2) {\n      return 0;\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetween(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetweenSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncluding(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) >= 0 && this.compareDates(date, end) <= 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncludingSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.isBetweenIncluding(date, start, end);\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public isSameDaySafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public isSameMonthSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public isSameYearSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  /**\n   * Returns true if date string is valid date string according to the provided format.\n   * */\n  public abstract isValidDateString(date: string, format: string): boolean;\n\n  /**\n   * Returns today date.\n   * */\n  public abstract today(): D;\n\n  /**\n   * Gets the date of the month component of the given date.\n   */\n  public abstract getDate(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * */\n  public abstract getMonth(date: D): number;\n\n  /**\n   * Gets the year component of the given date.\n   * */\n  public abstract getYear(date: D): number;\n\n  /**\n   * Returns day of the week of the given date.\n   */\n  public abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Returns localized month name by date and style.\n   * */\n  public abstract getMonthName(date: D, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized month name by month index and style.\n   * */\n  public abstract getMonthNameByIndex(month: number, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized days names.\n   * */\n  public abstract getDayOfWeekNames(style?: TranslationWidth): string[];\n\n  /**\n   * Parses the date string according to the passed format.\n   * */\n  public abstract parse(date: string, format: string): D;\n\n  /**\n   * Transforms the date to the string according to the passed format.\n   * */\n  public abstract format(date: D, format: string): string;\n\n  /**\n   * Creates new date from year, month and date.\n   * */\n  public abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public abstract isSameYear(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public abstract isSameMonth(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public abstract isSameDay(date1: D, date2: D): boolean;\n\n  /**\n   * Compares two dates.\n   * Returns 0 if dates are the same.\n   * Returns 1 if the first date is greater than the second.\n   * Returns -1 if the second date is greater than the first.\n   * */\n  public abstract compareDates(date1: D, date2: D): number;\n\n  /**\n   * Clones passed date.\n   * */\n  public abstract clone(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to 1.\n   * */\n  public abstract getMonthStart(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to the last day in this month.\n   * */\n  public abstract getMonthEnd(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 0 and day equals to 1.\n   * */\n  public abstract getYearStart(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 11 and day equals to 31.\n   * */\n  public abstract getYearEnd(date: D): D;\n\n  /**\n   * Returns number of days in the date.\n   * */\n  public abstract getNumberOfDaysInMonth(date: D): number;\n\n  /**\n   * Returns date with added number of days.\n   * */\n  public abstract addDay(date: D, days: number): D;\n\n  /**\n   * Returns date with added number of months.\n   * */\n  public abstract addMonth(date: D, months: number): D;\n\n  /**\n   * Returns date with added number of years.\n   * */\n  public abstract addYear(date: D, years: number): D;\n\n  public abstract getId(): string;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { I18nConfig } from './type';\n\nexport const EN: I18nConfig = {\n  dayNames: {\n    short: [\n      'Su',\n      'Mo',\n      'Tu',\n      'We',\n      'Th',\n      'Fr',\n      'Sa',\n    ],\n    long: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  },\n  monthNames: {\n    short: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport fecha from 'fecha';\nimport { DateService } from './date.service';\nimport {\n  I18nConfig,\n  TranslationWidth,\n} from '../i18n/type';\nimport { EN } from '../i18n/en';\n\nexport const LOCALE_DEFAULT = 'en';\n\nexport interface NativeDateServiceOptions {\n  // 0 for Sunday, 1 for Monday, etc\n  startDayOfWeek?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  format?: string;\n  i18n?: I18nConfig;\n}\n\nconst DEFAULT_OPTIONS: NativeDateServiceOptions = {\n  format: 'DD/MM/YYYY',\n  startDayOfWeek: 0,\n};\n\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nexport class NativeDateService extends DateService<Date> {\n\n  protected options: NativeDateServiceOptions;\n  protected i18nSettings = fecha.i18n;\n\n  constructor(locale: string = LOCALE_DEFAULT, options?: NativeDateServiceOptions) {\n    super();\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    super.setLocale(this.options.i18n ? locale : LOCALE_DEFAULT);\n    this.setFechaLocaleData(this.options.i18n || EN);\n  }\n\n  public setLocale(locale: string) {\n    console.warn('Runtime locale is not supported');\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  public today(): Date {\n    return new Date();\n  }\n\n  public getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  public getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  public getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  public getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public getFirstDayOfWeek(): number {\n    return this.options.startDayOfWeek;\n  }\n\n  public getMonthName(date: Date, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const index: number = date.getMonth();\n\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  public getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.getFechaMonthNames(style)[index];\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    const dayNames: string[] = this.getFechaDayNames(style);\n\n    // avoid mutation of source array\n    return this.shiftDayOfWeekNames([...dayNames], this.options.startDayOfWeek);\n  }\n\n  public format(date: Date, format: string): string {\n    return fecha.format(date, format || this.options.format, this.i18nSettings);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  public parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  public addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  public addMonth(date: Date, num: number): Date {\n    const month: Date = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n\n    // In case of date has more days than calculated month js Date will change that month to the next one\n    // because of the date overflow.\n    month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n\n    return month;\n  }\n\n  public addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  public clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  public compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  public compareDatesSafe(date1: Date, date2: Date): number {\n    if (this.compareDates(date1, date2) < 0) {\n      return -1;\n    } else if (this.compareDates(date1, date2) > 0) {\n      return 1;\n    } else if (this.compareDates(date1, date2) === 0) {\n      return 0;\n    }\n  }\n\n  public createDate(year: number, month: number, date: number): Date {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n\n    return result;\n  }\n\n  public getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  public getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  public getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  public getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  public getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  public isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n  }\n\n  public isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n  }\n\n  public isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  public getId(): string {\n    return 'native';\n  }\n\n  protected shiftDayOfWeekNames<T>(value: T[], offset: number): T[] {\n    return value.splice(offset).concat(value);\n  }\n\n  private getFechaDayNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return this.i18nSettings.dayNamesShort;\n      case TranslationWidth.LONG:\n        return this.i18nSettings.dayNames;\n    }\n  }\n\n  private getFechaMonthNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return this.i18nSettings.monthNamesShort;\n      case TranslationWidth.LONG:\n        return this.i18nSettings.monthNames;\n    }\n  }\n\n  private setFechaLocaleData(config: I18nConfig) {\n    this.i18nSettings = {\n      ...fecha.i18n,\n      dayNames: config.dayNames[TranslationWidth.LONG],\n      dayNamesShort: config.dayNames[TranslationWidth.SHORT],\n      monthNames: config.monthNames[TranslationWidth.LONG],\n      monthNamesShort: config.monthNames[TranslationWidth.SHORT],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index): T[] => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n\n    return res;\n  }, []);\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport {\n  batch,\n  range,\n} from './helpers';\nimport {\n  CalendarDateInfo,\n  CalendarDateOptions,\n  CalendarRange,\n  RangeRole,\n} from '../type';\n\nconst DEFAULT_DATE_OPTIONS: CalendarDateOptions = {\n  bounding: false,\n  holiday: false,\n  range: RangeRole.none,\n};\n\nexport type DateRange<D> = CalendarDateInfo<D>[];\nexport type DateBatch<D> = DateRange<D>[];\n\nexport class CalendarDataService<D> {\n\n  constructor(protected dateService: DateService<D>) {\n  }\n\n  public createDayPickerData = (date: D, dateRange?: CalendarRange<D>): DateBatch<D> => {\n    const weeks: DateBatch<D> = this.createDates(date, DEFAULT_DATE_OPTIONS, dateRange);\n\n    return this.withBoundingMonths(weeks, date);\n  };\n\n  public createMonthPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const monthRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(yearStart, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(monthRange, rows);\n  };\n\n  public createYearPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const yearRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(yearStart, index);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(yearRange, rows);\n  };\n\n  public createDayPickerPagerData = (startDate: D, endDate: D): DateRange<D> => {\n    const numberOfDayPickers: number = this.getNumberOfMonths(startDate, endDate) + 1;\n\n    return range(numberOfDayPickers, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(startDate, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public createYearPickerPagerData = (startDate: D, endDate: D, rows: number, columns: number): DateRange<D> => {\n    const numberOfYears: number = this.getNumberOfYears(startDate, endDate) + 1;\n    const numberOfYearPickers: number = Math.max(Math.ceil(numberOfYears / (rows * columns)), 1);\n\n    return range(numberOfYearPickers, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(startDate, index * rows * columns);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public getNumberOfMonths = (lhs: D, rhs: D): number => {\n    const numberOfYears: number = this.getNumberOfYears(lhs, rhs);\n    const numberOfMonths: number = this.dateService.getMonth(rhs) - this.dateService.getMonth(lhs);\n\n    return numberOfMonths + numberOfYears * DateService.MONTHS_IN_YEAR;\n  };\n\n  public getNumberOfYears = (lhs: D, rhs: D): number => {\n    return this.dateService.getYear(rhs) - this.dateService.getYear(lhs);\n  };\n\n  private createDates(activeMonth: D, options: CalendarDateOptions, dateRange?: CalendarRange<D>): DateBatch<D> {\n    let days: DateRange<D> = this.createDateRangeForMonth(activeMonth, options);\n\n    if (dateRange) {\n      days = this.withRangedDates(days, dateRange);\n    }\n\n    const startOfWeekDayDiff: number = this.getStartOfWeekDayDiff(activeMonth);\n\n    return batch(days, DateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withRangedDates(days: DateRange<D>, calendarRange: CalendarRange<D>): DateRange<D> {\n    if (calendarRange.startDate && !calendarRange.endDate) {\n      return this.withRangedStartDates(days, calendarRange.startDate);\n    }\n\n    if (calendarRange.startDate && calendarRange.endDate) {\n      return this.withRangedStartEndDates(days, calendarRange.startDate, calendarRange.endDate);\n    }\n\n    return days;\n  }\n\n  private withRangedStartDates(days: DateRange<D>, startDate): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      return isSameStartDate ? { ...day, range: RangeRole.start } : day;\n    });\n  }\n\n  private withRangedStartEndDates(days: DateRange<D>, startDate: D, endDate: D): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      const isSameEndDate: boolean = this.dateService.compareDatesSafe(day.date, endDate) === 0;\n      const isInRange: boolean = this.dateService.isBetween(day.date, startDate, endDate);\n\n      let rangeRole = RangeRole.none;\n      if (isInRange) {\n        rangeRole = RangeRole.member;\n      } else {\n        if (isSameStartDate) {\n          rangeRole |= RangeRole.start;\n        }\n        if (isSameEndDate) {\n          rangeRole |= RangeRole.end;\n        }\n      }\n\n      return { ...day, range: rangeRole };\n    });\n  }\n\n  private withBoundingMonths(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    let withBoundingMonths: DateBatch<D> = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const firstWeek: DateRange<D> = weeks.shift();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const lastWeek: DateRange<D> = weeks.pop();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(month);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n               .slice(daysInMonth - numberOfBoundingDates)\n               .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n                 return { ...date, bounding: true };\n               });\n  }\n\n  private createNextBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, 1);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n               .slice(0, numberOfBoundingDates)\n               .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n                 return { ...date, bounding: true };\n               });\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth: D = this.dateService.getMonthStart(date);\n\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (\n      DateService.DAYS_IN_WEEK\n      - this.dateService.getFirstDayOfWeek()\n      + this.dateService.getDayOfWeek(date)\n    ) % DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[0].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[weeks.length - 1].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(monthDate: D, options: CalendarDateOptions): DateRange<D> {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(monthDate);\n\n    return range(daysInMonth, (i: number): CalendarDateInfo<D> => {\n      const year: number = this.dateService.getYear(monthDate);\n      const month: number = this.dateService.getMonth(monthDate);\n      const date: D = this.dateService.createDate(year, month, i + 1);\n\n      return { date, ...options };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  EvaProp,\n  StyleType,\n} from '../../theme';\nimport { Divider } from '../divider/divider.component';\nimport {\n  CalendarHeader,\n  CalendarHeaderElement,\n} from './components/calendarHeader.component';\nimport { CalendarMonthHeader } from './components/calendarMonthHeader.component';\nimport {\n  CalendarPicker,\n  CalendarPickerElement,\n} from './components/picker/calendarPicker.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport {\n  CalendarDateContent,\n  CalendarDateContentElement,\n} from './components/calendarDateContent.component';\nimport {\n  CalendarDateInfo,\n  CalendarViewMode,\n  CalendarViewModes,\n  CalendarViewModeId,\n} from './type';\nimport { TranslationWidth } from './i18n/type';\nimport { DateService } from './service/date.service';\nimport { NativeDateService } from './service/nativeDate.service';\nimport {\n  CalendarDataService,\n  DateBatch,\n} from './service/calendarData.service';\n\nexport interface BaseCalendarProps<D = Date> extends ViewProps {\n  min?: D;\n  max?: D;\n  initialVisibleDate?: D;\n  dateService?: DateService<D>;\n  boundingMonth?: boolean;\n  startView?: CalendarViewMode;\n  title?: (datePickerDate: D, monthYearPickerDate: D, viewMode: CalendarViewMode) => string;\n  filter?: (date: D) => boolean;\n  renderFooter?: () => React.ReactElement;\n  renderDay?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  renderMonth?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  renderYear?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement;\n  onVisibleDateChange?: (date: D, viewModeId: CalendarViewModeId) => void;\n  eva?: EvaProp;\n}\n\nexport type BaseCalendarElement<D> = React.ReactElement<BaseCalendarProps<D>>;\n\ninterface State<D> {\n  viewMode: CalendarViewMode;\n  visibleDate: D;  // is used in date view mode\n  pickerDate: D;  // is used in month/year view mode, goal - not to change visibleDate until month has changed\n  // pickerDate equals to visibleDate from start\n  // is auto synchronised with visibleDate on onPickerNavigationPress (open/close month/year picker)\n  // visibleDate is set to pickerDate on onMonthSelect\n}\n\nconst PICKER_ROWS: number = 4;\nconst PICKER_COLUMNS: number = 3;\nconst VIEWS_IN_PICKER: number = PICKER_ROWS * PICKER_COLUMNS;\n\nexport abstract class BaseCalendarComponent<P, D = Date> extends React.Component<BaseCalendarProps<D> & P, State<D>> {\n\n  static defaultProps: Partial<BaseCalendarProps> = {\n    dateService: new NativeDateService(),\n    boundingMonth: true,\n    startView: CalendarViewModes.DATE,\n  };\n\n  public state: State<D> = {\n    viewMode: this.props.startView,\n    visibleDate: this.dateService.getMonthStart(this.initialVisibleDate()),\n    pickerDate: this.dateService.getMonthStart(this.initialVisibleDate()),\n  };\n\n  protected dataService: CalendarDataService<D> = new CalendarDataService(this.dateService);\n\n  protected get dateService(): DateService<D> {\n    return this.props.dateService;\n  }\n\n  private get min(): D {\n    return this.props.min || this.dateService.getYearStart(this.dateService.today());\n  }\n\n  private get max(): D {\n    return this.props.max || this.dateService.getYearEnd(this.dateService.today());\n  }\n\n  public scrollToToday = (): void => {\n    this.setState({\n      viewMode: CalendarViewModes.DATE,\n      visibleDate: this.dateService.today(),\n      pickerDate: this.dateService.today(),\n    });\n  };\n\n  public scrollToDate = (date: D): void => {\n    if (date) {\n      this.setState({\n        viewMode: CalendarViewModes.DATE,\n        visibleDate: date,\n        pickerDate: date,\n      });\n    }\n  };\n\n  public getCalendarStyle = (source: StyleType) => {\n    return {\n      container: {\n        width: source.width,\n        paddingVertical: source.paddingVertical,\n        borderColor: source.borderColor,\n        borderWidth: source.borderWidth,\n        borderRadius: source.borderRadius,\n      },\n      headerContainer: {\n        paddingHorizontal: source.headerPaddingHorizontal,\n        paddingVertical: source.headerPaddingVertical,\n      },\n      title: {\n        fontSize: source.titleFontSize,\n        fontWeight: source.titleFontWeight,\n        color: source.titleColor,\n        fontFamily: source.titleFontFamily,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        tintColor: source.iconTintColor,\n      },\n      divider: {\n        marginVertical: source.dividerMarginVertical,\n      },\n      daysHeaderContainer: {\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n      row: {\n        minHeight: source.rowMinHeight,\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n    };\n  };\n\n  public isDayDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.min),\n      this.dateService.getMonth(this.min),\n      this.dateService.getDate(this.min),\n    );\n\n    const maxDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.max),\n      this.dateService.getMonth(this.max),\n      this.dateService.getDate(this.max),\n    );\n\n    const fitsFilter: boolean = this.props.filter && !this.props.filter(date) || false;\n\n    return !this.dateService.isBetweenIncludingSafe(date, minDayStart, maxDayStart) || fitsFilter;\n  };\n\n  public isDayToday = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameDaySafe(date, this.dateService.today());\n  };\n\n  protected abstract createDates(date: D): DateBatch<D>;\n\n  protected abstract selectedDate(): D | undefined;\n\n  protected abstract onDateSelect(item: D): void;\n\n  protected abstract isDateSelected(date: D): boolean;\n\n  protected abstract shouldUpdateDate(props: CalendarPickerCellProps<D>,\n                                      nextProps: CalendarPickerCellProps<D>): boolean;\n\n  private initialVisibleDate(): D {\n    return this.props.initialVisibleDate || this.selectedDate() || this.dateService.today();\n  }\n\n  private onDaySelect = ({ date }: CalendarDateInfo<D>): void => {\n    this.onDateSelect(date);\n  };\n\n  private onMonthSelect = ({ date }: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(this.state.pickerDate),\n      this.dateService.getMonth(date),\n      this.dateService.getDate(this.state.pickerDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n      pickerDate: nextVisibleDate,\n    }, () => {\n      this.props.onVisibleDateChange?.(this.state.visibleDate, this.state.viewMode.id);\n    });\n  };\n\n  private onYearSelect = ({ date }: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(date),\n      this.dateService.getMonth(this.state.pickerDate),\n      this.dateService.getDate(this.state.pickerDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      pickerDate: nextVisibleDate,\n    });\n  };\n\n  private onPickerNavigationPress = (): void => {\n    this.setState({\n      viewMode: this.state.viewMode.navigationNext(),\n      pickerDate: this.state.visibleDate,\n    });\n  };\n\n  private onHeaderNavigationLeftPress = (): void => {\n    const nextDate = this.createViewModeVisibleDate(-1);\n\n    if (this.state.viewMode.id === CalendarViewModes.DATE.id) {\n      this.setState({ visibleDate: nextDate }, () => {\n        this.props.onVisibleDateChange?.(this.state.visibleDate, this.state.viewMode.id);\n      });\n    } else {\n      this.setState({ pickerDate: nextDate });\n    }\n  };\n\n  private onHeaderNavigationRightPress = (): void => {\n    const nextDate = this.createViewModeVisibleDate(1);\n\n    if (this.state.viewMode.id === CalendarViewModes.DATE.id) {\n      this.setState({ visibleDate: nextDate }, () => {\n        this.props.onVisibleDateChange?.(this.state.visibleDate, this.state.viewMode.id);\n      });\n    } else {\n      this.setState({ pickerDate: nextDate });\n    }\n  };\n\n  private getWeekdayStyle = (source: StyleType): StyleType => {\n    return {\n      fontSize: source.weekdayTextFontSize,\n      fontWeight: source.weekdayTextFontWeight,\n      color: source.weekdayTextColor,\n      fontFamily: source.weekdayTextFontFamily,\n    };\n  };\n\n  private isDaySelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.isDateSelected(date);\n  };\n\n  private isMonthSelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date, this.selectedDate());\n  };\n\n  private isYearSelected = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date, this.selectedDate());\n  };\n\n  private isMonthDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minMonthStart: D = this.dateService.getMonthStart(this.min);\n    const maxMonthStart: D = this.dateService.getMonthStart(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date, minMonthStart, maxMonthStart);\n  };\n\n  private isYearDisabled = ({ date }: CalendarDateInfo<D>): boolean => {\n    const minYearStart: D = this.dateService.getYearStart(this.min);\n    const maxYearStart: D = this.dateService.getYearEnd(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date, minYearStart, maxYearStart);\n  };\n\n  private isMonthToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.dateService.today());\n  };\n\n  private isYearToday = ({ date }: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date, this.dateService.today());\n  };\n\n  private isHeaderNavigationAllowed = (): boolean => {\n    return this.state.viewMode.id !== CalendarViewModes.MONTH.id;\n  };\n\n  private createViewModeVisibleDate = (page: number): D => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id: {\n        return this.dateService.addMonth(this.state.visibleDate, page);\n      }\n      case CalendarViewModes.MONTH.id: {\n        return this.dateService.addYear(this.state.pickerDate, page);\n      }\n      case CalendarViewModes.YEAR.id: {\n        return this.dateService.addYear(this.state.pickerDate, VIEWS_IN_PICKER * page);\n      }\n    }\n  };\n\n  private createViewModeHeaderTitle = (visibleDate: D, pickerDate: D, viewMode: CalendarViewMode): string => {\n    switch (viewMode.id) {\n      case CalendarViewModes.DATE.id: {\n        const month: string = this.props.dateService.getMonthName(visibleDate, TranslationWidth.LONG);\n        const year: number = this.props.dateService.getYear(visibleDate);\n        return `${month} ${year}`;\n      }\n      case CalendarViewModes.MONTH.id: {\n        return `${this.dateService.getYear(pickerDate)}`;\n      }\n      case CalendarViewModes.YEAR.id: {\n        const minDateFormat: number = this.dateService.getYear(pickerDate);\n        const maxDateFormat: number = minDateFormat + VIEWS_IN_PICKER - 1;\n\n        return `${minDateFormat} - ${maxDateFormat}`;\n      }\n    }\n  };\n\n  private renderDayIfNeeded = (item: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    const shouldRender: boolean = !item.bounding || this.props.boundingMonth;\n\n    if (shouldRender) {\n      const renderSelector = this.props.renderDay || this.renderDayElement;\n      return renderSelector(item, style);\n    }\n\n    return null;\n  };\n\n  private renderWeekdayElement = (weekday: string, index: number): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        key={index}\n        textStyle={this.getWeekdayStyle(this.props.eva.style)}>\n        {weekday}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayElement = ({ date }: CalendarDateInfo<D>, evaStyle): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={evaStyle.container}\n        textStyle={evaStyle.text}>\n        {this.dateService.getDate(date)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderMonthElement = ({ date }: CalendarDateInfo<D>, evaStyle): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={evaStyle.container}\n        textStyle={evaStyle.text}>\n        {this.dateService.getMonthName(date, TranslationWidth.SHORT)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderYearElement = ({ date }: CalendarDateInfo<D>, evaStyle): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={evaStyle.container}\n        textStyle={evaStyle.text}>\n        {this.dateService.getYear(date)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayPickerElement = (date: D, evaStyle): React.ReactFragment => {\n    return (\n      <React.Fragment>\n        <CalendarMonthHeader\n          style={evaStyle.daysHeaderContainer}\n          data={this.dateService.getDayOfWeekNames()}>\n          {this.renderWeekdayElement}\n        </CalendarMonthHeader>\n        <Divider style={evaStyle.divider} />\n        <CalendarPicker\n          rowStyle={evaStyle.row}\n          data={this.createDates(date)}\n          onSelect={this.onDaySelect}\n          isItemSelected={this.isDaySelected}\n          isItemDisabled={this.isDayDisabled}\n          isItemToday={this.isDayToday}\n          shouldItemUpdate={this.shouldUpdateDate}>\n          {this.renderDayIfNeeded}\n        </CalendarPicker>\n      </React.Fragment>\n    );\n  };\n\n  private renderMonthPickerElement = (date: D, evaStyle): CalendarPickerElement<D> => {\n    return (\n      <CalendarPicker\n        rowStyle={evaStyle.row}\n        data={this.dataService.createMonthPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onMonthSelect}\n        isItemSelected={this.isMonthSelected}\n        isItemDisabled={this.isMonthDisabled}\n        isItemToday={this.isMonthToday}>\n        {this.props.renderMonth || this.renderMonthElement}\n      </CalendarPicker>\n    );\n  };\n\n  private renderYearPickerElement = (date: D, style: StyleType): CalendarPickerElement<D> => {\n    return (\n      <CalendarPicker\n        rowStyle={style.row}\n        data={this.dataService.createYearPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onYearSelect}\n        isItemSelected={this.isYearSelected}\n        isItemDisabled={this.isYearDisabled}\n        isItemToday={this.isYearToday}>\n        {this.props.renderYear || this.renderYearElement}\n      </CalendarPicker>\n    );\n  };\n\n  private renderPickerElement = (style: StyleType): React.ReactNode => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.renderDayPickerElement(this.state.visibleDate, style);\n      case CalendarViewModes.MONTH.id:\n        return this.renderMonthPickerElement(this.state.pickerDate, style);\n      case CalendarViewModes.YEAR.id:\n        return this.renderYearPickerElement(this.state.pickerDate, style);\n    }\n  };\n\n  private renderFooterElement = (evaStyle): React.ReactElement => {\n    if (this.props.renderFooter) {\n      return this.props.renderFooter();\n    }\n    return null;\n  };\n\n  private renderHeaderElement = (evaStyle): CalendarHeaderElement => {\n    const titleSelector = this.props.title || this.createViewModeHeaderTitle;\n\n    return (\n      <CalendarHeader\n        viewModeId={this.state.viewMode.id}\n        style={evaStyle.headerContainer}\n        title={titleSelector(this.state.visibleDate, this.state.pickerDate, this.state.viewMode)}\n        titleStyle={evaStyle.title}\n        iconStyle={evaStyle.icon}\n        lateralNavigationAllowed={this.isHeaderNavigationAllowed()}\n        onTitlePress={this.onPickerNavigationPress}\n        onNavigationLeftPress={this.onHeaderNavigationLeftPress}\n        onNavigationRightPress={this.onHeaderNavigationRightPress}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, ...viewProps } = this.props;\n    const evaStyle = this.getCalendarStyle(eva.style);\n\n    return (\n      <View\n        {...viewProps}\n        style={[ evaStyle.container, style ]}>\n        {this.renderHeaderElement(evaStyle)}\n        {this.renderPickerElement(evaStyle)}\n        {this.renderFooterElement(evaStyle)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\n\nexport interface CalendarProps<D = Date> extends StyledComponentProps, BaseCalendarProps<D> {\n  date?: D;\n  onSelect?: (date: D) => void;\n}\n\nexport type CalendarElement<D = Date> = React.ReactElement<CalendarProps<D>>;\n\n/**\n * Calendar provides a simple way to select a date.\n *\n * @extends React.Component\n *\n * @method {() => void} scrollToToday - Show the current date in the calendar.\n *\n * @method {(date: D) => void} scrollToDate - Show the specific date in the calendar.\n *\n * @property {D} date - Date which is currently selected.\n * Defaults to current date.\n *\n * @property {D} initialVisibleDate - Specific date that should be shown on the first render of the component.\n * If it is not set, the selected date or today's date will be displayed.\n *\n * @property {(D) => void} onSelect - Called when date cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Whether previous and next months in the current month view should be rendered.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D, D, CalendarViewMode) => string} title - A function to transform visible date to a string displayed in header for the specific view mode: first date - date picker, second date - year and month picker.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {() => ReactElement} renderFooter - Function component\n * to render below the calendar.\n *\n * @property {(D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, CalendarViewMode) => void} onVisibleDateChange - Called when navigating to the previous or next month / year.\n * viewMode returns string with current calendar view (\"YEAR\", \"MONTH\", \"DATE\").\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example CalendarSimpleUsage\n *\n * @overview-example RangeCalendarSimpleUsage\n * There is an alternative calendar component, to work with date ranges.\n *\n * @overview-example RangeCalendarType\n * Ranged calendar works with special range object - CalendarRange.\n * For empty ranges, range has no date properties.\n * And for incomplete ranges, there is only a `startDate` property.\n * ```\n * export interface CalendarRange<D> {\n *   startDate?: D;\n *   endDate?: D;\n * }\n * ```\n *\n * @overview-example CalendarInitialVisibleDate\n * Calendar can show specified date on render.\n * Also, it is possible to use scrollToToday and scrollToDate to show specific dates.\n *\n * @overview-example CalendarFilters\n * Calendar may accept minimal and maximum dates, filter functions, and `boundingMonth` property,\n * which disables displaying previous month dates at the current date view.\n *\n * @overview-example CalendarLocaleSettings\n * Also, it is possible to setup locale by configuring Date Service.\n *\n * @overview-example CalendarMoment\n * Calendar is able to work with Moment, by configuring date service.\n * In order to use Moment, `@ui-kitten/moment` package is required.\n *\n * @overview-example CalendarCustomDay\n * To render custom cells, `renderDay`, `renderMonth` and `renderYear` properties may be used.\n *\n * @overview-example CalendarTheming\n * Styling of the calendar is possible with [configuring a custom theme](guides/branding).\n */\n\n@styled('Calendar')\nexport class Calendar<D = Date> extends BaseCalendarComponent<CalendarProps<D>, D> {\n\n  constructor(props: CalendarProps<D>) {\n    super(props);\n\n    this.createDates = this.createDates.bind(this);\n    this.selectedDate = this.selectedDate.bind(this);\n    this.onDateSelect = this.onDateSelect.bind(this);\n    this.isDateSelected = this.isDateSelected.bind(this);\n    this.shouldUpdateDate = this.shouldUpdateDate.bind(this);\n  }\n\n  // BaseCalendarComponent\n\n  protected createDates(date: D): DateBatch<D> {\n    return this.dataService.createDayPickerData(date);\n  }\n\n  protected selectedDate(): D | undefined {\n    return this.props.date;\n  }\n\n  protected onDateSelect(date: D): void {\n    this.props.onSelect && this.props.onSelect(date);\n  }\n\n  protected isDateSelected(date: D): boolean {\n    return this.dateService.isSameDaySafe(date, this.selectedDate());\n  }\n\n  protected shouldUpdateDate(props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>): boolean {\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n\n    const value: boolean = selectionChanged || disablingChanged;\n\n    if (value) {\n      return true;\n    }\n\n    return props.eva.theme !== nextProps.eva.theme;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  EvaStatus,\n  FalsyFC,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { Divider } from '../divider/divider.component';\n\ntype CardStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'filled' | 'outline'>;\n}>;\n\nexport interface CardProps extends TouchableWebProps, CardStyledProps {\n  children?: React.ReactNode;\n  header?: RenderProp<ViewProps>;\n  footer?: RenderProp<ViewProps>;\n  accent?: RenderProp<ViewProps>;\n  status?: EvaStatus;\n}\n\nexport type CardElement = React.ReactElement<CardProps>;\n\n/**\n * Cards contain content and actions about a single subject.\n *\n * @extends React.Component\n *\n * @property {ReactNode} children - Component to render within the card.\n *\n * @property {ReactElement | (ViewProps) => ReactElement} header - Function component\n * to render above the content.\n *\n * @property {ReactElement | (ViewProps) => ReactElement} footer - Function component\n * to render below the content.\n *\n * @property {ReactElement | (ViewProps) => ReactElement} accent - Function component\n * to render above the card.\n * Accents may change it's color depending on *status* property.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `filled` or `outline`.\n * Defaults to *outline*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CardSimpleUsage\n * In basic example, card accepts content view as child element.\n *\n * @overview-example CardAccessories\n * It also may have header and footer by configuring `header` and `footer` properties.\n *\n * @overview-example CardStatuses\n */\n@styled('Card')\nexport class Card extends React.Component<CardProps> {\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      bodyPaddingVertical,\n      bodyPaddingHorizontal,\n      accentHeight,\n      accentBackgroundColor,\n      headerPaddingVertical,\n      headerPaddingHorizontal,\n      footerPaddingVertical,\n      footerPaddingHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      body: {\n        paddingVertical: bodyPaddingVertical,\n        paddingHorizontal: bodyPaddingHorizontal,\n      },\n      accent: {\n        height: accentHeight,\n        backgroundColor: accentBackgroundColor,\n      },\n      header: {\n        paddingHorizontal: headerPaddingHorizontal,\n        paddingVertical: headerPaddingVertical,\n      },\n      footer: {\n        paddingHorizontal: footerPaddingHorizontal,\n        paddingVertical: footerPaddingVertical,\n      },\n    };\n  };\n\n  private renderStatusAccent = (evaStyle): React.ReactElement => {\n    return (\n      <View style={evaStyle} />\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, children, accent, header, footer, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, evaStyle.container, style]}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.accent}\n          fallback={this.renderStatusAccent(evaStyle.accent)}\n          component={accent}\n        />\n        <FalsyFC\n          style={[styles.transparent, evaStyle.header]}\n          component={header}\n        />\n        {header && <Divider />}\n        <View style={evaStyle.body}>\n          {children}\n        </View>\n        {footer && <Divider />}\n        <FalsyFC\n          style={[styles.transparent, evaStyle.footer]}\n          component={footer}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  transparent: {\n    backgroundColor: 'transparent',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport { CalendarRange } from '../type';\n\nexport class RangeDateService<D> {\n\n  private dateService: DateService<D>;\n\n  constructor(dateService: DateService<D>) {\n    this.dateService = dateService;\n  }\n\n  public createRange(range: CalendarRange<D>, date: D): CalendarRange<D> {\n    switch (true) {\n      case (!range.startDate && !range.endDate):\n        return { startDate: date, endDate: null };\n      case (range.startDate && !range.endDate):\n        return this.createRangeForStart(range, date);\n      case (range.startDate !== null && range.endDate !== null):\n        return this.createRangeForStartEnd(date);\n      default:\n        return range;\n    }\n  }\n\n  private createRangeForStart(range: CalendarRange<D>, date: D): CalendarRange<D> {\n    if (this.dateService.compareDatesSafe(date, range.startDate) === -1) {\n      // startDate < date\n      return { startDate: date, endDate: range.startDate };\n    } else {\n      // startDate >= date\n      return { startDate: range.startDate ?? date, endDate: date };\n    }\n  }\n\n  private createRangeForStartEnd(date: D): CalendarRange<D> {\n    return { startDate: date, endDate: null };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\nimport { RangeDateService } from './service/rangeDate.service';\nimport { CalendarRange } from './type';\n\nexport interface RangeCalendarProps<D = Date> extends StyledComponentProps, BaseCalendarProps<D> {\n  range?: CalendarRange<D>;\n  onSelect?: (range: CalendarRange<D>) => void;\n}\n\nexport type RangeCalendarElement<D = Date> = React.ReactElement<RangeCalendarProps<D>>;\n\n/**\n * Range Calendar provides a simple way to select a date range.\n *\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @method {() => void} scrollToToday - Show the current date in the calendar.\n *\n * @method {(date: D) => void} scrollToDate - Show the specific date in the calendar.\n *\n * @property {CalendarRange<D>} range - Date range which is currently selected.\n * CalendarRange `startDate?: D, endDate?: D` - Object with start and end dates for date range.\n * A range may contain only a startDate or both startDate and endDate properties meaning completeness of picked value.\n *\n * @property {D} initialVisibleDate - Specific date that should be shown on the first render of the component.\n * If it is not set, the selected date or today's date will be displayed.\n *\n * @property {(CalendarRange) => void} onSelect - Called when day cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D, D, CalendarViewMode) => string} title - A function to transform visible date to a string displayed in header for the specific view mode: first date - date picker, second date - year and month picker.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {() => ReactElement} renderFooter - Function component\n * to render below the calendar.\n *\n * @property {(D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, CalendarViewMode) => void} onVisibleDateChange - Called when navigating to the previous or next month / year.\n * viewMode returns string with current calendar view (\"YEAR\", \"MONTH\", \"DATE\").\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RangeCalendarSimpleUsage\n *\n * @overview-example RangeCalendarType\n * Ranged calendar works with special range object - CalendarRange.\n * For empty ranges, range has no date properties.\n * And for incomplete ranges, there is only a `startDate` property.\n * ```\n * export interface CalendarRange<D> {\n *   startDate?: D;\n *   endDate?: D;\n * }\n * ```\n */\n@styled('Calendar')\nexport class RangeCalendar<D = Date> extends BaseCalendarComponent<RangeCalendarProps<D>, D> {\n\n  static defaultProps: Partial<RangeCalendarProps> = {\n    ...BaseCalendarComponent.defaultProps,\n    range: {},\n  };\n\n  private rangeDateService: RangeDateService<D> = new RangeDateService(this.dateService);\n\n  constructor(props: RangeCalendarProps<D>) {\n    super(props);\n\n    this.createDates = this.createDates.bind(this);\n    this.selectedDate = this.selectedDate.bind(this);\n    this.onDateSelect = this.onDateSelect.bind(this);\n    this.isDateSelected = this.isDateSelected.bind(this);\n    this.shouldUpdateDate = this.shouldUpdateDate.bind(this);\n  }\n\n  // BaseCalendarComponent\n\n  protected createDates(date: D): DateBatch<D> {\n    return this.dataService.createDayPickerData(date, this.props.range);\n  }\n\n  protected selectedDate(): D | undefined {\n    return this.props.range?.startDate;\n  }\n\n  protected onDateSelect(date: D): void {\n    if (this.props.onSelect) {\n      const range: CalendarRange<D> = this.rangeDateService.createRange(this.props.range, date);\n      this.props.onSelect(range);\n    }\n  }\n\n  protected isDateSelected(date: D): boolean {\n    return false;\n  }\n\n  protected shouldUpdateDate(props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>): boolean {\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n    const rangeChanged: boolean = props.range !== nextProps.range;\n    const rangeStartPlaceChanged: boolean = props.firstRangeItem !== nextProps.firstRangeItem;\n    const rangeEndPlaceChanged: boolean = props.lastRangeItem !== nextProps.lastRangeItem;\n\n    const shouldUpdate: boolean =\n      selectionChanged\n      || disablingChanged\n      || rangeChanged\n      || rangeStartPlaceChanged\n      || rangeEndPlaceChanged;\n\n    if (shouldUpdate) {\n      return true;\n    }\n\n    return props.eva.theme !== nextProps.eva.theme;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type CheckMarkProps = SvgProps;\nexport type CheckMarkElement = React.ReactElement<CheckMarkProps>;\n\nexport class CheckMark extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='checkmark'>\n            <Rect width='24' height='24' opacity='0'/>\n            <Path\n              d='M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  G,\n  Path,\n  Rect,\n  Svg,\n  SvgProps,\n} from 'react-native-svg';\n\nexport type MinusProps = SvgProps;\nexport type MinusElement = React.ReactElement<MinusProps>;\n\nexport class Minus extends React.Component<SvgProps> {\n\n  public render(): React.ReactElement<SvgProps> {\n    return (\n      <Svg {...this.props} viewBox='0 0 24 24'>\n        <G data-name='Layer 2'>\n          <G data-name='minus'>\n            <Rect\n              width='24'\n              height='24'\n              transform='rotate(180 12 12)'\n              opacity='0'\n            />\n            <Path d='M19 13H5a1 1 0 0 1 0-2h14a1 1 0 0 1 0 2z'/>\n          </G>\n        </G>\n      </Svg>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport {\n  EvaStatus,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\nimport {\n  CheckMark,\n  CheckMarkProps,\n} from '../shared/checkmark.component';\nimport {\n  Minus,\n  MinusProps,\n} from '../shared/minus.component';\n\ntype CheckBoxStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | string>;\n}>;\n\nexport interface CheckBoxProps extends TouchableWebProps, CheckBoxStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  checked?: boolean;\n  onChange?: (checked: boolean, indeterminate: boolean) => void;\n  indeterminate?: boolean;\n  status?: EvaStatus;\n}\n\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\n/**\n * Checkboxes allow the user to select one or more items from a set.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Whether component is checked.\n * Defaults to *false*.\n *\n * @property {(checked: boolean, indeterminate: boolean) => void} onChange - Called when checkbox\n * should switch it's value.\n * Called with *checked* and *indeterminate* values.\n * If *indeterminate* was provided, it should be changed to the value passed in this function.\n *\n * @property {boolean} indeterminate - Whether checked status is indeterminate.\n * Will set indeterminate to false when the checked property is changed.\n * Defaults to *false*.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} children - String, number or a function component\n * to render near the checkbox.\n * If it is a function, expected to return a Text.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CheckboxSimpleUsage\n *\n * @overview-example CheckboxStates\n * CheckBoxes can be checked or disabled.\n *\n * @overview-example CheckboxIndeterminate\n * An extra state is `indeterminate`, which may be useful for grouping inner checkboxes.\n * Indeterminate will be set to `false` when the checked state is changed.\n *\n * @overview-example CheckboxStatus\n * Checkboxes may also be marked with `status` property, which is useful within forms validation.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example CheckboxStyling\n * CheckBox and it's inner views can be styled by passing them as function components.\n * ```\n * import { CheckBox, Text } from '@ui-kitten/components';\n *\n * <CheckBox>\n *   {evaProps => <Text {...evaProps}>Place your Text</Text>}\n * </CheckBox>\n * ```\n *\n * @overview-example CheckboxTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n@styled('CheckBox')\nexport class CheckBox extends React.Component<CheckBoxProps> {\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private onPress = (): void => {\n    this.props.eva.dispatch([]);\n    this.props.onChange && this.props.onChange(!this.props.checked, false);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        fill: iconTintColor,\n        stroke: iconTintColor,\n        strokeWidth: 3,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private renderIconElement = (style: SvgProps): React.ReactElement<SvgProps> => {\n    const Icon: React.ComponentType<MinusProps | CheckMarkProps> = this.props.indeterminate ? Minus : CheckMark;\n    return (\n      <Icon {...style} />\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, disabled, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, style]}\n        disabled={disabled}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={styles.highlightContainer}>\n          <View style={[evaStyle.highlight, styles.highlight]} />\n          <View style={[evaStyle.selectContainer, styles.selectContainer]}>\n            {this.renderIconElement(evaStyle.icon)}\n          </View>\n        </View>\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  EvaInputSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWithoutFeedback,\n} from '../../devsupport';\nimport {\n  Interaction,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { BaseCalendarProps } from '../calendar/baseCalendar.component';\nimport { CalendarElement } from '../calendar/calendar.component';\nimport { RangeCalendarElement } from '../calendar/rangeCalendar.component';\nimport { NativeDateService } from '../calendar/service/nativeDate.service';\nimport { Popover } from '../popover/popover.component';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from '../popover/type';\nimport { TextProps } from '../text/text.component';\n\nexport interface BaseDatepickerProps<D = Date> extends StyledComponentProps,\n  TouchableOpacityProps,\n  BaseCalendarProps<D> {\n\n  controlStyle?: StyleProp<ViewStyle>;\n  label?: RenderProp<TextProps> | React.ReactText;\n  caption?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  status?: EvaStatus;\n  size?: EvaInputSize;\n  placeholder?: RenderProp<TextProps> | React.ReactText;\n  placement?: PopoverPlacement | string;\n  backdropStyle?: StyleProp<ViewStyle>;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\ninterface State {\n  visible: boolean;\n}\n\nexport abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {\n\n  static defaultProps: Partial<BaseDatepickerProps> = {\n    dateService: new NativeDateService(),\n    placeholder: 'dd/mm/yyyy',\n    placement: PopoverPlacements.BOTTOM_START,\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  protected calendarRef = React.createRef<any>(); // FIXME: ts\n\n  public scrollToToday = (): void => {\n    this.calendarRef.current?.scrollToToday();\n  }\n\n  public scrollToDate = (date: Date): void => {\n    this.calendarRef.current?.scrollToDate(date);\n  }\n\n  private popoverRef = React.createRef<Popover>();\n\n  public show = (): void => {\n    this.popoverRef.current?.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current?.hide();\n  };\n\n  public focus = (): void => {\n    this.setState({ visible: true }, this.onPickerVisible);\n  };\n\n  public blur = (): void => {\n    this.setState({ visible: false }, this.onPickerInvisible);\n  };\n\n  public isFocused = (): boolean => {\n    return this.state.visible;\n  };\n\n  public abstract clear(): void;\n\n  protected abstract getComponentTitle(): RenderProp<TextProps> | React.ReactText;\n\n  protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;\n\n  private getComponentStyle = (style: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelMarginBottom,\n      labelFontWeight,\n      labelFontFamily,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionFontWeight,\n      captionFontFamily,\n      popoverWidth,\n      ...controlParameters\n    } = style;\n\n    return {\n      control: controlParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        marginHorizontal: textMarginHorizontal,\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        fontFamily: labelFontFamily,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        fontFamily: captionFontFamily,\n        color: captionColor,\n      },\n      popover: {\n        width: popoverWidth,\n        marginBottom: captionMarginTop,\n      },\n    };\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.setPickerVisible();\n    this.props.onPress && this.props.onPress(event);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private onPickerVisible = (): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onFocus && this.props.onFocus();\n  };\n\n  private onPickerInvisible = (): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur();\n  };\n\n  private setPickerVisible = (): void => {\n    this.setState({ visible: true }, this.onPickerVisible);\n  };\n\n  private setPickerInvisible = (): void => {\n    this.setState({ visible: false }, this.onPickerInvisible);\n  };\n\n  private renderInputElement = (props, evaStyle): React.ReactElement => {\n    return (\n      <TouchableWithoutFeedback\n        {...props}\n        style={[evaStyle.control, styles.control, this.props.controlStyle]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={this.props.accessoryLeft}\n        />\n        <FalsyText\n          style={evaStyle.text}\n          numberOfLines={1}\n          ellipsizeMode='tail'\n          component={this.getComponentTitle()}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={this.props.accessoryRight}\n        />\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const {\n      eva,\n      style,\n      testID,\n      backdropStyle,\n      controlStyle,\n      placement,\n      label,\n      accessoryLeft,\n      accessoryRight,\n      caption,\n      ...touchableProps\n    } = this.props;\n\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View\n        style={style}\n        testID={testID}>\n        <FalsyText\n          style={[evaStyle.label, styles.label]}\n          component={label}\n        />\n        <Popover\n          ref={this.popoverRef}\n          style={[evaStyle.popover, styles.popover]}\n          backdropStyle={backdropStyle}\n          placement={placement}\n          visible={this.state.visible}\n          anchor={() => this.renderInputElement(touchableProps, evaStyle)}\n          onBackdropPress={this.setPickerInvisible}>\n          {this.renderCalendar()}\n        </Popover>\n        <FalsyText\n          style={[evaStyle.captionLabel, styles.captionLabel]}\n          component={caption}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    borderWidth: 0,\n  },\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  label: {\n    textAlign: 'left',\n  },\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { RenderProp } from '../../devsupport';\nimport { styled } from '../../theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  Calendar,\n  CalendarElement,\n  CalendarProps,\n} from '../calendar/calendar.component';\nimport { TextProps } from '../text/text.component';\n\nexport interface DatepickerProps<D = Date> extends BaseDatepickerProps<D>, CalendarProps<D> {\n  autoDismiss?: boolean;\n}\n\nexport type DatepickerElement<D = Date> = React.ReactElement<DatepickerProps<D>>;\n\n/**\n * Date picker provides a simple way to select a date within a picker displayed in modal.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets picker visible.\n *\n * @method {() => void} hide - Sets picker invisible.\n *\n * @method {() => void} focus - Focuses Datepicker and sets it visible.\n *\n * @method {() => void} blur - Removes focus from Datepicker and sets it invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the Datepicker is currently focused and visible.\n *\n * @method {() => void} clear - Removes all text from the Datepicker.\n *\n * @method {() => void} scrollToToday - Show the current date in the picker, the picker should be visible.\n *\n * @method {(date: D) => void} scrollToDate - Show the specific date in the picker, the picker should be visible.\n *\n * @property {D} date - Date which is currently selected.\n * Defaults to current date.\n *\n * @property {D} initialVisibleDate - Specific date that should be shown on load.\n * If it is not set, the selected date or today's date will be displayed.\n * Clear initialVisibleDate to stop showing it when the datepicker is opened.\n *\n * @property {(D) => void} onSelect - Called when date cell is pressed.\n *\n * @property {boolean} autoDismiss - Will hide the calendar when date cell is pressed.\n * Defaults to *true*.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Defines if previous and next months should be rendered in the current month view.\n *\n * @property {(D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D, D, CalendarViewMode) => string} title - A function to transform visible date to a string displayed in header for the specific view mode: first date - date picker, second date - year and month picker.\n *\n * @property {(date: D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when input field is empty.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} caption - Function component to render below Input view.\n * Expected to return View.\n *\n * @property {() => void} onFocus - Called when picker becomes visible.\n *\n * @property {() => void} onBlur - Called when picker becomes invisible.\n *\n * @property {string | PopoverPlacement} placement - Position of the picker relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DatepickerSimpleUsage\n * Both range and date pickers support all parameters as calendar, so, check Calendar API for additional info.\n *\n * @overview-example DatepickerAccessories\n * Pickers may contain labels, captions and inner views by configuring `accessoryLeft` or `accessoryRight` properties.\n * Within Eva, Datepicker accessories are expected to be images or [svg icons](guides/icon-packages).\n *\n * @overview-example DatepickerInitialVisibleDate\n * Calendar can show specified date on render.\n * Also, it is possible to use scrollToToday and scrollToDate to show specific dates.\n *\n * @overview-example DatepickerFilters\n * Picker may accept minimal and maximum dates, filter functions, and `boundingMonth` property,\n * which disables displaying previous month dates at the current date view.\n *\n * @overview-example DatepickerLocaleSettings\n * Also, it is possible to setup locale by configuring Date Service.\n *\n * @overview-example DatepickerStatus\n * Datepicker may be marked with `status` property, which is useful within forms validation.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example DatepickerSize\n * To resize Datepicker, a `size` property may be used.\n *\n * @overview-example DatepickerMoment\n * Datepicker is able to work with Moment, by configuring date service.\n * In order to use Moment, `@ui-kitten/moment` package is required.\n *\n * @overview-example DatepickerCustomDay\n * To render custom cells, `renderDay`, `renderMonth` and `renderYear` properties may be used.\n *\n * @overview-example DatepickerStyling\n * Datepicker and it's inner views can be styled by passing them as function components.\n * ```\n * import { Datepicker, Text } '@ui-kitten/components';\n *\n * <Datepicker\n *   controlStyle={{ ... }}\n *   label={evaProps => <Text {...evaProps}>Label</Text>}\n *   caption={evaProps => <Text {...evaProps}>Caption</Text>}\n * />\n * ```\n *\n * @overview-example DatepickerTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n@styled('Datepicker')\nexport class Datepicker<D = Date> extends BaseDatepickerComponent<DatepickerProps<D>, D> {\n\n  static defaultProps: DatepickerProps = {\n    ...BaseDatepickerComponent.defaultProps,\n    autoDismiss: true,\n  };\n\n  constructor(props: DatepickerProps<D>) {\n    super(props);\n    this.clear = this.clear.bind(this);\n  }\n\n  private get calendarProps(): CalendarProps<D> {\n    return {\n      min: this.props.min,\n      max: this.props.max,\n      date: this.props.date,\n      initialVisibleDate: this.props.initialVisibleDate,\n      dateService: this.props.dateService,\n      boundingMonth: this.props.boundingMonth,\n      startView: this.props.startView,\n      filter: this.props.filter,\n      title: this.props.title,\n      onSelect: this.props.onSelect,\n      renderDay: this.props.renderDay,\n      renderMonth: this.props.renderMonth,\n      renderYear: this.props.renderYear,\n      renderFooter: this.props.renderFooter,\n    };\n  }\n\n  public clear = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(null);\n    }\n  };\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): RenderProp<TextProps> | React.ReactText {\n    if (this.props.date) {\n      return this.props.dateService.format(this.props.date, null);\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected onSelect = (date: D): void => {\n    this.props.onSelect && this.props.onSelect(date);\n    this.props.autoDismiss && this.blur();\n  };\n\n  protected renderCalendar(): CalendarElement<D> {\n    return (\n      <Calendar\n        {...this.calendarProps}\n        ref={this.calendarRef}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { styled } from '../../theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  RangeCalendar,\n  RangeCalendarElement,\n  RangeCalendarProps,\n} from '../calendar/rangeCalendar.component';\nimport { RenderProp } from '@ui-kitten/components/devsupport';\nimport { TextProps } from '@ui-kitten/components';\n\nexport type RangeDatepickerProps<D = Date> = BaseDatepickerProps<D> & RangeCalendarProps<D>;\nexport type RangeDatepickerElement<D = Date> = React.ReactElement<RangeDatepickerProps<D>>;\n\n/**\n * Range date picker provides a simple way to select a date range within a picker displayed in modal.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets picker visible.\n *\n * @method {() => void} hide - Sets picker invisible.\n *\n * @method {() => void} focus - Focuses Datepicker and sets it visible.\n *\n * @method {() => void} blur - Removes focus from Datepicker and sets it invisible.\n *\n * @method {() => boolean} isFocused - Returns true if the Datepicker is currently focused and visible.\n *\n * @method {() => void} clear - Removes all text from the Datepicker.\n *\n * @method {() => void} scrollToToday - Show the current date in the picker, the picker should be visible.\n *\n * @method {(date: D) => void} scrollToDate - Show the specific date in the picker, the picker should be visible.\n *\n * @property {CalendarRange<D>} range - Date range which is currently selected.\n * CalendarRange `startDate?: D, endDate?: D` - Object with start and end dates for date range.\n * A range may contain only a startDate or both startDate and endDate properties meaning completeness of picked value.\n *\n * @property {D} initialVisibleDate - Specific date that should be shown on load.\n * If it is not set, the selected date or today's date will be displayed.\n * Clear initialVisibleDate to stop showing it when the datepicker is opened.\n *\n * @property {(CalendarRange) => void} onSelect - Called when day cell is pressed.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n * Moment.js service can be provided by installing `@ui-kitten/moment` package.\n * date-fns service can be provided by installing `@ui-kitten/date-fns` package.\n *\n * @property {boolean} boundingMonth - Whether previous and next months in the current month view should be rendered.\n *\n * @property {D, NamedStyles) => ReactElement} renderDay - Function component\n * to render instead of default day cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderMonth - Function component\n * to render instead of default month cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {(D, NamedStyles) => ReactElement} renderYear - Function component\n * to render instead of default year cell.\n * Called with a date for this cell and styles provided by Eva.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar.\n * Can be `CalendarViewModes.DATE`, `CalendarViewModes.MONTH` or `CalendarViewModes.YEAR`.\n * Defaults to *CalendarViewModes.DATE*.\n *\n * @property {(D, D, CalendarViewMode) => string} title - A function to transform visible date to a string displayed in header for the specific view mode: first date - date picker, second date - year and month picker.\n *\n * @property {(D) => boolean} filter - A function to determine whether particular date cells should be disabled.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Useful for giving user a hint on the input validity.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when input field is empty.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} label - String, number or a function component\n * to render to top of the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} caption - Function component to render below Input view.\n * Expected to return View.\n *\n * @property {() => void} onFocus - Called when picker becomes visible.\n *\n * @property {() => void} onBlur - Called when picker becomes invisible.\n *\n * @property {string | PopoverPlacement} placement - Position of the picker relative to the input field.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RangeDatepickerSimpleUsage\n * Ranged picker works with special range object - CalendarRange: `{ startDate: Date, endDate: Date }`.\n * For incomplete ranges, there is only a `startDate` property.\n */\n@styled('Datepicker')\nexport class RangeDatepicker<D = Date> extends BaseDatepickerComponent<RangeDatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  constructor(props: RangeDatepickerProps<D>) {\n    super(props);\n    this.clear = this.clear.bind(this);\n  }\n\n  private get calendarProps(): RangeCalendarProps<D> {\n    return {\n      min: this.props.min,\n      max: this.props.max,\n      range: this.props.range,\n      initialVisibleDate: this.props.initialVisibleDate,\n      dateService: this.props.dateService,\n      boundingMonth: this.props.boundingMonth,\n      startView: this.props.startView,\n      filter: this.props.filter,\n      title: this.props.title,\n      onSelect: this.props.onSelect,\n      renderDay: this.props.renderDay,\n      renderMonth: this.props.renderMonth,\n      renderYear: this.props.renderYear,\n      renderFooter: this.props.renderFooter,\n    };\n  }\n\n  public clear = (): void => {\n    this.props.onSelect && this.props.onSelect({});\n  };\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): RenderProp<TextProps> | React.ReactText {\n    const { startDate, endDate } = this.props.range;\n\n    if (startDate || endDate) {\n      const start: string = startDate ? this.props.dateService.format(startDate, null) : '';\n      const end: string = endDate ? this.props.dateService.format(endDate, null) : '';\n\n      return `${start} - ${end}`;\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): RangeCalendarElement<D> {\n    return (\n      // @ts-ignore\n      <RangeCalendar\n        ref={this.calendarRef}\n        {...this.calendarProps} />\n    );\n  }\n}\n","import React from 'react';\nimport { IndexPath } from '../../devsupport';\n\nexport interface MenuItemDescriptor {\n  index: IndexPath;\n  groupIndices?: IndexPath[];\n}\n\nexport class MenuService {\n\n  public createDescriptorForElement = (element: React.ReactElement, index: number): MenuItemDescriptor => {\n    const groupIndices = React.Children.map(element.props.children, ((child: React.ReactElement, row: number) => {\n      return new IndexPath(row, index);\n    }));\n\n    return { groupIndices, index: new IndexPath(index) };\n  };\n\n  public createDescriptorForNestedElement = (groupDescriptor: MenuItemDescriptor, index: number): MenuItemDescriptor => {\n\n    return {\n      index: new IndexPath(index, groupDescriptor.index.row),\n      groupIndices: null,\n    };\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ListRenderItemInfo } from 'react-native';\nimport {\n  ChildrenWithProps,\n  IndexPath,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport { styled } from '../../theme';\nimport { Divider } from '../divider/divider.component';\nimport {\n  List,\n  ListElement,\n  ListProps,\n} from '../list/list.component';\nimport {\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport {\n  MenuItemDescriptor,\n  MenuService,\n} from './menu.service';\n\ntype MenuStyledProps = Overwrite<ListProps, {\n  appearance?: LiteralUnion<'default' | 'noDivider'>;\n}>;\n\ntype MenuListProps = Omit<MenuStyledProps, 'data' | 'renderItem'>;\n\nexport interface MenuProps extends MenuListProps {\n  children?: ChildrenWithProps<MenuItemProps>;\n  selectedIndex?: IndexPath;\n  onSelect?: (index: IndexPath) => void;\n}\n\nexport type MenuElement = React.ReactElement<MenuProps>;\n\n/**\n * A versatile menu for navigation.\n * Menu should contain MenuItem or MenuGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noDivider`.\n *\n * @property {ReactElement<MenuItemProps> | ReactElement<MenuItemProps>[]} children -\n * Items to be rendered within menu.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Menu becomes sectioned when MenuGroup is rendered within children.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath) => void} onSelect - Called when item is pressed.\n * Called with `row: number` for non-grouped items.\n * Called with `row: number, section: number` for items rendered within group,\n * where row - index of item in group, section - index of group in list.\n *\n * @property {ListProps} ...ListProps - Any props applied to List component,\n * excluding `renderItem` and `data`.\n *\n * @overview-example MenuSimpleUsage\n *\n * @overview-example MenuIndexType\n * Menu works with special index object - IndexPath.\n * For non-grouped items in menu, there is only a `row` property.\n * Otherwise, `row` is an index of option within the group, section - index of group in menu.\n * ```\n * interface IndexPath {\n *   row: number;\n *   section?: number;\n * }\n * ```\n *\n * @overview-example MenuNoMarkers\n * Pressing of menu items can be handled without marking items.\n *\n * @overview-example MenuAccessories\n * Items may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n * Within Eva, item accessories are expected to be images or [svg icons](guides/icon-packages).\n *\n * @overview-example MenuGroups\n * And be grouped within `MenuGroup` component.\n *\n * @overview-example MenuDisabledOptions\n * Also, it may be disabled with `disabled` property.\n *\n * @overview-example MenuStyling\n * Menu and it's inner views can be styled by passing them as function components.\n * ```\n * import { MenuItem, Text } from '@ui-kitten/components';\n *\n * <MenuItem\n *   title={evaProps => <Text {...evaProps}>USERS</Text>}>\n * </MenuItem>\n * ```\n *\n * @overview-example MenuTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n *\n */\n@styled('Menu')\nexport class Menu extends React.Component<MenuProps> {\n\n  private service: MenuService = new MenuService();\n\n  private get data(): any[] {\n    return React.Children.toArray(this.props.children || []);\n  }\n\n  private get shouldRenderDividers(): boolean {\n    return this.props.appearance !== 'noDivider';\n  }\n\n  public clear = (): void => {\n    this.props.onSelect && this.props.onSelect(null);\n  };\n\n  private onItemPress = (descriptor: MenuItemDescriptor): void => {\n    this.props.onSelect && this.props.onSelect(descriptor.index);\n  };\n\n  private isItemSelected = (descriptor: MenuItemDescriptor): boolean => {\n    return descriptor.index.equals(this.props.selectedIndex);\n  };\n\n  private cloneItemWithProps = (element: React.ReactElement, props: MenuItemProps): React.ReactElement => {\n    const nestedElements = React.Children.map(element.props.children, (el: MenuItemElement, index: number) => {\n      const descriptor = this.service.createDescriptorForNestedElement(props.descriptor, index);\n      const selected: boolean = this.isItemSelected(descriptor);\n\n      return this.cloneItemWithProps(el, { ...props, selected, descriptor });\n    });\n\n    const onPress = (event, descriptor) => {\n      element.props.onPress && element.props.onPress();\n      props.onPress(event, descriptor);\n    };\n\n    return React.cloneElement(element, { ...element.props, ...props, onPress }, nestedElements);\n  };\n\n  private renderItem = (info: ListRenderItemInfo<MenuItemElement>): React.ReactElement => {\n    const descriptor = this.service.createDescriptorForElement(info.item, info.index);\n    const selected: boolean = this.isItemSelected(descriptor);\n\n    return this.cloneItemWithProps(info.item, { descriptor, selected, onPress: this.onItemPress });\n  };\n\n  public render(): ListElement {\n    const { appearance, ...listProps } = this.props;\n\n    return (\n      <List\n        ItemSeparatorComponent={this.shouldRenderDividers && Divider}\n        {...listProps}\n        data={this.data}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ViewProps } from 'react-native';\nimport {\n  FalsyFC,\n  RenderProp,\n} from '../../devsupport';\nimport {\n  styled,\n  StyleType,\n} from '../../theme';\nimport {\n  Menu,\n  MenuProps,\n} from '../menu/menu.component';\n\nexport interface DrawerProps extends MenuProps {\n  header?: RenderProp<ViewProps>;\n  footer?: RenderProp<ViewProps>;\n}\n\nexport type DrawerElement = React.ReactElement<DrawerProps>;\n\n/**\n * Navigation panel which slides from the side of the screen.\n * Drawer should contain DrawerItem or DrawerGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<DrawerItemProps> | ReactElement<DrawerItemProps>[]} children -\n * items to be rendered within drawer.\n * \n * @property {ReactElement | (ViewProps) => ReactElement} header - Function component\n * to render above the content.\n *\n * @property {ReactElement | (ViewProps) => ReactElement} footer - Function component\n * to render below the content.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Drawer becomes sectioned when DrawerGroup is rendered within children.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath | IndexPath[]) => void} onSelect - Called when item is pressed.\n * Called with `row: number` for non-grouped items.\n * Called with `row: number, section: number` for items rendered within group,\n * where row - index of item in group, section - index of group in list.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` or `noDivider`.\n *\n * @property {ListProps} ...ListProps - Any props applied to List component,\n * excluding `renderItem` and `data`.\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example DrawerIndexType\n * Drawer works with special index object - IndexPath.\n * For non-grouped items in drawer, there is only a `row` property.\n * Otherwise, `row` is an index of option within the group, section - index of group in drawer.\n * ```\n * interface IndexPath {\n *   row: number;\n *   section?: number;\n * }\n * ```\n *\n * @overview-example Using with React Navigation\n * Drawer can also be [configured with React Navigation](guides/configure-navigation)\n * to provide a navigational component.\n *\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createDrawerNavigator } from '@react-navigation/drawer';\n * import { Drawer, DrawerItem, Layout, Text, IndexPath } from '@ui-kitten/components';\n *\n * const { Navigator, Screen } = createDrawerNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const DrawerContent = ({ navigation, state }) => (\n *   <Drawer\n *     selectedIndex={new IndexPath(state.index)}\n *     onSelect={index => navigation.navigate(state.routeNames[index.row])}>\n *     <DrawerItem title='Users' />\n *     <DrawerItem title='Orders' />\n *   </Drawer>\n * );\n *\n * export const DrawerNavigator = () => (\n *   <Navigator drawerContent={props => <DrawerContent {...props}/>}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <DrawerNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example DrawerNoMarkers\n * Pressing of drawer items can be handled without marking items.\n *\n * @overview-example DrawerAccessories\n * Drawer may be configured with header and footer,\n * and items may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n * Within Eva, item accessories are expected to be images or [svg icons](guides/icon-packages).\n *\n * @overview-example DrawerGroups\n * And be grouped within `DrawerGroup` component.\n *\n * @overview-example DrawerStyling\n * Drawer and it's inner views can be styled by passing them as function components.\n * ```\n * import { DrawerItem, Text } from '@ui-kitten/components';\n *\n * <DrawerItem\n *   title={evaProps => <Text {...evaProps}>USERS</Text>}>\n * </DrawerItem>\n * ```\n *\n * @overview-example DrawerTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n@styled('Drawer')\nexport class Drawer extends React.Component<DrawerProps> {\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      headerPaddingHorizontal,\n      headerPaddingVertical,\n      footerPaddingHorizontal,\n      footerPaddingVertical,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      header: {\n        paddingHorizontal: headerPaddingHorizontal,\n        paddingVertical: headerPaddingVertical,\n      },\n      footer: {\n        paddingHorizontal: footerPaddingHorizontal,\n        paddingVertical: footerPaddingVertical,\n      },\n    };\n  };\n\n  public render(): React.ReactFragment {\n    const { eva, style, header, footer, ...menuProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <React.Fragment>\n        <FalsyFC\n          style={evaStyle.header}\n          component={header}\n        />\n        <Menu\n          style={[evaStyle.container, style]}\n          showsVerticalScrollIndicator={false}\n          bounces={false}\n          {...menuProps}\n        />\n        <FalsyFC\n          style={evaStyle.footer}\n          component={footer}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  PropsService,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\nimport { MenuItemDescriptor } from './menu.service';\n\ntype MenuItemStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | 'grouped'>;\n}>;\n\ntype TouchableMenuItemProps = Overwrite<TouchableWebProps, {\n  onPress?: (descriptor: MenuItemDescriptor, event?: GestureResponderEvent) => void;\n}>;\n\nexport interface MenuItemProps extends TouchableMenuItemProps, MenuItemStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  descriptor?: MenuItemDescriptor;\n}\n\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\n/**\n * A single item in Menu.\n * Items should be rendered within Menu or MenuGroup to provide a usable navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example MenuItemSimpleUsage\n */\n@styled('MenuItem')\nexport class MenuItem extends React.Component<MenuItemProps> {\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.props.onPress && this.props.onPress(this.props.descriptor, event);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (style: StyleType) => {\n    const { paddingHorizontal, paddingVertical, paddingLeft, backgroundColor } = style;\n\n    const titleStyles: StyleType = PropsService.allWithPrefix(style, 'title');\n    const indicatorStyles: StyleType = PropsService.allWithPrefix(style, 'indicator');\n    const iconStyles: StyleType = PropsService.allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingLeft: paddingLeft,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      title: {\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        color: titleStyles.titleColor,\n      },\n      indicator: {\n        width: indicatorStyles.indicatorWidth,\n        backgroundColor: indicatorStyles.indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { eva, style, title, accessoryLeft, accessoryRight, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, evaStyle.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[StyleSheet.absoluteFill, evaStyle.indicator]} />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryLeft}\n        />\n        <FalsyText\n          style={[evaStyle.title, styles.title]}\n          component={title}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryRight}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  title: {\n    flex: 1,\n    textAlign: 'left',\n  },\n});\n","import React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  Frame,\n  MeasureElement,\n  MeasuringElement,\n  Point,\n} from '../../devsupport';\nimport { ChevronDown } from '../shared/chevronDown.component';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport { ModalService } from '../../theme';\nimport { MenuItemDescriptor } from './menu.service';\n\nexport interface MenuGroupProps extends MenuItemProps {\n  children?: ChildrenWithProps<MenuItemProps>;\n}\n\nexport type MenuGroupElement = React.ReactElement<MenuGroupProps>;\n\ninterface State {\n  submenuHeight: number;\n}\n\nconst CHEVRON_DEG_COLLAPSED: number = -180;\nconst CHEVRON_DEG_EXPANDED: number = 0;\nconst CHEVRON_ANIM_DURATION: number = 200;\nconst POSITION_OUTSCREEN: Point = Point.outscreen();\n\n/**\n * A group of items displayed in Menu.\n * Groups should be rendered within Menu and contain MenuItem components to provide a useful navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<MenuItemProps> | ReactElement<MenuItemProps>[]} children -\n * Items to be rendered within group.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example MenuGroups\n */\nexport class MenuGroup extends React.Component<MenuGroupProps, State> {\n\n  public state: State = {\n    submenuHeight: 1,\n  };\n  private expandAnimation: Animated.Value = new Animated.Value(0);\n\n  private get hasSubmenu(): boolean {\n    return React.Children.count(this.props.children) > 0;\n  }\n\n  private get shouldMeasureSubmenu(): boolean {\n    return this.state.submenuHeight === 1;\n  }\n\n  private get expandAnimationValue(): number {\n    // @ts-ignore - private api, but let's us avoid creating animation listeners.\n    // `this.expandAnimation.addListener`\n    return this.expandAnimation._value;\n  }\n\n  private get expandToRotateInterpolation(): Animated.AnimatedInterpolation {\n    return this.expandAnimation.interpolate({\n      inputRange: [-this.state.submenuHeight, CHEVRON_DEG_EXPANDED],\n      outputRange: [`${CHEVRON_DEG_COLLAPSED}deg`, `${CHEVRON_DEG_EXPANDED}deg`],\n    });\n  }\n\n  private get submenuStyle(): ViewStyle {\n    // @ts-ignore - issue of `@types/react-native` package\n    return this.shouldMeasureSubmenu ? styles.outscreen : { height: this.expandAnimation };\n  }\n\n  private get defaultItemProps(): MenuItemProps {\n    return { appearance: 'grouped' };\n  }\n\n  private onPress = (descriptor: MenuItemDescriptor, event: GestureResponderEvent): void => {\n    if (this.hasSubmenu) {\n      const expandValue: number = this.expandAnimationValue > 0 ? 0 : this.state.submenuHeight;\n      this.createExpandAnimation(expandValue).start();\n      this.props.onPress && this.props.onPress(descriptor, event);\n    }\n  };\n\n  private onSubmenuMeasure = (frame: Frame): void => {\n    this.setState({ submenuHeight: frame.size.height });\n  };\n\n  private createExpandAnimation = (toValue: number): Animated.CompositeAnimation => {\n    return Animated.timing(this.expandAnimation, {\n      toValue: toValue,\n      duration: CHEVRON_ANIM_DURATION,\n      useNativeDriver: false,\n    });\n  };\n\n  private renderAccessoryIfNeeded = (evaProps: Partial<ImageProps>): React.ReactElement => {\n    if (!this.hasSubmenu) {\n      return null;\n    }\n\n    const style = StyleSheet.flatten(evaProps.style);\n\n    return (\n      <Animated.View style={{ transform: [{ rotate: this.expandToRotateInterpolation }] }}>\n        <ChevronDown {...evaProps} fill={style.tintColor}/>\n      </Animated.View>\n    );\n  };\n\n  private renderItemsWithDefaultProps = (): React.ReactNode => {\n    return React.Children.map(this.props.children, (item: MenuItemElement): MenuItemElement => {\n      return React.cloneElement(item, this.defaultItemProps, null);\n    });\n  };\n\n  private renderGroupedItems = (evaStyle): React.ReactElement<ViewProps> => {\n    return (\n      <Animated.View style={[styles.submenu, this.submenuStyle, evaStyle]}>\n        {this.renderItemsWithDefaultProps()}\n      </Animated.View>\n    );\n  };\n\n  private renderMeasuringGroupedItems = (evaStyle): MeasuringElement => {\n    return (\n      <MeasureElement \n        shouldUseTopInsets={ModalService.getShouldUseTopInsets}\n        onMeasure={this.onSubmenuMeasure}>\n        {this.renderGroupedItems(evaStyle)}\n      </MeasureElement>\n    );\n  };\n\n  private renderGroupedItemsIfNeeded = (evaStyle): React.ReactNode => {\n    if (!this.hasSubmenu) {\n      return null;\n    }\n\n    if (this.shouldMeasureSubmenu) {\n      return this.renderMeasuringGroupedItems(evaStyle);\n    }\n\n    return this.renderGroupedItems(evaStyle);\n  };\n\n  public render(): React.ReactNode {\n    const { children, ...itemProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <MenuItem\n          accessoryRight={this.renderAccessoryIfNeeded}\n          {...itemProps}\n          onPress={this.onPress}\n        />\n        {this.renderGroupedItemsIfNeeded({})}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  outscreen: {\n    position: 'absolute',\n    left: POSITION_OUTSCREEN.x,\n    top: POSITION_OUTSCREEN.y,\n  },\n  submenu: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MenuGroup,\n  MenuGroupElement,\n  MenuGroupProps,\n} from '../menu/menuGroup.component';\n\nexport type DrawerGroupProps = MenuGroupProps;\nexport type DrawerGroupElement = React.ReactElement<DrawerGroupProps>;\n\n/**\n * A group of items displayed in Drawer.\n * Groups should be rendered within Drawer and contain DrawerItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<DrawerItemProps> | ReactElement<DrawerItemProps>[]} children -\n * items to be rendered within group.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DrawerGroups\n */\nexport class DrawerGroup extends React.Component<DrawerGroupProps> {\n\n  public render(): MenuGroupElement {\n    return (\n      <MenuGroup {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemProps,\n} from '../menu/menuItem.component';\n\nexport type DrawerItemProps = MenuItemProps;\nexport type DrawerItemElement = React.ReactElement<DrawerItemProps>;\n\n/**\n * A single item in Drawer.\n * Items should be rendered within Drawer or DrawerGroup children to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DrawerItemSimpleUsage\n */\nexport class DrawerItem extends React.Component<MenuItemProps> {\n\n  public render(): MenuItemElement {\n    return (\n      <MenuItem {...this.props} />\n    );\n  }\n}\n","import React from 'react';\nimport { IndexPath } from '../../devsupport';\nimport { SelectItemElement } from './selectItem.component';\n\nexport interface SelectItemDescriptor {\n  multiSelect: boolean;\n  index: IndexPath;\n  groupIndices?: IndexPath[];\n}\n\nconst SEPARATOR: string = ', ';\n\nexport class SelectService {\n\n  public selectItem = (multiSelect: boolean,\n                       descriptor: SelectItemDescriptor,\n                       selected: IndexPath[]): IndexPath | IndexPath[] => {\n\n    if (multiSelect) {\n      return this.createMultiSelectIndices(descriptor, selected);\n    }\n    return descriptor.index;\n  };\n\n  public toStringSelected = (selected: IndexPath[]): string => {\n    if (!Array.isArray(selected)) {\n      return '';\n    }\n\n    const options: string[] = selected.map((index: IndexPath): string => {\n      return `Option ${index.toString()}`;\n    });\n\n    return options.join(SEPARATOR);\n  };\n\n  public isSelected = (descriptor: SelectItemDescriptor, selected: IndexPath[]): boolean => {\n    if (descriptor.multiSelect && this.isGroup(descriptor)) {\n      return this.containsSomeFromGroup(descriptor.index, selected);\n    }\n    return this.contains(descriptor.index, selected);\n  };\n\n  public isDisabled = (descriptor: SelectItemDescriptor): boolean => {\n    return !descriptor.multiSelect && this.isGroup(descriptor);\n  };\n\n  public createDescriptorForElement = (element: SelectItemElement,\n                                       multiSelect: boolean,\n                                       index: number): SelectItemDescriptor => {\n\n    const groupIndices = React.Children.map(element.props.children, ((child: SelectItemElement, row: number) => {\n      return new IndexPath(row, index);\n    }));\n\n    return { multiSelect, groupIndices, index: new IndexPath(index) };\n  };\n\n  public createDescriptorForNestedElement = (element: SelectItemElement,\n                                             descriptor: SelectItemDescriptor,\n                                             index: number): SelectItemDescriptor => {\n\n    return {\n      ...descriptor,\n      index: new IndexPath(index, descriptor.index.row),\n      groupIndices: [],\n    };\n  };\n\n  private createMultiSelectIndices = (descriptor: SelectItemDescriptor, selected: IndexPath[]): IndexPath[] => {\n    const isIndexSelected: boolean = this.isSelected(descriptor, selected);\n    return !isIndexSelected ? this.addIndex(descriptor, selected) : this.removeIndex(descriptor, selected);\n  };\n\n  private isGroup = (descriptor: SelectItemDescriptor): boolean => {\n    return descriptor.groupIndices && descriptor.groupIndices.length > 0;\n  };\n\n  private createGroupIndices = (descriptor: SelectItemDescriptor): IndexPath[] => {\n    return this.isGroup(descriptor) ? descriptor.groupIndices : [descriptor.index];\n  };\n\n  private addIndex = (descriptor: SelectItemDescriptor, selected: IndexPath[]): IndexPath[] => {\n    return [...selected, ...this.createGroupIndices(descriptor)];\n  };\n\n  private removeIndex = (descriptor: SelectItemDescriptor, selected: IndexPath[]): IndexPath[] => {\n    const groupIndices: IndexPath[] = this.createGroupIndices(descriptor);\n    return selected.filter((selectedIndex: IndexPath): boolean => {\n      return !this.contains(selectedIndex, groupIndices);\n    });\n  };\n\n  private contains = (index: IndexPath, selected: IndexPath[]): boolean => {\n    return selected.some((selectedIndex: IndexPath): boolean => {\n      return selectedIndex.equals(index);\n    });\n  };\n\n  private containsSomeFromGroup = (index: IndexPath, selected: IndexPath[]): boolean => {\n    return selected.some((selectedIndex: IndexPath): boolean => {\n      return selectedIndex.section === index.row;\n    });\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  ListRenderItemInfo,\n  NativeSyntheticEvent,\n  Platform,\n  StyleSheet,\n  TargetedEvent,\n  TextProps,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  EvaInputSize,\n  EvaStatus,\n  FalsyFC,\n  FalsyText,\n  IndexPath,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { List } from '../list/list.component';\nimport { Popover } from '../popover/popover.component';\nimport { ChevronDown } from '../shared/chevronDown.component';\nimport { SelectGroupProps } from './selectGroup.component';\nimport {\n  SelectItemElement,\n  SelectItemProps,\n} from './selectItem.component';\nimport {\n  SelectItemDescriptor,\n  SelectService,\n} from './select.service';\n\ntype SelectStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface SelectProps extends TouchableWebProps, SelectStyledProps {\n  children?: ChildrenWithProps<SelectItemProps | SelectGroupProps>;\n  selectedIndex?: IndexPath | IndexPath[];\n  onSelect?: (index: IndexPath | IndexPath[]) => void;\n  value?: RenderProp<TextProps> | React.ReactText;\n  multiSelect?: boolean;\n  placeholder?: RenderProp<TextProps> | React.ReactText;\n  label?: RenderProp<TextProps> | React.ReactText;\n  caption?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  status?: EvaStatus;\n  size?: EvaInputSize;\n}\n\nexport type SelectElement = React.ReactElement<SelectProps>;\n\ninterface State {\n  listVisible: boolean;\n}\n\nconst CHEVRON_DEG_COLLAPSED: number = -180;\nconst CHEVRON_DEG_EXPANDED: number = 0;\nconst CHEVRON_ANIM_DURATION: number = 200;\n\n/**\n * A dropdown menu for displaying selectable options.\n * Select should contain SelectItem or SelectGroup components to provide a useful component.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets options list visible.\n *\n * @method {() => void} hide - Sets options list invisible.\n *\n * @method {() => void} focus - Focuses input field and sets options list visible.\n *\n * @method {() => void} blur - Removes focus from input field and sets options list invisible.\n *\n * @method {() => boolean} isFocused - Whether input field is currently focused and options list is visible.\n *\n * @method {() => void} clear - Removes all text from the Select.\n *\n * @property {ReactElement<SelectItemProps> | ReactElement<SelectItemProps>[]} children -\n * Items to be rendered within options list.\n *\n * @property {IndexPath | IndexPath[]} selectedIndex - Index or array of indices of selected options.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Select becomes sectioned when SelectGroup is rendered within children.\n *\n * @property {(IndexPath | IndexPath[]) => void} onSelect - Called when option is pressed.\n * Called with `row: number` for non-grouped items.\n * Called with `row: number, section: number` for items rendered within group,\n * where row - index of item in group, section - index of group in list.\n * Called with array if *multiSelect* was set to true.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} value - String, number or a function component\n * to render for the selected options.\n * By default, calls *toString()* for each index in selectedIndex property.\n * If it is a function, expected to return a Text.\n *\n * @property {boolean} multiSelect - Whether multiple options can be selected.\n * If true, calls onSelect with IndexPath[] in arguments.\n * Otherwise, with IndexPath in arguments.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} placeholder - String, number or a function component\n * to render when there is no selected option.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} label - String, number or a function component\n * to render above input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} caption - String, number or a function component\n * to render below the input field.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `small`, `medium` or `large`.\n * Defaults to *medium*.\n *\n * @property {() => void} onFocus - Called when options list becomes visible.\n *\n * @property {() => void} onBlur - Called when options list becomes invisible.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectSimpleUsage\n *\n * @overview-example SelectIndexType\n * Select works with special index object - IndexPath.\n * For non-grouped items in select, there is only a `row` property.\n * Otherwise, `row` is an index of option within the group, section - index of group in options list.\n * ```\n * interface IndexPath {\n *   row: number;\n *   section?: number;\n * }\n * ```\n *\n * @overview-example SelectMultiSelect\n * Multiple options can be selected if `multiSelect` property is configured.\n * For multiple options, `onSelect` function is called with array if indices.\n *\n * @overview-example SelectWithGroups\n * Options may be grouped within `SelectGroup` component.\n *\n * @overview-example SelectDisplayValue\n * By default, Select displays a value by building strings for selected indices.\n * For a real-word examples, a `value` property should be configured.\n *\n * @overview-example SelectStates\n * Select can be disabled with `disabled` property.\n *\n * @overview-example SelectDisabledOptions\n * Same for options.\n *\n * @overview-example SelectStatus\n * It also may be marked with `status` property, which is useful within forms validation.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example SelectAccessories\n * Select may contain labels, captions and inner views by configuring `accessoryLeft` or `accessoryRight` properties.\n * Within Eva, Select accessories are expected to be images or [svg icons](guides/icon-packages).\n *\n * @overview-example SelectSize\n * To resize Select, a `size` property may be used.\n *\n * @overview-example SelectStyling\n * Select and it's inner views can be styled by passing them as function components.\n * ```\n * import { Select, SelectItem, Text } from '@ui-kitten/components';\n *\n * <Select\n *   label={evaProps => <Text {...evaProps}>Label</Text>}\n *   caption={evaProps => <Text {...evaProps}>Caption</Text>}>\n *   <SelectItem title={evaProps => <Text {...evaProps}>Option 1</Text>} />\n * </Select>\n * ```\n *\n * @overview-example SelectTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n\n@styled('Select')\nexport class Select extends React.Component<SelectProps, State> {\n\n  static defaultProps = {\n    placeholder: 'Select Option',\n    selectedIndex: [],\n  };\n\n  public state: State = {\n    listVisible: false,\n  };\n\n  private service: SelectService = new SelectService();\n  private popoverRef = React.createRef<Popover>();\n  private expandAnimation: Animated.Value = new Animated.Value(0);\n\n  private get isMultiSelect(): boolean {\n    return this.props.multiSelect;\n  }\n\n  private get data(): any[] {\n    return React.Children.toArray(this.props.children || []);\n  }\n\n  private get selectedIndices(): IndexPath[] {\n    if (!this.props.selectedIndex) {\n      return [];\n    }\n    return Array.isArray(this.props.selectedIndex) ? this.props.selectedIndex : [this.props.selectedIndex];\n  }\n\n  private get expandToRotateInterpolation(): Animated.AnimatedInterpolation {\n    return this.expandAnimation.interpolate({\n      inputRange: [CHEVRON_DEG_COLLAPSED, CHEVRON_DEG_EXPANDED],\n      outputRange: [`${CHEVRON_DEG_COLLAPSED}deg`, `${CHEVRON_DEG_EXPANDED}deg`],\n    });\n  }\n\n  public show = (): void => {\n    this.popoverRef.current?.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current?.hide();\n  };\n\n  public focus = (): void => {\n    this.setOptionsListVisible();\n  };\n\n  public blur = (): void => {\n    this.setOptionsListInvisible();\n  };\n\n  public isFocused = (): boolean => {\n    return this.state.listVisible;\n  };\n\n  public clear = (): void => {\n    this.props.onSelect && this.props.onSelect(null);\n  };\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onPress = (): void => {\n    this.setOptionsListVisible();\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private onItemPress = (descriptor: SelectItemDescriptor): void => {\n    if (this.props.onSelect) {\n      const selectedIndices = this.service.selectItem(this.isMultiSelect, descriptor, this.selectedIndices);\n      !this.isMultiSelect && this.setOptionsListInvisible();\n      this.props.onSelect(selectedIndices);\n    }\n  };\n\n  private onBackdropPress = (): void => {\n    this.setOptionsListInvisible();\n  };\n\n  private onListVisible = (): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.createExpandAnimation(-CHEVRON_DEG_COLLAPSED).start(() => {\n      this.props.onFocus && this.props.onFocus(null);\n    });\n  };\n\n  private onListInvisible = (): void => {\n    this.props.eva.dispatch([]);\n    this.createExpandAnimation(CHEVRON_DEG_EXPANDED).start(() => {\n      this.props.onBlur && this.props.onBlur(null);\n    });\n  };\n\n  private getComponentStyle = (style: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      placeholderFontSize,\n      placeholderFontWeight,\n      placeholderFontFamily,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelMarginBottom,\n      labelFontWeight,\n      labelFontFamily,\n      captionColor,\n      captionFontSize,\n      captionFontWeight,\n      captionFontFamily,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      popoverMaxHeight,\n      popoverBorderRadius,\n      popoverBorderColor,\n      popoverBorderWidth,\n      ...inputParameters\n    } = style;\n\n    return {\n      input: inputParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: placeholderFontSize,\n        fontWeight: placeholderFontWeight,\n        fontFamily: placeholderFontFamily,\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        marginBottom: labelMarginBottom,\n        fontSize: labelFontSize,\n        fontWeight: labelFontWeight,\n        fontFamily: labelFontFamily,\n        color: labelColor,\n      },\n      caption: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        fontFamily: captionFontFamily,\n        color: captionColor,\n      },\n      popover: {\n        maxHeight: popoverMaxHeight,\n        borderRadius: popoverBorderRadius,\n        borderWidth: popoverBorderWidth,\n        borderColor: popoverBorderColor,\n      },\n    };\n  };\n\n  private setOptionsListVisible = (): void => {\n    const hasData: boolean = this.data.length > 0;\n    hasData && this.setState({ listVisible: true }, this.onListVisible);\n  };\n\n  private setOptionsListInvisible = (): void => {\n    this.setState({ listVisible: false }, this.onListInvisible);\n  };\n\n  private createExpandAnimation = (toValue: number): Animated.CompositeAnimation => {\n    return Animated.timing(this.expandAnimation, {\n      toValue,\n      duration: CHEVRON_ANIM_DURATION,\n      useNativeDriver: Platform.OS !== 'web',\n    });\n  };\n\n  private cloneItemWithProps = (el: SelectItemElement, props: SelectItemProps): SelectItemElement => {\n    const nestedElements = React.Children.map(el.props.children, (nestedEl: SelectItemElement, index: number) => {\n      const descriptor = this.service.createDescriptorForNestedElement(nestedEl, props.descriptor, index);\n      const selected: boolean = this.service.isSelected(descriptor, this.selectedIndices);\n\n      return this.cloneItemWithProps(nestedEl, { ...props, descriptor, selected, disabled: false });\n    });\n\n    return React.cloneElement(el, { ...props, ...el.props }, nestedElements);\n  };\n\n  private renderItem = (info: ListRenderItemInfo<SelectItemElement>): SelectItemElement => {\n    const descriptor = this.service.createDescriptorForElement(info.item, this.isMultiSelect, info.index);\n    const selected: boolean = this.service.isSelected(descriptor, this.selectedIndices);\n    const disabled: boolean = this.service.isDisabled(descriptor);\n\n    return this.cloneItemWithProps(info.item, { descriptor, selected, disabled, onPress: this.onItemPress });\n  };\n\n  private renderDefaultIconElement = (evaStyle): React.ReactElement => {\n    const { tintColor, ...svgStyle } = evaStyle;\n    return (\n      <Animated.View style={{ transform: [{ rotate: this.expandToRotateInterpolation }] }}>\n        <ChevronDown style={svgStyle} fill={tintColor} />\n      </Animated.View>\n    );\n  };\n\n  private renderInputElement = (props: SelectProps, evaStyle): TouchableWebElement => {\n    const value = props.value || this.service.toStringSelected(this.selectedIndices);\n    const textStyle: TextStyle = value && evaStyle.text;\n\n    return (\n      <TouchableWeb\n        testID={props.testID}\n        style={[styles.input, evaStyle.input]}\n        onPress={this.onPress}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        disabled={props.disabled}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryLeft}\n        />\n        <FalsyText\n          style={[styles.text, evaStyle.placeholder, textStyle]}\n          numberOfLines={1}\n          ellipsizeMode='tail'\n          component={value || props.placeholder}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={props.accessoryRight}\n          fallback={this.renderDefaultIconElement(evaStyle.icon)}\n        />\n      </TouchableWeb>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, label, caption, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View style={style}>\n        <FalsyText\n          style={[styles.label, evaStyle.label]}\n          component={label}\n        />\n        <Popover\n          ref={this.popoverRef}\n          style={[styles.popover, evaStyle.popover]}\n          visible={this.state.listVisible}\n          fullWidth={true}\n          anchor={() => this.renderInputElement(touchableProps, evaStyle)}\n          onBackdropPress={this.onBackdropPress}>\n          <List\n            style={styles.list}\n            data={this.data}\n            bounces={false}\n            renderItem={this.renderItem}\n          />\n        </Popover>\n        <FalsyText\n          style={[styles.caption, evaStyle.caption]}\n          component={caption}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  popover: {\n    overflow: 'hidden',\n  },\n  list: {\n    flexGrow: 0,\n  },\n  text: {\n    flex: 1,\n    textAlign: 'left',\n  },\n  label: {\n    textAlign: 'left',\n  },\n  caption: {\n    textAlign: 'left',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  PropsService,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  CheckBox,\n  CheckBoxElement,\n} from '../checkbox/checkbox.component';\nimport { TextProps } from '../text/text.component';\nimport { SelectItemDescriptor } from './select.service';\n\ntype SelectItemStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | 'grouped'>;\n}>;\n\ntype TouchableSelectProps = Overwrite<TouchableWebProps, {\n  onPress?: (descriptor: SelectItemDescriptor, event?: GestureResponderEvent) => void;\n}>;\n\nexport interface SelectItemProps extends TouchableSelectProps, SelectItemStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  descriptor?: SelectItemDescriptor;\n}\n\nexport type SelectItemElement = React.ReactElement<SelectItemProps>;\n\n/**\n * A single item in Select.\n * Items should be rendered within Select or SelectGroup children to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the item.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectItemSimpleUsage\n */\n@styled('SelectOption')\nexport class SelectItem extends React.Component<SelectItemProps> {\n\n  private get isMultiSelect(): boolean {\n    if (this.props.descriptor) {\n      return this.props.descriptor.multiSelect;\n    }\n    return false;\n  }\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.props.onPress && this.props.onPress(this.props.descriptor, event);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private onAccessoryCheckedChange = (): void => {\n    this.props.onPress && this.props.onPress(this.props.descriptor);\n  };\n\n  private getComponentStyle = (style: StyleType) => {\n    const { paddingHorizontal, paddingLeft, paddingVertical, backgroundColor } = style;\n\n    const textStyles = PropsService.allWithPrefix(style, 'text');\n    const iconStyles = PropsService.allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingLeft: paddingLeft,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      text: {\n        marginHorizontal: textStyles.textMarginHorizontal,\n        fontFamily: textStyles.textFontFamily,\n        fontSize: textStyles.textFontSize,\n        fontWeight: textStyles.textFontWeight,\n        color: textStyles.textColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  private renderAccessory = (evaStyle): CheckBoxElement => {\n    if (!this.isMultiSelect) {\n      return null;\n    }\n\n    return (\n      <CheckBox\n        style={evaStyle}\n        checked={this.props.selected}\n        onChange={this.onAccessoryCheckedChange}\n      />\n    );\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, title, accessoryLeft, accessoryRight, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, evaStyle.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryLeft}\n          fallback={this.renderAccessory(evaStyle.icon)}\n        />\n        <FalsyText\n          style={[styles.text, evaStyle.text]}\n          component={title}\n        />\n        <FalsyFC\n          style={evaStyle.icon}\n          component={accessoryRight}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    flex: 1,\n    textAlign: 'left',\n  },\n});\n","import React from 'react';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  CheckBox,\n  CheckBoxElement,\n  CheckBoxProps,\n} from '../checkbox/checkbox.component';\nimport {\n  SelectItem,\n  SelectItemElement,\n  SelectItemProps,\n} from './selectItem.component';\n\nexport interface SelectGroupProps extends SelectItemProps {\n  children?: ChildrenWithProps<SelectItemProps>;\n}\n\nexport type SelectGroupElement = React.ReactElement<SelectItemProps>;\n\n/**\n * A group of items displayed in Select.\n * Groups should be rendered within Select and contain SelectItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<SelectItemProps> | ReactElement<SelectItemProps>[]} children -\n * items to be rendered within group.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the group.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the *title*.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the *title*.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectWithGroups\n */\nexport class SelectGroup extends React.Component<SelectGroupProps> {\n\n  private get isMultiSelect(): boolean {\n    if (this.props.descriptor) {\n      return this.props.descriptor.multiSelect;\n    }\n    return false;\n  }\n\n  private get groupAccessoryState(): CheckBoxProps {\n    const nestedElements = React.Children.toArray(this.props.children) as SelectItemElement[];\n    const selectedElements = nestedElements.filter(el => el.props.selected);\n\n    const indeterminate: boolean = selectedElements.length > 0 && selectedElements.length < nestedElements.length;\n    const checked: boolean = selectedElements.length === nestedElements.length;\n\n    return { checked, indeterminate };\n  }\n\n  private get groupAccessoryProps(): CheckBoxProps {\n    return {\n      ...this.createAccessoryProps(this.props),\n      ...this.groupAccessoryState,\n    };\n  }\n\n  private createAccessoryProps = (props: SelectItemProps): CheckBoxProps => {\n    return {\n      checked: props.selected,\n      onChange: () => props.onPress && props.onPress(props.descriptor),\n    };\n  };\n\n  private createGroupedItemProps = (props: SelectItemProps): SelectItemProps => {\n    const accessoryProps: CheckBoxProps = this.createAccessoryProps(props);\n    return {\n      appearance: 'grouped',\n      accessoryLeft: evaProps => this.renderAccessory({ ...evaProps, ...accessoryProps }),\n    };\n  };\n\n  private renderAccessory = (props: CheckBoxProps): CheckBoxElement => {\n    if (!this.isMultiSelect) {\n      return null;\n    }\n\n    return (\n      <CheckBox {...props} />\n    );\n  };\n\n  private renderGroupedItems = (source: ChildrenWithProps<SelectItemProps>): SelectItemElement[] => {\n    return React.Children.map(source, (item: SelectItemElement, key: number): SelectItemElement => {\n      const groupedProps: SelectItemProps = this.createGroupedItemProps(item.props);\n      return React.cloneElement(item, { key, ...groupedProps, ...item.props });\n    });\n  };\n\n  public render(): React.ReactElement {\n    const { children, ...itemProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <SelectItem\n          accessoryLeft={evaProps => this.renderAccessory({ ...evaProps, ...this.groupAccessoryProps })}\n          {...itemProps}\n        />\n        {this.renderGroupedItems(children)}\n      </React.Fragment>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport {\n  IconPack,\n  IconProvider,\n} from './type';\n\nfunction throwPackNotFoundError(name: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: Icon Pack '${name}' is not registered`,\n    'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n    'Check icon name or consider switching icon pack.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nexport interface RegisteredIcon<T> {\n  name: string;\n  pack: string;\n  icon: IconProvider<T>;\n}\n\ntype IconProps = any;\n\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n\n  protected packs: Map<string, IconPack<IconProps>> = new Map();\n  protected defaultPack: string;\n\n  /**\n   * Registers multiple icon packs and sets the first one as default if there is no default packs\n   *\n   * @param {IconPack[]} packs - array of icon packs\n   */\n  public register<T>(...packs: IconPack<T>[]) {\n    packs.forEach((pack: IconPack<IconProps>) => {\n      this.registerIconPack(pack);\n    });\n  }\n\n  /**\n   * Sets pack as default\n   *\n   * @param {string} name\n   * @throws {Error} if pack is nor registered\n   */\n  public setDefaultIconPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = name;\n  }\n\n  /**\n   * @param {string} name\n   * @returns {IconPack} pack by name\n   */\n  public getIconPack<T>(name: string): IconPack<T> {\n    return this.packs.get(name);\n  }\n\n  /**\n   * @param {string} name - icon name\n   * @param {string} pack - pack name\n   * @throws {Error} if requested icon pack is not registered\n   * @returns {RegisteredIcon} - registered icon of a requested/default pack\n   */\n  public getIcon<T>(name: string, pack?: string): RegisteredIcon<T> {\n    const iconsPack: IconPack<T> = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n\n    return {\n      name,\n      pack: iconsPack.name,\n      icon: this.getIconFromPack(name, iconsPack),\n    };\n  }\n\n  /**\n   * Registers single icon pack\n   *\n   * @param {IconPack} pack - icon pack to register\n   */\n  protected registerIconPack<T>(pack: IconPack<T>) {\n    this.packs.set(pack.name, pack);\n  }\n\n  protected getPackOrThrow<T>(name: string): IconPack<T> {\n    const pack: IconPack<IconProps> = this.packs.get(name);\n\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n\n    return pack;\n  }\n\n  protected getDefaultPack<T>(): IconPack<T> {\n    return this.getIconPack(this.defaultPack);\n  }\n\n  protected getIconFromPack<T>(name: string, pack: IconPack<T>, shouldThrow = true): IconProvider<T> {\n    if (shouldThrow && !pack.icons[name]) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons[name];\n  }\n}\n\nexport const IconRegistryService = new RegistryService();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  ViewProps,\n} from 'react-native';\nimport {\n  getIconAnimation,\n  IconAnimation,\n  IconAnimationRegistry,\n} from './iconAnimation';\nimport {\n  IconRegistryService,\n  RegisteredIcon,\n} from './service/iconRegistry.service';\nimport { AnimationConfig } from '../animation';\n\n// This is basically needed to avoid generics in required props\n// In general, could be SVGProps if using @ui-kitten/eva-icons or ImageProps if using Image.\ntype WrappedElementProps = any;\n\nexport type IconProps<T = WrappedElementProps> = T & {\n  name: string;\n  pack?: string;\n  animation?: keyof IconAnimationRegistry | null;\n  animationConfig?: AnimationConfig;\n};\n\nexport type IconElement<T = WrappedElementProps> = React.ReactElement<IconProps<T>>;\n\n/**\n * Animated Icon component.\n *\n * @extends React.Component\n *\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\n *\n * @method {() => void} stopAnimation - Toggle animation to stop.\n *\n * @property {string} name - A name of icon registered in a specific pack.\n *\n * @property {string} pack - A name of icon pack registered in IconRegistry that is able to provide\n * an icon for a given name.\n *\n * @property {string} animation - Animation name. Can be `zoom`, `pulse`, `shake` or null.\n * Defaults to *zoom*.\n *\n * @property {AnimationConfig} animationConfig - Animation config.\n *\n * @property {any} ...props - Accepts any props\n * depending on the component registered in IconRegistry for a given `name` property.\n * In case of using `@ui-kitten/eva-icons` package, Icon accepts any props for react-native-svg component.\n *\n * @overview-example IconSimpleUsage\n * Icon component provides a simple way to render image by requesting it from an icon set.\n * Icons come with [additional packages](guides/icon-packages),\n * that should be configured before using component.\n * We recommend using [Eva Icons](https://akveo.github.io/eva-icons),\n * to provide a full consistency with Eva Design System.\n *\n * @overview-example IconWithinComponents\n * All UI Kitten components that may contain inner views have support for Eva Icons.\n * When using icons as nested components, icon styles are handled by Eva.\n *\n * @overview-example IconAnimation\n * Icons have 3 types of animations: `zoom`, `pulse` and `shake`.\n *\n * @overview-example IconTheming\n * In particular cases, Icon should be styled in a different way.\n * In case of using Eva Icons it renders [svg images](https://github.com/react-native-community/react-native-svg).\n *\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\nexport class Icon<T> extends React.Component<IconProps<T>> {\n\n  static defaultProps: Partial<IconProps> = {\n    animation: 'zoom',\n  };\n\n  private readonly animation: IconAnimation | null;\n\n  constructor(props: IconProps<T>) {\n    super(props);\n    this.animation = getIconAnimation(props.animation, props.animationConfig);\n  }\n\n  public componentWillUnmount(): void {\n    this.animation?.release();\n  }\n\n  public startAnimation = (callback?: Animated.EndCallback): void => {\n    this.animation?.start(callback);\n  };\n\n  public stopAnimation = (): void => {\n    this.animation?.stop();\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { name, pack, animation, animationConfig, ...iconProps } = this.props;\n    const registeredIcon: RegisteredIcon<T> = IconRegistryService.getIcon(name, pack);\n    const iconElement = registeredIcon.icon.toReactElement(iconProps as T);\n\n    if (!this.animation) {\n      return iconElement;\n    }\n\n    return (\n      <Animated.View {...this.animation.toProps()}>\n        {iconElement}\n      </Animated.View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ViewStyle } from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n  PulseAnimation,\n  ShakeAnimation,\n  ZoomAnimation,\n} from '../animation';\n\nexport type IconAnimation = Animation<any, ViewStyle>;\n\nexport interface IconAnimationRegistry {\n  zoom: IconAnimation;\n  pulse: IconAnimation;\n  shake: IconAnimation;\n}\n\nexport function getIconAnimation(animation?: keyof IconAnimationRegistry | null, config?: AnimationConfig): IconAnimation | null {\n  switch (animation) {\n    case 'zoom':\n      return new ZoomAnimation(config);\n    case 'pulse':\n      return new PulseAnimation(config);\n    case 'shake':\n      return new ShakeAnimation(config);\n    default:\n      return null;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { IconRegistryService } from './service/iconRegistry.service';\nimport { IconPack } from './service/type';\n\ntype IconsProp = IconPack<any> | IconPack<any>[];\n\nexport interface IconRegistryProps {\n  icons: IconsProp;\n  defaultIcons?: string;\n}\n\nexport type IconRegistryElement = React.ReactElement<IconRegistryProps>;\n\n/**\n * Registers one or more icon packs for later usage in Icon component.\n * Renders nothing, but should be added as a child of an Application Root.\n *\n * @extends React.Component\n *\n * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.\n * @property {string} defaultIcons - A name of an icon pack that is used by default.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import * as eva from '@eva-design/eva';\n * import { ApplicationProvider, IconRegistry, Layout, Text, Icon, Button } from '@ui-kitten/components';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons\n *\n * const LikeIcon = (props) => (\n *   <Icon {...props} name='like' />\n * );\n *\n * export default () => (\n *   <>\n *     <IconRegistry icons={EvaIconsPack}/>\n *     <ApplicationProvider {...eva} theme={eva.light}>\n *       <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *         <Text>Welcome to UI Kitten</Text>\n *         <Button accessoryLeft={LikeIcon}>LIKE</Text>\n *       </Layout>\n *     </ApplicationProvider>\n *   </>\n * );\n * ```\n */\nexport class IconRegistry extends React.Component<IconRegistryProps> {\n\n  static defaultProps: Partial<IconRegistryProps> = {\n    icons: [],\n  };\n\n  private findDefaultIconPack = (packs: IconPack<any>[], name: string): IconPack<any> => {\n    const requestedPackIndex: number = packs.findIndex((pack: IconPack<any>): boolean => {\n      return pack.name === name;\n    });\n\n    return packs[Math.max(0, requestedPackIndex)];\n  };\n\n  private registerIcons = (source: IconsProp, defaultPack: string): void => {\n    const packs: IconPack<any>[] = Array.isArray(source) ? source : [source];\n    const defaultIconPack: IconPack<any> = this.findDefaultIconPack(packs, defaultPack);\n\n    IconRegistryService.register(...packs);\n    IconRegistryService.setDefaultIconPack(defaultIconPack.name);\n  };\n\n  public render(): React.ReactNode {\n    const { icons, defaultIcons } = this.props;\n    this.registerIcons(icons, defaultIcons);\n\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Overwrite, LiteralUnion } from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\n\ntype LayoutStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface LayoutProps extends ViewProps, LayoutStyledProps {\n  children?: React.ReactNode;\n  level?: LiteralUnion<'1' | '2' | '3' | '4'>;\n}\n\nexport type LayoutElement = React.ReactElement<LayoutProps>;\n\n/**\n * Overall page container.\n *\n * @extends React.Component\n *\n * @property {ReactNode} children - Component to render within the layout.\n *\n * @property {string} level - Background color level of component.\n * Can be `1`, `2`, `3` or `4`.\n * Defaults to *1*.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example LayoutLevel\n * Layout should be used as a root component of the screen.\n * Comparative to `View` element, it uses a background color with respect to current theme.\n * Using Layout is redundant, when background color is configured with `style` property.\n *\n * Layouts can be used in different levels.\n * It is useful, when needed to highlight the container relative to another.\n */\n@styled('Layout')\nexport class Layout extends React.Component<LayoutProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, ...viewProps } = this.props;\n\n    return (\n      <View\n        {...viewProps}\n        style={[eva.style, style]}\n      />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlexStyle,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n  Dimensions,\n  NativeEventSubscription,\n} from 'react-native';\nimport {\n  Frame,\n  MeasureElement,\n  MeasuringElement,\n  Point,\n} from '../../devsupport';\nimport {\n  ModalPresentingConfig,\n  ModalService,\n} from '../../theme';\n\nexport interface ModalProps extends ViewProps, ModalPresentingConfig {\n  visible?: boolean;\n  children?: React.ReactNode;\n}\n\nexport type ModalElement = React.ReactElement<ModalProps>;\n\ninterface State {\n  contentFrame: Frame;\n  forceMeasure: boolean;\n}\n\n/**\n * A wrapper that presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets modal visible.\n *\n * @method {() => void} hide - Sets modal invisible.\n *\n * @property {ReactNode} children - Component to render within the modal.\n *\n * @property {boolean} visible - Whether component is visible.\n * Defaults to false.\n *\n * @property {() => void} onBackdropPress - Called when the modal is visible and the view below it was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ModalSimpleUsage\n * Modals accept content views as child elements and are displayed in the screen center.\n * To display a modal, a `visible` property should be used.\n *\n * @overview-example ModalWithBackdrop\n * To configure underlying view, `backdropStyle` and `onBackdropPress` properties may be used.\n */\nexport class Modal extends React.PureComponent<ModalProps, State> {\n\n  public state: State = {\n    contentFrame: Frame.zero(),\n    forceMeasure: false,\n  };\n\n  private modalId: string;\n  private contentPosition: Point = Point.outscreen();\n  private dimensionsChangeSubscription: NativeEventSubscription | void;\n\n  private get contentFlexPosition(): FlexStyle {\n    const derivedStyle: ViewStyle = StyleSheet.flatten(this.props.style || {});\n    const { x: centerX, y: centerY } = this.contentPosition;\n    // @ts-ignore\n    return { left: derivedStyle.left || centerX, top: derivedStyle.top || centerY };\n  }\n\n  private get backdropConfig(): ModalPresentingConfig {\n    const { onBackdropPress, backdropStyle } = this.props;\n    return { onBackdropPress, backdropStyle };\n  }\n\n  public show = (): void => {\n    this.modalId = ModalService.show(this.renderMeasuringContentElement(), this.backdropConfig);\n  };\n\n  public hide = (): void => {\n    this.modalId = ModalService.hide(this.modalId);\n  };\n\n  public componentDidMount(): void {\n    this.dimensionsChangeSubscription = Dimensions.addEventListener('change', this.onDimensionChange);\n    if (!this.modalId && this.props.visible) {\n      this.show();\n      return;\n    }\n  }\n\n  public componentDidUpdate(prevProps: ModalProps): void {\n    if (!this.modalId && this.props.visible && !this.state.forceMeasure) {\n      this.setState({ forceMeasure: true });\n      return;\n    }\n\n    if (!this.modalId && this.props.visible) {\n      this.show();\n      return;\n    }\n\n    if (this.modalId && !this.props.visible) {\n      this.hide();\n    }\n\n    if (this.modalId && this.props.visible) {\n      ModalService.update(this.modalId, this.renderContentElement());\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this.dimensionsChangeSubscription) {\n      this.dimensionsChangeSubscription.remove();\n    } else {\n      // for backward compatibility with RN <0.65\n      Dimensions.removeEventListener('change', this.onDimensionChange);\n    }\n    this.hide();\n  }\n\n  private onDimensionChange = (): void => {\n    if(this.props.visible) {\n      ModalService.update(this.modalId, this.renderMeasuringContentElement());\n    }\n  }\n\n  private onContentMeasure = (contentFrame: Frame): void => {\n    this.state.contentFrame = contentFrame;\n\n    const displayFrame: Frame = this.state.contentFrame.centerOf(Frame.window());\n    this.contentPosition = displayFrame.origin;\n\n    ModalService.update(this.modalId, this.renderContentElement());\n  };\n\n  private renderContentElement = (): React.ReactElement<ViewProps> => {\n    return (\n      <View\n        {...this.props}\n        style={[this.props.style, styles.modalView, this.contentFlexPosition]}\n      />\n    );\n  };\n\n  private renderMeasuringContentElement = (): MeasuringElement => {\n    return (\n      <MeasureElement\n        shouldUseTopInsets={ModalService.getShouldUseTopInsets}\n        onMeasure={this.onContentMeasure}>\n        {this.renderContentElement()}\n      </MeasureElement>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  modalView: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ChildrenWithProps,\n  Overwrite,\n} from '../../devsupport';\nimport {\n  styled,\n  StyleType,\n} from '../../theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemProps } from '../menu/menuItem.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\n\ntype OverflowMenuPopoverProps = Overwrite<PopoverProps, {\n  children?: ChildrenWithProps<MenuItemProps>;\n}>;\n\nexport type OverflowMenuProps = MenuProps & OverflowMenuPopoverProps;\n\nexport type OverflowMenuElement = React.ReactElement<OverflowMenuProps>;\n\n/**\n * Displays a menu relative to another view.\n * Menu should contain MenuItem components to provide a useful component.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets menu visible.\n *\n * @method {() => void} hide - Sets menu invisible.\n *\n * @property {ReactElement<MenuItemProps> | ReactElement<MenuItemProps>[]} children -\n * items to be rendered within menu.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {boolean} visible - Whether menu is visible.\n * Defaults to false.\n *\n * @property {IndexPath} selectedIndex - Index of selected item.\n * IndexPath `row: number, section?: number` - position of element in sectioned list.\n * Updating this property is not required if marking items selected is not needed.\n *\n * @property {(IndexPath) => void} onSelect - Called when item is pressed.\n *\n * @property {() => void} onBackdropPress - Called when popover is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {string | PopoverPlacement} placement - Position of the options list relative to the `children`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {boolean} fullWidth - Whether a menu should take the width of `anchor`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n **\n * @overview-example OverflowMenuSimpleUsage\n * OverflowMenu accepts `MenuItem` components as child elements and is displayed relative to `anchor` view.\n *\n * @overview-example OverflowMenuIndexType\n * Menu works with special index object - IndexPath.\n * For non-grouped items in menu, there is only a `row` property.\n * Otherwise, `row` is an index of item within the group, section - index of group in menu.\n * ```\n * interface IndexPath {\n *   row: number;\n *   section?: number;\n * }\n * ```\n *\n * @overview-example OverflowMenuNoMarkers\n * Pressing of menu items can be handled without marking items.\n *\n * @overview-example OverflowMenuPlacement\n * By default, menu is displayed to the bottom of `anchor` view, but it is configurable with `placement` property.\n *\n * @overview-example OverflowMenuFullWidth\n * Menu may take the full width of the anchor view by configuring `fullWidth` property.\n *\n * @overview-example OverflowMenuAccessories\n * Menu items may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n * Within Eva it is expected to be an image or [svg icon](guides/icon-packages).\n *\n * @overview-example OverflowMenuWithDisabledItems\n * Menu items may be disabled with `disabled` property.\n *\n * @overview-example OverflowMenuStyledBackdrop\n * To style the underlying view, `backdropStyle` property may be used.\n *\n * @example OverflowMenuWithoutDivider\n * To disable dividers within the menu, `appearance` property may be used.\n */\n@styled('OverflowMenu')\nexport class OverflowMenu extends React.Component<OverflowMenuProps> {\n\n  private popoverRef = React.createRef<Popover>();\n\n  private get itemsCount(): number {\n    return React.Children.count(this.props.children);\n  }\n\n  public show = (): void => {\n    this.popoverRef.current?.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current?.hide();\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderPopoverContentElement = (): MenuElement => {\n    const { eva, children, style, ...menuProps } = this.props;\n\n    return (\n      <Menu\n        {...menuProps}\n        style={styles.menu}\n        initialNumToRender={this.itemsCount}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        {this.props.children}\n      </Menu>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { eva, style, children, appearance, ...popoverProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const contentElement: MenuElement = this.renderPopoverContentElement();\n\n    return (\n      <Popover\n        {...popoverProps}\n        ref={this.popoverRef}\n        style={[styles.popover, evaStyle.container, style]}>\n        {contentElement}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    overflow: 'hidden',\n  },\n  menu: {\n    flexGrow: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport {\n  EvaStatus,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype RadioStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface RadioProps extends TouchableWebProps, RadioStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  checked?: boolean;\n  onChange?: (checked: boolean) => void;\n  status?: EvaStatus;\n}\n\nexport type RadioElement = React.ReactElement<RadioProps>;\n\n/**\n * Radio buttons allow the user to select one option from a set.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Whether component is checked.\n * Defaults to *false*.\n *\n * @property {(boolean) => void} onChange - Called when radio\n * should switch it's value.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} children - String, number or a function component\n * to render near the checkbox.\n * If it is a function, expected to return a Text.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RadioSimpleUsage\n *\n * @overview-example RadioGroupSimpleUsage\n * Radios should be passed to RadioGroup child elements to provide a usable component.\n *\n * @overview-example RadioStates\n * A single Radio can be checked or disabled.\n *\n * @overview-example RadioStatus\n * Or marked with `status` property, which is useful within forms validation.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example RadioStyling\n * Radio and it's inner views can be styled by passing them as function components.\n * ```\n * import { Radio, Text } from '@ui-kitten/components';\n *\n * <Radio>\n *   {evaProps => <Text {...evaProps}>Place your Text</Text>}\n * </Radio>\n * ```\n *\n * @overview-example RadioTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n@styled('Radio')\nexport class Radio extends React.Component<RadioProps> {\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private onPress = (): void => {\n    this.props.onChange && this.props.onChange(!this.props.checked);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, children, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={styles.highlightContainer}>\n          <View style={[evaStyle.highlight, styles.highlight]} />\n          <View style={[evaStyle.selectContainer, styles.selectContainer]}>\n            <View style={evaStyle.icon} />\n          </View>\n        </View>\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  RadioElement,\n  RadioProps,\n} from '../radio/radio.component';\n\ntype RadioGroupStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface RadioGroupProps extends ViewProps, RadioGroupStyledProps {\n  children?: ChildrenWithProps<RadioProps>;\n  selectedIndex?: number;\n  onChange?: (index: number) => void;\n}\n\nexport type RadioGroupElement = React.ReactElement<RadioGroupProps>;\n\n/**\n * Provides to select a single state from multiple options.\n * RadioGroup should contain Radio components to provide a useful component.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Index of currently checked radio.\n *\n * @property {(number) => void} onChange - Called when one of the radios is pressed.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RadioGroupSimpleUsage\n */\n@styled('RadioGroup')\nexport class RadioGroup extends React.Component<RadioGroupProps> {\n\n  static defaultProps: Partial<RadioGroupProps> = {\n    selectedIndex: -1,\n  };\n\n  private onRadioChange = (index: number): void => {\n    this.props.onChange && this.props.onChange(index);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { itemMarginVertical, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {\n        marginVertical: itemMarginVertical,\n      },\n    };\n  };\n\n  private renderRadioElements = (source: ChildrenWithProps<RadioProps>, style: StyleType): RadioElement[] => {\n    return React.Children.map(source, (element: RadioElement, index: number): RadioElement => {\n      return React.cloneElement(element, {\n        key: index,\n        style: [style, element.props.style],\n        checked: this.props.selectedIndex === index,\n        onChange: () => this.onRadioChange(index),\n      });\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, children, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    const radioElements: RadioElement[] = this.renderRadioElements(children, evaStyle.item);\n\n    return (\n      <View\n        {...viewProps}\n        style={[evaStyle.container, style]}>\n        {radioElements}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Animated,\n  Easing,\n  EasingFunction,\n  Platform,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from '../animation/animation';\n\nconst PI: number = 180;\nconst PI2: number = 360;\nconst OFFSET_MIN: number = PI / 12;\nconst OFFSET_MAX: number = PI / 6;\n\nconst BaseBezierEasing: EasingFunction = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\nconst StartArcEasing: EasingFunction = (progress: number): number => {\n  return -PI + OFFSET_MIN + (PI - OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst EndArcEasing: EasingFunction = (progress: number): number => {\n  return PI2 - OFFSET_MIN + (-PI + OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst DEFAULT_CONFIG: SpinnerAnimationConfig = {\n  duration: 2400,\n  easing: Easing.linear,\n  cycles: -1,\n  useNativeDriver: Platform.OS !== 'web',\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface SpinnerAnimationStyle {\n  container: ViewStyle;\n  start: ViewStyle;\n  end: ViewStyle;\n}\n\nexport type SpinnerAnimationConfig = AnimationConfig & TimingAnimationConfig;\n\n/**\n * Animates a Spinner in a Material Design way.\n *\n * Thanks these guys for open sourcing the algorithm: https://github.com/n4kz/react-native-indicators\n */\nexport class SpinnerAnimation extends Animation<SpinnerAnimationConfig, SpinnerAnimationStyle> {\n\n  private animationValue: Animated.Value;\n  private animationFrames: number[];\n  private arcSize: number;\n\n  constructor(arcSize: number, config?: SpinnerAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.arcSize = arcSize;\n    this.animationValue = new Animated.Value(0);\n    this.animationFrames = this.createFrameRange(this.config.duration);\n  }\n\n  protected get animation(): Animated.CompositeAnimation {\n    return Animated.timing(this.animationValue, { toValue: 1.0, ...this.config });\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    // reset animation value before the next animation cycle\n    this.animationValue.setValue(0);\n    super.start(callback);\n  }\n\n  public stop() {\n    super.stop();\n    this.animationValue.setValue(0);\n  }\n\n  /**\n   * @returns {SpinnerAnimationStyle} - an object that contains container, start and end arcs transform styles.\n   */\n  public toProps(): SpinnerAnimationStyle {\n    const containerInterpolation: Animated.AnimatedInterpolation = this.createContainerInterpolation();\n    const startArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(StartArcEasing);\n    const endArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(EndArcEasing);\n\n    return {\n      container: this.toStyleTransformProp(containerInterpolation),\n      start: this.toStyleTransformProp(startArcInterpolation),\n      end: this.toStyleTransformProp(endArcInterpolation, {\n        transform: [{ translateY: -this.arcSize / 2 }],\n      }),\n    };\n  }\n\n  /**\n   * @param {number} duration - animation duration.\n   * @returns an array of frames fitted into animation.\n   */\n  private createFrameRange = (duration: number): number[] => {\n    const numberOfFrames: number = 60 * duration / 1000;\n\n    return new Array(numberOfFrames).fill(0);\n  };\n\n  private createContainerInterpolation = (): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        this.toDegValue(OFFSET_MAX + OFFSET_MIN),\n        this.toDegValue((2 * PI2 + OFFSET_MAX + OFFSET_MIN)),\n      ],\n    });\n  };\n\n  private createArcInterpolation = (easing: EasingFunction): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: this.createArcInterpolationInputRange(),\n      outputRange: this.createArcInterpolationOutputRange(easing),\n    });\n  };\n\n  /**\n   * Maps the animation frames into initial animation values specific for each frame.\n   *\n   * @returns a container interpolation input range in a numeric format.\n   */\n  private createArcInterpolationInputRange = (): number[] => {\n    return this.animationFrames.map((item: number, frame: number): number => {\n      return frame / (this.animationFrames.length - 1);\n    });\n  };\n\n  /**\n   * Maps the animation frames into a final animation values specific for each frame.\n   *\n   * @param {(progress: number) => number} easing - Easing function specific for the arc.\n   * @returns an arc interpolation end values eased with an `easing` function in a StyleSheet degree format.\n   */\n  private createArcInterpolationOutputRange = (easing: EasingFunction): string[] => {\n    return this.animationFrames.map((item: number, frame: number): string => {\n      const progress: number = 2 * frame / (this.animationFrames.length - 1);\n      const boundedProgress: number = Math.min(2.0 - progress, progress);\n\n      return this.toDegValue(easing(boundedProgress));\n    });\n  };\n\n  /**\n   * @param {Animated.AnimatedInterpolation} rotate - animated rotation animationValue.\n   * @param {ViewStyle} source - initial StyleSheet object.\n   * @returns a final StyleSheet object with a `rotate` animation value.\n   */\n  private toStyleTransformProp = (rotate: Animated.AnimatedInterpolation, source: ViewStyle = {}): ViewStyle => {\n    const transform = [...(source.transform || []), { rotate }];\n\n    // @ts-ignore: AnimatedInterpolation does not fit RotateTransform type declaration\n    return { ...source, transform };\n  };\n\n  /**\n   * @param {number} source - degrees in a numeric format.\n   * @returns degrees in a StyleSheet format.\n   */\n  private toDegValue = (source: number): string => {\n    return `${source}deg`;\n  };\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  EvaSize,\n  EvaStatus,\n  Size,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n} from '../../theme';\nimport {\n  SpinnerAnimation,\n  SpinnerAnimationStyle,\n} from './animation';\n\ntype SpinnerStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface SpinnerProps extends ViewProps, SpinnerStyledProps {\n  animating?: boolean;\n  status?: EvaStatus;\n  size?: EvaSize;\n}\n\nexport type SpinnerElement = React.ReactElement<SpinnerProps>;\n\ninterface ArcElementStyle {\n  container: ViewStyle;\n  arc: ViewStyle;\n  overflow?: ViewStyle;\n}\n\n/**\n * Displays a loading state of a page or a section.\n *\n * @extends React.Component\n *\n * @property {boolean} animating - Whether component is animating.\n * Default is *true*.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *primary*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {string} size - Size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Defaults to *medium*.\n *\n * @overview-example SpinnerSimpleUsage\n * Default Spinner status is `primary` and size is `medium`.\n *\n * @overview-example SpinnerSizes\n * To resize Spinner, a `size` property may be used.\n *\n * @overview-example SpinnerStatuses\n * A color can be changed with `status` property\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example SpinnerTheming\n * Styling of Spinner is possible with [configuring a custom theme](guides/branding).\n *\n * @example SpinnerDataLoading\n */\n@styled('Spinner')\nexport class Spinner extends React.PureComponent<SpinnerProps> {\n\n  static defaultProps: Partial<SpinnerProps> = {\n    animating: true,\n  };\n\n  private animation: SpinnerAnimation = new SpinnerAnimation(this.containerSize.height);\n\n  private get containerSize(): Size {\n    const { width, height } = StyleSheet.flatten([this.props.eva.style, this.props.style]);\n    // @ts-ignore: width and height are restricted to be a number\n    return new Size(width, height);\n  }\n\n  public componentDidMount(): void {\n    if (this.props.animating) {\n      this.startAnimation();\n    }\n  }\n\n  public componentDidUpdate(prevProps: SpinnerProps): void {\n    const animatingChanged: boolean = this.props.animating !== prevProps.animating;\n\n    if (animatingChanged && this.props.animating) {\n      this.startAnimation();\n    }\n\n    if (animatingChanged && !this.props.animating) {\n      this.stopAnimation();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  private startAnimation = (): void => {\n    this.animation.start();\n  };\n\n  private stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (source: SpinnerAnimationStyle) => {\n    const start: ArcElementStyle = {\n      container: source.container,\n      arc: source.start,\n    };\n\n    const end: ArcElementStyle = {\n      container: source.container,\n      arc: source.end,\n      overflow: { top: this.containerSize.height / 2 },\n    };\n\n    return { start, end };\n  };\n\n  private renderArcElement = (style: ArcElementStyle, size: Size): React.ReactElement<ViewProps> => {\n    const arcSize: Size = new Size(size.width, size.height / 2);\n\n    return (\n      <Animated.View style={[StyleSheet.absoluteFill, style.container, size]}>\n        <View style={[styles.noOverflow, style.overflow, arcSize]}>\n          <Animated.View style={[style.arc, size]}>\n            <View style={[styles.noOverflow, arcSize]}>\n              <View style={[this.props.eva.style, this.props.style]} />\n            </View>\n          </Animated.View>\n        </View>\n      </Animated.View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const containerSize: Size = this.containerSize;\n    const evaStyle = this.getComponentStyle(this.animation.toProps());\n\n    return (\n      <View\n        testID={this.props.testID}\n        style={containerSize}>\n        {this.renderArcElement(evaStyle.start, containerSize)}\n        {this.renderArcElement(evaStyle.end, containerSize)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  noOverflow: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport {\n  TabElement,\n  TabProps,\n} from './tab.component';\nimport { TabIndicator } from '../shared/tabIndicator.component';\n\ntype TabBarStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface TabBarProps extends ViewProps, TabBarStyledProps {\n  children?: ChildrenWithProps<TabProps>;\n  selectedIndex?: number;\n  onSelect?: (index: number) => void;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nexport type TabBarElement = React.ReactElement<TabBarProps>;\n\n/**\n * A bar with tabs styled by Eva.\n * TabBar should contain Tab components to provide a useful navigation component.\n *\n * @extends React.Component\n *\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Tabs to be rendered within the bar.\n *\n * @property {number} selectedIndex - Index of currently selected tab.\n *\n * @property {(number) => void} onSelect - Called when tab is pressed.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Style of the indicator component.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabBarSimpleUsage\n * In basic examples, tabs are wrapped within `TabBar`.\n *\n * @overview-example Using with React Navigation\n * TabBar can also be [configured with React Navigation](guides/configure-navigation)\n * to provide a navigational component.\n * ```\n * import React from 'react';\n * import { NavigationContainer } from '@react-navigation/native';\n * import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n * import { TabBar, Tab, Layout, Text } from '@ui-kitten/components';\n *\n * const { Navigator, Screen } = createMaterialTopTabNavigator();\n *\n * const UsersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>USERS</Text>\n *   </Layout>\n * );\n *\n * const OrdersScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>ORDERS</Text>\n *   </Layout>\n * );\n *\n * const TopTabBar = ({ navigation, state }) => (\n *   <TabBar\n *     selectedIndex={state.index}\n *     onSelect={index => navigation.navigate(state.routeNames[index])}>\n *     <Tab title='USERS'/>\n *     <Tab title='ORDERS'/>\n *   </TabBar>\n * );\n *\n * const TabNavigator = () => (\n *   <Navigator tabBar={props => <TopTabBar {...props} />}>\n *     <Screen name='Users' component={UsersScreen}/>\n *     <Screen name='Orders' component={OrdersScreen}/>\n *   </Navigator>\n * );\n *\n * export const AppNavigator = () => (\n *   <NavigationContainer>\n *     <TabNavigator/>\n *   </NavigationContainer>\n * );\n * ```\n *\n * @overview-example TabBarAccessories\n * Tabs also may contain [icons](guides/icon-packages), to provide a better user interfaces.\n *\n * @overview-example TabStyling\n * Tab and it's inner views can be styled by passing them as function components.\n * ```\n * import { Tab, Text } from '@ui-kitten/components';\n *\n * <Tab\n *   title={evaProps => <Text {...evaProps}>USERS</Text>}\n * />\n * ```\n *\n * @overview-example TabTheming\n * In most cases this is redundant, if [custom theme is configured](guides/branding).\n */\n@styled('TabBar')\nexport class TabBar extends React.Component<TabBarProps> {\n\n  static defaultProps: Partial<TabBarProps> = {\n    selectedIndex: 0,\n  };\n\n  private tabIndicatorRef = React.createRef<TabIndicator>();\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    this.tabIndicatorRef.current?.scrollToIndex(params);\n  }\n\n  public scrollToOffset(params: { offset: number, animated?: boolean }): void {\n    this.tabIndicatorRef.current?.scrollToOffset(params);\n  }\n\n  private onTabSelect = (index: number): void => {\n    this.props.onSelect && this.props.onSelect(index);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      indicatorHeight,\n      indicatorBorderRadius,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        borderRadius: indicatorBorderRadius,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private isTabSelected = (index: number): boolean => {\n    return index === this.props.selectedIndex;\n  };\n\n  private renderTabElement = (element: TabElement, index: number): TabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: this.isTabSelected(index),\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenWithProps<TabProps>): TabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, testID, indicatorStyle, selectedIndex, children, ...viewProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n    const tabElements: TabElement[] = this.renderTabElements(children);\n\n    return (\n      <View testID={testID}>\n        <View\n          {...viewProps}\n          style={[evaStyle.container, styles.container, style]}>\n          {tabElements}\n        </View>\n        <TabIndicator\n          ref={this.tabIndicatorRef}\n          style={[ evaStyle.indicator, indicatorStyle ]}\n          selectedPosition={selectedIndex}\n          positions={tabElements.length}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  Platform,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ChildrenWithProps,\n  RTLService,\n} from '../../devsupport';\n\nexport interface ViewPagerProps<ChildrenProps = {}> extends ViewProps {\n  children?: ChildrenWithProps<ChildrenProps>;\n  selectedIndex?: number;\n  swipeEnabled?: boolean;\n  onSelect?: (index: number) => void;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n}\n\nexport type ViewPagerElement = React.ReactElement<ViewPagerProps>;\n\n/**\n * A view with a set of swipeable pages.\n *\n * @extends React.Component\n **\n * @property {ReactNode} children - Page components to render within the view.\n *\n * @property {number} selectedIndex - Index of currently selected view.\n *\n * @property {boolean} swipeEnabled - Disable swipe gesture, but keeping animations.\n *\n * @property {(number) => void} onSelect - Called when view becomes visible.\n *\n * @property {(number) => boolean} shouldLoadComponent - A function to determine\n * whether particular view should be rendered.\n * Useful when providing \"lazy\" loading behavior.\n *\n * @property {(number) => void} onOffsetChange - Called when scroll offset changes.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ViewPagerSimpleUsage\n * Simple usage.\n *\n * @overview-example ViewPagerLazyLoading\n * Each view can be loaded lazily by using `shouldLoadComponent` property.\n */\nexport class ViewPager<ChildrenProps = {}> extends React.Component<ViewPagerProps<ChildrenProps>>\n  implements PanResponderCallbacks {\n\n  static defaultProps: Partial<ViewPagerProps> = {\n    selectedIndex: 0,\n    swipeEnabled: true,\n    shouldLoadComponent: (): boolean => true,\n  };\n\n  private containerRef = React.createRef<View>();\n  private contentWidth: number = 0;\n  private contentOffsetValue: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(this.contentOffsetValue);\n  private panResponder: PanResponderInstance = PanResponder.create(this);\n\n  private get children(): React.ReactElement<ChildrenProps>[] {\n    return React.Children.toArray(this.props.children).filter(Boolean) as React.ReactElement<ChildrenProps>[];\n  }\n\n  public componentDidMount(): void {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: ViewPagerProps): void {\n    if (prevProps.selectedIndex !== this.props.selectedIndex) {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.contentOffset.removeAllListeners();\n  }\n\n  public onMoveShouldSetPanResponder = (_event: GestureResponderEvent, state: PanResponderGestureState): boolean => {\n    const isHorizontalMove: boolean = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n    if (isHorizontalMove) {\n      const i18nOffset: number = RTLService.select(state.dx, -state.dx);\n      const nextSelectedIndex: number = this.props.selectedIndex - Math.sign(i18nOffset);\n      return nextSelectedIndex >= 0 && nextSelectedIndex < this.children.length;\n    }\n\n    return false;\n  };\n\n  public onPanResponderMove = (_event: GestureResponderEvent, state: PanResponderGestureState): void => {\n    const i18nOffset: number = RTLService.select(this.contentWidth, -this.contentWidth);\n    const selectedPageOffset: number = this.props.selectedIndex * i18nOffset;\n\n    this.contentOffset.setValue(state.dx - selectedPageOffset);\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n      const i18nOffset: number = RTLService.select(state.dx, -state.dx);\n      const index: number = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n      this.scrollToIndex({ index, animated: true });\n    } else {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  };\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { index, ...rest } = params;\n    const childCount = this.children.length - 1;\n    const offset: number = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  public scrollToOffset = (params: { offset: number, animated?: boolean }): void => {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  };\n\n  private onLayout = (event: LayoutChangeEvent): void => {\n    this.contentWidth = event.nativeEvent.layout.width / this.children.length;\n    this.scrollToIndex({ index: this.props.selectedIndex });\n  };\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }): void => {\n    this.contentOffsetValue = RTLService.select(-state.value, state.value);\n\n    if (this.props.onOffsetChange) {\n      this.props.onOffsetChange(this.contentOffsetValue);\n    }\n  };\n\n  private onContentOffsetAnimationStateEnd = (_result: { finished: boolean }): void => {\n    const selectedIndex: number = this.contentOffsetValue / this.contentWidth;\n\n    if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n      this.props.onSelect(Math.round(selectedIndex));\n    }\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? 300 : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: RTLService.select(-params.offset, params.offset),\n      easing: Easing.linear,\n      duration: animationDuration,\n      useNativeDriver: Platform.OS !== 'web',\n    });\n  };\n\n  private getContainerStyle = (): ViewStyle => {\n    return {\n      width: `${100 * this.children.length}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  private renderComponentChild = (source: React.ReactElement<ChildrenProps>, index: number): React.ReactElement => {\n    const contentView = this.props.shouldLoadComponent(index) ? source : null;\n\n    return (\n      <View style={styles.contentContainer}>\n        {contentView}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (): React.ReactElement[] => {\n    return React.Children.map(this.children, this.renderComponentChild);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, children, swipeEnabled, ...viewProps } = this.props;\n\n    const panResponderConfig = swipeEnabled ? this.panResponder.panHandlers : null;\n    const animatedViewProps = { ...viewProps, ...panResponderConfig  };\n\n    return (\n      <Animated.View\n        {...animatedViewProps}\n        style={[styles.container, style, this.getContainerStyle()]}\n        onLayout={this.onLayout}\n        // @ts-ignore\n        ref={this.containerRef}>\n        {this.renderComponentChildren()}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { ChildrenWithProps } from '../../devsupport';\nimport {\n  TabElement,\n  TabProps,\n} from './tab.component';\nimport { TabBar } from './tabBar.component';\nimport {\n  ViewPager,\n  ViewPagerProps,\n} from '../viewPager/viewPager.component';\n\nclass TabViewChildElement {\n  tab: TabElement;\n  content: React.ReactElement;\n}\n\nclass TabViewChildren {\n  tabs: TabElement[] = [];\n  contents: React.ReactElement[] = [];\n}\n\nexport interface TabViewProps extends ViewPagerProps<TabProps> {\n  tabBarStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nexport type TabViewElement = React.ReactElement<TabViewProps>;\n\n/**\n * A view with tabs and swipeable contents.\n *\n * @extends React.Component\n **\n * @property {ReactElement<TabProps> | ReactElement<TabProps>[]} children - Tabs to be rendered within the view.\n *\n * @property {number} selectedIndex - Index of currently selected tab.\n *\n * @property {(number) => void} onSelect - Called when tab is pressed or its content becomes visible.\n *\n * @property {(number) => boolean} shouldLoadComponent - A function to determine\n * whether content for particular tab should be rendered.\n * Useful when providing \"lazy\" loading behavior.\n *\n * @property {(number) => void} onOffsetChange - Called when scroll offset changes.\n *\n * @property {StyleProp<ViewStyle>} tabBarStyle - Style of TabBar component.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Style of selected tab indicator.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabViewSimpleUsage\n * TabView is an alternative way to build tabbed screens, without a need to configure routing.\n *\n * @overview-example TabViewLazyLoading\n * Tab contents may be loaded lazily, by configuring `shouldLoadComponent` property.\n */\nexport class TabView extends React.Component<TabViewProps> {\n\n  static defaultProps: Partial<TabViewProps> = {\n    selectedIndex: 0,\n  };\n\n  private viewPagerRef = React.createRef<ViewPager>();\n  private tabBarRef = React.createRef<TabBar>();\n\n  private onBarSelect = (index: number): void => {\n    this.props.onSelect && this.props.onSelect(index);\n  };\n\n  private onPagerOffsetChange = (offset: number): void => {\n\n  };\n\n  private onPagerSelect = (index: number): void => {\n    this.props.onSelect && this.props.onSelect(index);\n  };\n\n  private renderComponentChild = (element: TabElement, index: number): TabViewChildElement => {\n    return {\n      tab: React.cloneElement(element, { key: index }),\n      content: element.props.children,\n    };\n  };\n\n  private renderComponentChildren = (source: ChildrenWithProps<TabProps>): TabViewChildren => {\n    const children = React.Children.toArray(source) as TabElement[];\n\n    return children.reduce((acc: TabViewChildren, element: TabElement, index: number) => {\n      const { tab, content } = this.renderComponentChild(element, index);\n      return {\n        tabs: [...acc.tabs, tab],\n        contents: [...acc.contents, content],\n      };\n    }, new TabViewChildren());\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, selectedIndex, children, tabBarStyle, indicatorStyle, ...viewProps } = this.props;\n    const { tabs, contents } = this.renderComponentChildren(children);\n\n    return (\n      <View\n        {...viewProps}\n        style={[styles.container, style]}>\n        <TabBar\n          style={tabBarStyle}\n          ref={this.tabBarRef}\n          selectedIndex={selectedIndex}\n          indicatorStyle={indicatorStyle}\n          onSelect={this.onBarSelect}>\n          {tabs}\n        </TabBar>\n        <ViewPager\n          ref={this.viewPagerRef}\n          {...viewProps}\n          style={[styles.container, style]}\n          selectedIndex={selectedIndex}\n          shouldLoadComponent={this.props.shouldLoadComponent}\n          onOffsetChange={this.onPagerOffsetChange}\n          onSelect={this.onPagerSelect}>\n          {contents}\n        </ViewPager>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype TabStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface TabProps extends TouchableWebProps, TabStyledProps {\n  children?: React.ReactElement;\n  title?: RenderProp<TextProps> | React.ReactText;\n  icon?: RenderProp<Partial<ImageProps>>;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type TabElement = React.ReactElement<TabProps>;\n\n/**\n * A single tab within the TabView or TabBar.\n * Tabs should be rendered within TabView or TabBar to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactElement} children - A component displayed below the tab.\n *\n * @property {ReactElement | ReactText | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the tab.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} icon - Function component\n * to render within the tab.\n * Expected to return an Image.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TabSimpleUsage\n */\n@styled('Tab')\nexport class Tab extends React.Component<TabProps> {\n\n  static defaultProps: Partial<TabProps> = {\n    selected: false,\n  };\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onPress = (): void => {\n    this.props.onSelect && this.props.onSelect(!this.props.selected);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, title, icon, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, styles.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onPress={this.onPress}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={icon}\n        />\n        <FalsyText\n          style={evaStyle.title}\n          component={title}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  TargetedEvent,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  EvaStatus,\n  FalsyText,\n  RenderProp,\n  RTLService,\n  TouchableWeb,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\nimport { CheckMark } from '../shared/checkmark.component';\n\ntype ToggleStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default'>;\n}>;\n\nexport interface ToggleProps extends TouchableWebProps, ToggleStyledProps {\n  children?: RenderProp<TextProps> | React.ReactText;\n  checked?: boolean;\n  onChange?: (checked: boolean) => void;\n  status?: EvaStatus;\n}\n\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\n/**\n * Switches toggle the state of a single setting on or off.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Whether component is checked.\n * Defaults to *false*.\n *\n * @property {(boolean) => void} onChange - Called when toggle\n * should switch it's value.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} children - String, number or a function component\n * to render near the toggle.\n * If it is a function, expected to return a Text.\n *\n * @property {string} status - Status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Defaults to *basic*.\n * Use *control* status when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ToggleSimpleUsage\n *\n * @overview-example ToggleStates\n * Toggle can be checked or disabled.\n *\n * @overview-example ToggleStatus\n * Toggle may marked with `status` property, which is useful within forms validation.\n * An extra status is `control`, which is designed to be used on high-contrast backgrounds.\n *\n * @overview-example ToggleStyling\n * Toggle and it's inner views can be styled by passing them as function components.\n * ```\n * import { Toggle, Text } from '@ui-kitten/components';\n *\n * <Toggle>\n *   {evaProps => <Text {...evaProps}>Place your Text</Text>}\n * </Toggle>\n * ```\n *\n * @overview-example ToggleTheming\n * In most cases this is redundant, if [custom theme is configured](docs/guides/branding).\n */\n@styled('Toggle')\nexport class Toggle extends React.Component<ToggleProps> implements PanResponderCallbacks {\n\n  private panResponder: PanResponderInstance;\n  private thumbWidthAnimation: Animated.Value;\n  private thumbTranslateAnimation: Animated.Value;\n  private ellipseScaleAnimation: Animated.Value;\n  private thumbTranslateAnimationActive: boolean;\n\n  constructor(props: ToggleProps) {\n    super(props);\n\n    const { checked, eva } = props;\n\n    this.thumbWidthAnimation = new Animated.Value(eva.style.thumbWidth);\n    this.thumbTranslateAnimation = new Animated.Value(0);\n    this.ellipseScaleAnimation = new Animated.Value(checked ? 0.01 : 1.0);\n    this.thumbTranslateAnimationActive = false;\n\n    this.panResponder = PanResponder.create(this);\n  }\n\n  // PanResponderCallbacks\n\n  public onStartShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onStartShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderTerminationRequest = (): boolean => {\n    return false;\n  };\n\n  public onPanResponderGrant = (event: GestureResponderEvent): void => {\n    const { checked, disabled, eva } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this.onPressIn(event);\n\n    if (this.thumbTranslateAnimationActive) {\n      this.thumbTranslateAnimationActive = false;\n      this.stopAnimations();\n      return;\n    }\n\n    this.animateThumbWidth(eva.style.thumbWidth * 1.2);\n    this.animateEllipseScale(checked ? 1 : 0.01);\n  };\n\n  public onPanResponderMove: () => boolean = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, gestureState: PanResponderGestureState): void => {\n    const { checked, disabled, eva } = this.props;\n\n    if (!disabled) {\n      if ((!checked && gestureState.dx > -5) || (checked && gestureState.dx < 5)) {\n        this.toggle(this.onPress);\n      } else {\n        this.animateEllipseScale(checked ? 0.01 : 1);\n      }\n    }\n\n    this.animateThumbWidth(eva.style.thumbWidth);\n    this.onPressOut(event);\n  };\n\n  public onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(event);\n    }\n  };\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(event);\n    }\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  private onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.props.eva.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const { checked, disabled } = this.props;\n\n    const {\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      thumbWidth,\n      thumbHeight,\n      thumbBorderRadius,\n      thumbBackgroundColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      backgroundColor,\n      borderColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      ellipseContainer: {\n        borderColor: borderColor,\n        backgroundColor: backgroundColor,\n        ...containerParameters,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n      ellipse: {\n        width: containerParameters.width - (containerParameters.borderWidth * 2),\n        height: containerParameters.height - (containerParameters.borderWidth * 2),\n        borderRadius: (source.height - (source.borderWidth * 2)) / 2,\n        backgroundColor: backgroundColor,\n      },\n      thumb: {\n        alignSelf: checked ? 'flex-end' : 'flex-start',\n        width: this.thumbWidthAnimation,\n        height: thumbHeight,\n        borderRadius: thumbBorderRadius,\n        backgroundColor: thumbBackgroundColor,\n        elevation: disabled ? 0 : 5,\n        transform: [{ translateX: this.thumbTranslateAnimation }],\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        fill: iconTintColor,\n        stroke: iconTintColor,\n        strokeWidth: 3,\n      },\n    };\n  };\n\n  private animateThumbTranslate = (value: number, callback: () => void = () => null): void => {\n    this.thumbTranslateAnimationActive = true;\n\n    Animated.timing(this.thumbTranslateAnimation, {\n      toValue: RTLService.select(value, -value),\n      duration: 150,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start(() => {\n      this.thumbTranslateAnimationActive = false;\n      callback();\n    });\n  };\n\n  private animateThumbWidth = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.thumbWidthAnimation, {\n      toValue: value,\n      duration: 150,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start(callback);\n  };\n\n  private animateEllipseScale = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.ellipseScaleAnimation, {\n      toValue: value,\n      duration: 200,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start(callback);\n  };\n\n  private stopAnimations = (): void => {\n    const value: number = this.props.checked ? 0.01 : 1;\n\n    this.thumbTranslateAnimation.stopAnimation();\n    this.ellipseScaleAnimation.stopAnimation();\n    this.thumbWidthAnimation.stopAnimation();\n\n    this.ellipseScaleAnimation.setValue(value);\n  };\n\n  private toggle = (callback = (nextValue: boolean) => null): void => {\n    const value: number = this.props.checked ? -20 : 20;\n\n    this.animateThumbTranslate(value, () => {\n      this.thumbTranslateAnimation.setValue(0);\n      callback(!this.props.checked);\n    });\n\n    this.animateThumbWidth(this.props.eva.style.thumbWidth);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, checked, children, testID, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <View\n        testID={testID}\n        {...this.panResponder.panHandlers}\n        style={[styles.container, style]}>\n        <TouchableWeb\n          {...touchableProps}\n          style={styles.toggleContainer}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}>\n          <View style={[evaStyle.highlight, styles.highlight]} />\n          <Animated.View style={[evaStyle.ellipseContainer, styles.ellipseContainer]}>\n            <Animated.View style={[evaStyle.ellipse, styles.ellipse]} />\n            <Animated.View style={[evaStyle.thumb, styles.thumb]}>\n              <CheckMark {...evaStyle.icon} />\n            </Animated.View>\n          </Animated.View>\n        </TouchableWeb>\n        <FalsyText\n          style={evaStyle.text}\n          component={children}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  toggleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ellipseContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    overflow: 'hidden',\n  },\n  ellipse: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  highlight: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  thumb: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nexport type PopoverIndicatorProps = ViewProps;\nexport type PopoverIndicatorElement = React.ReactElement<PopoverIndicatorProps>;\n\nexport class PopoverIndicator extends React.Component<PopoverIndicatorProps> {\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>) => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(source);\n\n    return {\n      container: {\n        // @ts-ignore: `width` is restricted to be a number\n        borderLeftWidth: flatStyle.width,\n        // @ts-ignore: `width` is restricted to be a number\n        borderRightWidth: flatStyle.width,\n        // @ts-ignore: `height` is restricted to be a number\n        borderBottomWidth: flatStyle.height,\n        borderBottomColor: flatStyle.backgroundColor,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        backgroundColor: 'transparent',\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...props } = this.props;\n    const evaStyle = this.getComponentStyle(style);\n\n    return (\n      <View\n        {...props}\n        style={[style, styles.container, evaStyle.container]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  Overwrite,\n} from '../../devsupport';\nimport {\n  styled,\n  StyleType,\n} from '../../theme';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { PopoverIndicator } from '../popover/popoverIndicator.component';\nimport { TextProps } from '../text/text.component';\n\ntype TooltipPopoverProps = Overwrite<PopoverProps, {\n  children: RenderProp<TextProps> | React.ReactText;\n}>;\n\nexport interface TooltipProps extends TooltipPopoverProps {\n  accessoryLeft?: RenderProp<Partial<ImageProps>>;\n  accessoryRight?: RenderProp<Partial<ImageProps>>;\n}\n\nexport type TooltipElement = React.ReactElement<TooltipProps>;\n\n/**\n * Tooltip displays informative text when users focus on or tap an element.\n *\n * @extends React.Component\n *\n * @method {() => void} show - Sets Tooltip visible.\n *\n * @method {() => void} hide - Sets Tooltip invisible.\n *\n * @property {() => ReactElement} anchor - A component relative to which content component will be shown.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} children - String, number or a function component\n * to render within the tooltip.\n * If it is a function, expected to return a Text.\n *\n * @property {boolean} visible - Whether content component is visible.\n * Defaults to false.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryLeft - Function component\n * to render to start of the text.\n * Expected to return an Image.\n *\n * @property {ReactElement | (ImageProps) => ReactElement} accessoryRight - Function component\n * to render to end of the text.\n * Expected to return an Image.\n *\n * @property {() => void} onBackdropPress - Called when tooltip is visible and the underlying view was touched.\n * Useful when needed to close the modal on outside touches.\n *\n * @property {boolean} fullWidth - Whether a content component should take the width of `anchor`.\n *\n * @property {string | PopoverPlacement} placement - Position of the content component relative to the `anchor`.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Defaults to *bottom*.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Style of backdrop.\n *\n * @overview-example TooltipSimpleUsage\n * Tooltip accepts it's text as child element and is displayed relative to `anchor` view.\n *\n * @overview-example TooltipAccessories\n * Also, it may contain inner views configured with `accessoryLeft` and `accessoryRight` properties.\n * Within Eva it is expected to be an image or [svg icon](docs/guides/icon-packages).\n *\n * @overview-example TooltipStyledBackdrop\n * To style the underlying view, `backdropStyle` property may be used.\n *\n * @overview-example TooltipPlacement\n * By default, tooltip is displayed to the bottom of `anchor` view, but it is configurable with `placement` property.\n *\n * @overview-example TooltipStyling\n * Tooltip and it's inner views can be styled by passing them as function components.\n * In most cases this is redundant, if [custom theme is configured](docs/guides/branding).\n * ```\n * import { Tooltip, Text } from '@ui-kitten/components';\n *\n * <Tooltip style={...}>\n *   {evaProps => <Text {...evaProps}>TEXT</Text>}\n * </Tooltip>\n * ```\n */\n@styled('Tooltip')\nexport class Tooltip extends React.Component<TooltipProps> {\n\n  private popoverRef = React.createRef<Popover>();\n\n  public show = (): void => {\n    this.popoverRef.current?.show();\n  };\n\n  public hide = (): void => {\n    this.popoverRef.current?.hide();\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      indicatorBackgroundColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textFontFamily,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderPopoverIndicatorElement = (props: ViewProps): React.ReactElement => {\n    const evaStyle = this.getComponentStyle(this.props.eva.style);\n    return (\n      <PopoverIndicator {...props} style={[props.style, evaStyle.indicator]} />\n    );\n  };\n\n  public render(): PopoverElement {\n    const { eva, style, accessoryLeft, accessoryRight, children, ...popoverProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <Popover\n        {...popoverProps}\n        ref={this.popoverRef}\n        style={[evaStyle.container, style]}\n        indicator={this.renderPopoverIndicatorElement}>\n        <View style={styles.content}>\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryLeft}\n          />\n          <FalsyText\n            style={evaStyle.text}\n            component={children}\n          />\n          <FalsyFC\n            style={evaStyle.icon}\n            component={accessoryRight}\n          />\n        </View>\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  FalsyFC,\n  FalsyText,\n  RenderProp,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\nimport { TextProps } from '../text/text.component';\n\ntype TopNavigationStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | 'control'>;\n}>;\n\nexport interface TopNavigationProps extends ViewProps, TopNavigationStyledProps {\n  title?: RenderProp<TextProps> | React.ReactText;\n  subtitle?: RenderProp<TextProps> | React.ReactText;\n  accessoryLeft?: RenderProp;\n  accessoryRight?: RenderProp;\n  alignment?: AlignmentProp;\n}\n\nexport type TopNavigationElement = React.ReactElement<TopNavigationProps>;\n\ntype AlignmentProp = 'start' | 'center';\n\n/**\n * TopNavigation provides a heading component for the entire page.\n *\n * @extends React.Component\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} title - String, number or a function component\n * to render within the top navigation.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactText | ReactElement | (TextProps) => ReactElement} subtitle - String, number or a function component\n * to render within the top navigation.\n * If it is a function, expected to return a Text.\n *\n * @property {ReactElement | () => ReactElement} accessoryLeft - Function component\n * to render to the left edge the top navigation.\n *\n * @property {ReactElement | () => ReactElement} accessoryRight - Function component\n * to render to the right edge the top navigation.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default`, `control`.\n * Use *control* appearance when needed to display within a contrast container.\n *\n * @property {string} alignment - Alignment of nested components.\n * Can be `center` or `start`.\n * Defaults to *start*.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TopNavigationSimpleUsage\n * In basic example TopNavigation contains a title and actions.\n *\n * @overview-example TopNavigationAccessories\n * TopNavigation may contain a single action on the left,\n * and as many actions as needed on the right. In common practices, actions may be wrapped in menus.\n *\n * @overview-example TopNavigationDivider\n * It is a good idea to separate TopNavigation and screen contents with `Divider` component.\n *\n * @overview-example TopNavigationImageTitle\n * Sometimes it is needed to have an image as title.\n * In this case, a function component can be provided to `title` property.\n *\n * @overview-example TopNavigationStyling\n * TopNavigation and it's inner views can be styled by passing them as function components.\n *\n * In most cases, this is redundant, if [custom theme is configured](guides/branding).\n * ```\n * import { TopNavigation, Text } from '@ui-kitten/components';\n *\n * <TopNavigation\n *   title={evaProps => <Text {...evaProps}>Title</Text>}\n *   subtitle={evaProps => <Text {...evaProps}>Subtitle</Text>}\n * />\n * ```\n */\n@styled('TopNavigation')\nexport class TopNavigation extends React.Component<TopNavigationProps> {\n\n  private getAlignmentDependentStyles = (alignment: AlignmentProp) => {\n    if (alignment === 'center') {\n      return {\n        container: styles.containerCentered,\n        titleContainer: styles.titleContainerCentered,\n      };\n    }\n\n    return {\n      rightControlsContainer: styles.rightControlsContainerStart,\n    };\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      titleTextAlign,\n      titleFontFamily,\n      titleFontSize,\n      titleFontWeight,\n      titleColor,\n      subtitleTextAlign,\n      subtitleFontFamily,\n      subtitleFontSize,\n      subtitleFontWeight,\n      subtitleColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      title: {\n        textAlign: titleTextAlign,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      subtitle: {\n        textAlign: subtitleTextAlign,\n        fontFamily: subtitleFontFamily,\n        fontSize: subtitleFontSize,\n        color: subtitleColor,\n        fontWeight: subtitleFontWeight,\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { eva, style, title, subtitle, alignment, accessoryLeft, accessoryRight, ...viewProps } = this.props;\n\n    const evaStyles = this.getComponentStyle(eva.style);\n    const alignmentStyles = this.getAlignmentDependentStyles(alignment);\n\n    return (\n      <View\n        style={[evaStyles.container, styles.container, alignmentStyles.container, style]}\n        {...viewProps}>\n        <View style={styles.leftControlContainer}>\n          <FalsyFC component={accessoryLeft} />\n        </View>\n        <View style={alignmentStyles.titleContainer || styles.titleContainer}>\n          <FalsyText\n            style={evaStyles.title}\n            component={title}\n          />\n          <FalsyText\n            style={evaStyles.subtitle}\n            component={subtitle}\n          />\n        </View>\n        <View style={[styles.rightControlsContainer, alignmentStyles.rightControlsContainer]}>\n          <FalsyFC component={accessoryRight} />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  containerCentered: {\n    justifyContent: 'space-between',\n  },\n  titleContainerCentered: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    flex: 1\n  },\n  leftControlContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainerStart: {\n    flex: 0,\n    justifyContent: 'flex-end',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  NativeSyntheticEvent,\n  TargetedEvent,\n} from 'react-native';\nimport {\n  FalsyFC,\n  RenderProp,\n  TouchableWeb,\n  TouchableWebElement,\n  TouchableWebProps,\n  Overwrite,\n  LiteralUnion,\n} from '../../devsupport';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '../../theme';\n\ntype TopNavigationActionStyledProps = Overwrite<StyledComponentProps, {\n  appearance?: LiteralUnion<'default' | 'control'>;\n}>;\n\nexport interface TopNavigationActionProps extends TouchableWebProps, TopNavigationActionStyledProps {\n  icon?: RenderProp<Partial<ImageProps>>;\n}\n\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\n/**\n * A single action within the TopNavigation.\n * Actions should be rendered within TopNavigation by providing them through `accessory` props\n * to provide a usable component.\n *\n * @extends React.Component\n *\n * @property {ReactElement | (ImageProps) => ReactElement} icon - Function component\n * to render within the action.\n * Expected to return an Image.\n *\n * @property {string} appearance - Appearance of the component.\n * Can be `default` and `control`.\n * Use *control* appearance when needed to display within a contrast container.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TopNavigationActionSimpleUsage\n */\n@styled('TopNavigationAction')\nexport class TopNavigationAction extends React.Component<TopNavigationActionProps> {\n\n  public onBlur = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onBlur && this.props.onBlur(event);\n  };\n\n  private onMouseEnter = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.HOVER]);\n    this.props.onMouseEnter && this.props.onMouseEnter(event);\n  };\n\n  private onMouseLeave = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([]);\n    this.props.onMouseLeave && this.props.onMouseLeave(event);\n  };\n\n  private onFocus = (event: NativeSyntheticEvent<TargetedEvent>): void => {\n    this.props.eva.dispatch([Interaction.FOCUSED]);\n    this.props.onFocus && this.props.onFocus(event);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n    this.props.onPressIn && this.props.onPressIn(event);\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.eva.dispatch([]);\n    this.props.onPressOut && this.props.onPressOut(event);\n  };\n\n  private getComponentStyle = (source: StyleType) => {\n    const {\n      iconTintColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        marginHorizontal: iconMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  public render(): TouchableWebElement {\n    const { eva, style, icon, ...touchableProps } = this.props;\n    const evaStyle = this.getComponentStyle(eva.style);\n\n    return (\n      <TouchableWeb\n        {...touchableProps}\n        style={[evaStyle.container, style]}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <FalsyFC\n          style={evaStyle.icon}\n          component={icon}\n        />\n      </TouchableWeb>\n    );\n  }\n}\n","import React from 'react';\n\nexport enum AppMapping {\n  eva = 'Eva',\n  material = 'Material',\n}\n\nexport enum AppTheme {\n  light = 'Light',\n  dark = 'Dark',\n}\n\nexport interface ThemeContextType {\n  mapping: AppMapping;\n  theme: AppTheme;\n  setMapping: (mapping: AppMapping) => void;\n  setTheme: (theme: AppTheme) => void;\n  isDarkMode: () => boolean;\n}\n\nexport const ThemeContext = React.createContext<ThemeContextType>({\n  mapping: AppMapping.eva,\n  theme: AppTheme.light,\n  setMapping: (mapping: AppMapping) => {\n  },\n  setTheme: (theme: AppTheme) => {\n  },\n  isDarkMode: () => false,\n});\n","import React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport { IconProvider } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\ntype IconElement = React.ReactElement<SvgProps>;\ntype IconComponent = React.ComponentType<SvgProps>;\n\nexport class EvaIcon implements IconProvider<SvgProps> {\n\n  constructor(private content: IconComponent) {\n  }\n\n  public toReactElement(props: SvgProps): IconElement {\n    const Icon: IconComponent = this.content;\n\n    const { style, ...svgProps } = props;\n    // @ts-ignore - UI Kitten components pass here `tintColor`\n    const fillColor: string = StyleSheet.flatten(style || {}).tintColor;\n\n    return (\n      <Icon\n        style={props.style}\n        fill={fillColor}\n        {...svgProps}\n      />\n    );\n  }\n}\n","import { IconPack } from '@ui-kitten/components';\nimport { SvgProps } from 'react-native-svg';\nimport { createIconsMap } from './createIconsMap';\n\nexport const EvaIconsPack: IconPack<SvgProps> = {\n  name: 'eva',\n  icons: createIconsMap(),\n};\n\n","import { IconProvider } from '@ui-kitten/components';\nimport { SvgProps } from 'react-native-svg';\nimport { findIconByName } from 'react-native-eva-icons/icons';\nimport { EvaIcon } from './evaIcon.component';\n\nexport const createIconsMap = (): { [key: string]: IconProvider<SvgProps> } => {\n  return new Proxy({}, {\n    get(target: {}, name: string): IconProvider<SvgProps> {\n      return new EvaIcon(findIconByName(name));\n    },\n  });\n};\n","import * as eva from '@eva-design/eva';\nimport * as material from '@eva-design/material';\n\nexport const themes: Record<string, any> = {\n  Eva: {\n    Light: eva.light,\n    Dark: eva.dark,\n  },\n  Material: {\n    Light: material.light,\n    Dark: material.dark,\n  },\n};\n","import React from 'react';\nimport { StyleSheet, ViewProps } from 'react-native';\nimport { SvgProps } from 'react-native-svg';\nimport { Button, ButtonGroup, Icon, Layout, LayoutElement } from '@ui-kitten/components';\nimport { AppMapping, AppTheme, ThemeContext, ThemeContextType } from '../services/theme.service';\n\nexport const ShowcaseSettings = (props: ViewProps): LayoutElement => {\n\n  const themeIconRef = React.useRef<Icon<SvgProps>>();\n  const themeContext: ThemeContextType = React.useContext(ThemeContext);\n\n  const nextMapping: AppMapping = themeContext.mapping === AppMapping.eva ? AppMapping.material : AppMapping.eva;\n  const nextTheme: AppTheme = themeContext.isDarkMode() ? AppTheme.light : AppTheme.dark;\n\n  const onSwitchMappingButtonPress = (): void => {\n    themeContext.setMapping(nextMapping);\n  };\n\n  const onSwitchThemeButtonPress = (): void => {\n    themeIconRef.current.startAnimation();\n    themeContext.setTheme(nextTheme);\n  };\n\n  const ThemeIcon = (evaProps) => (\n    <Icon\n      ref={themeIconRef}\n      {...evaProps}\n      animation='zoom'\n      name={themeContext.isDarkMode() ? 'moon-outline' : 'sun-outline'}\n    />\n  );\n\n  return (\n    <Layout style={[props.style, styles.container]} level='1'>\n      <ButtonGroup\n        status='basic'\n        size='small'>\n        <Button onPress={onSwitchMappingButtonPress}>\n          {`SWITCH TO ${nextMapping.toUpperCase()}`}\n        </Button>\n        <Button\n          accessoryLeft={ThemeIcon}\n          onPress={onSwitchThemeButtonPress}\n        />\n      </ButtonGroup>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n});\n","import React from 'react';\nimport { LayoutChangeEvent, StyleSheet, View } from 'react-native';\nimport { Card, Text } from '@ui-kitten/components';\nimport { ShowcaseSettings } from './showcaseSettings.component';\n\nconst ShowcaseCaption = (props) => (\n  <View {...props}>\n    <Text\n      appearance='hint'\n      category='c2'>\n      Powered by React Native Web\n    </Text>\n    <Text\n      appearance='hint'\n      category='c1'>\n      Rendering of React Native components in a web browser is an experimental feature and may contain issues.\n    </Text>\n  </View>\n);\n\nexport const ShowcaseIFrame = (Component: React.ComponentType, id: string): React.ReactElement => {\n\n  const postLayoutChangeEvent = (event: LayoutChangeEvent): void => {\n    window.parent.postMessage({ id, height: event.nativeEvent.layout.height }, '*');\n  };\n\n  return (\n    <Card\n      style={styles.card}\n      disabled={true}\n      header={props => <ShowcaseSettings {...props}/>}\n      footer={props => <ShowcaseCaption {...props}/>}\n      onLayout={postLayoutChangeEvent}>\n      <Component/>\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 0,\n  },\n});\n","import React from 'react';\nimport { ThemeProvider, ThemeProviderProps, ThemeType } from '@ui-kitten/components';\nimport { ShowcaseIFrame } from './showcaseIFrame.component';\nimport { ThemeContext } from '../services/theme.service';\nimport { themes } from '../app/themes';\n\nconst orangeTheme: ThemeType = {\n  'color-primary-100': '#FFECD2',\n  'color-primary-200': '#FFD3A6',\n  'color-primary-300': '#FFB579',\n  'color-primary-400': '#FF9758',\n  'color-primary-500': '#FF6721',\n  'color-primary-600': '#DB4818',\n  'color-primary-700': '#B72F10',\n  'color-primary-800': '#931A0A',\n  'color-primary-900': '#7A0C06',\n  'color-primary-transparent-100': 'rgba(255, 103, 33, 0.08)',\n  'color-primary-transparent-200': 'rgba(255, 103, 33, 0.16)',\n  'color-primary-transparent-300': 'rgba(255, 103, 33, 0.24)',\n  'color-primary-transparent-400': 'rgba(255, 103, 33, 0.32)',\n  'color-primary-transparent-500': 'rgba(255, 103, 33, 0.4)',\n  'color-primary-transparent-600': 'rgba(255, 103, 33, 0.48)',\n};\n\nexport const ShowcaseThemingIFrame = (Component: React.ComponentType, showcaseId: string): React.ReactElement => {\n\n  const themeContext = React.useContext(ThemeContext);\n  const currentTheme = themes[themeContext.mapping][themeContext.theme];\n\n  const OrangeThemeProvider = (props: ThemeProviderProps) => (\n    <ThemeProvider {...props} theme={{ ...currentTheme, ...orangeTheme }}>\n      <Component/>\n    </ThemeProvider>\n  );\n\n  return ShowcaseIFrame(OrangeThemeProvider, showcaseId);\n};\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport { Autocomplete, AutocompleteItem, Icon } from '@ui-kitten/components';\n\nconst movies = [\n  { title: 'Star Wars' },\n  { title: 'Back to the Future' },\n  { title: 'The Matrix' },\n  { title: 'Inception' },\n  { title: 'Interstellar' },\n];\n\nconst filter = (item, query) => item.title.toLowerCase().includes(query.toLowerCase());\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const AutocompleteAccessoriesShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(movies);\n\n  const onSelect = (index) => {\n    setValue(data[index].title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(movies.filter(item => filter(item, query)));\n  };\n\n  const clearInput = () => {\n    setValue('');\n    setData(movies);\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n      accessoryLeft={StarIcon}\n    />\n  );\n\n  const renderCloseIcon = (props) => (\n    <TouchableWithoutFeedback onPress={clearInput}>\n      <Icon {...props} name='close'/>\n    </TouchableWithoutFeedback>\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Place your Text'\n      value={value}\n      accessoryRight={renderCloseIcon}\n      onChangeText={onChangeText}\n      onSelect={onSelect}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n\n","import React from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { Autocomplete, AutocompleteItem } from '@ui-kitten/components';\n\nconst requestData = () => fetch('https://reactnative.dev/movies.json');\nconst requestDataWithDebounce = AwesomeDebouncePromise(requestData, 400);\n\nexport const AutocompleteAsyncShowcase = () => {\n\n  const [query, setQuery] = React.useState(null);\n  const [data, setData] = React.useState([]);\n\n  const updateData = () => {\n    requestDataWithDebounce()\n      .then(response => response.json())\n      .then(json => json.movies)\n      .then(applyFilter)\n      .then(setData);\n  };\n\n  React.useEffect(updateData, [query]);\n\n  const onSelect = (index: number) => {\n    setQuery(data[index].title);\n  };\n\n  const onChangeText = (nextQuery) => {\n    setQuery(nextQuery);\n  };\n\n  const applyFilter = (options) => {\n    return options.filter(item => item.title.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n    />\n  );\n\n  return (\n    <Autocomplete\n      placeholder='For example, Star Wars'\n      value={query}\n      onChangeText={onChangeText}\n      onSelect={onSelect}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n","import React from 'react';\nimport { Keyboard, Platform } from 'react-native';\nimport { Autocomplete, AutocompleteItem } from '@ui-kitten/components';\n\nconst movies = [\n  { title: 'Star Wars' },\n  { title: 'Back to the Future' },\n  { title: 'The Matrix' },\n  { title: 'Inception' },\n  { title: 'Interstellar' },\n];\n\nconst showEvent = Platform.select({\n  android: 'keyboardDidShow',\n  default: 'keyboardWillShow',\n});\n\nconst hideEvent = Platform.select({\n  android: 'keyboardDidHide',\n  default: 'keyboardWillHide',\n});\n\nconst filter = (item, query) => item.title.toLowerCase().includes(query.toLowerCase());\n\nexport const AutocompleteHandleKeyboardShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(movies);\n  const [placement, setPlacement] = React.useState('bottom');\n\n  React.useEffect(() => {\n    const keyboardShowListener = Keyboard.addListener(showEvent, () => {\n      setPlacement('top');\n    });\n\n    const keyboardHideListener = Keyboard.addListener(hideEvent, () => {\n      setPlacement('bottom');\n    });\n\n    return () => {\n      keyboardShowListener.remove();\n      keyboardHideListener.remove();\n    };\n  });\n\n  const onSelect = (index) => {\n    setValue(movies[index].title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(movies.filter(item => filter(item, query)));\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n    />\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Place your Text'\n      value={value}\n      placement={placement}\n      onChangeText={onChangeText}\n      onSelect={onSelect}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n","import React from 'react';\nimport { Autocomplete, AutocompleteItem } from '@ui-kitten/components';\n\nconst movies = [\n  { title: 'Star Wars' },\n  { title: 'Back to the Future' },\n  { title: 'The Matrix' },\n  { title: 'Inception' },\n  { title: 'Interstellar' },\n];\n\nconst filter = (item, query) => item.title.toLowerCase().includes(query.toLowerCase());\n\nexport const AutocompleteSimpleUsageShowcase = () => {\n\n  const [value, setValue] = React.useState(null);\n  const [data, setData] = React.useState(movies);\n\n  const onSelect = (index) => {\n    setValue(movies[index].title);\n  };\n\n  const onChangeText = (query) => {\n    setValue(query);\n    setData(movies.filter(item => filter(item, query)));\n  };\n\n  const renderOption = (item, index) => (\n    <AutocompleteItem\n      key={index}\n      title={item.title}\n    />\n  );\n\n  return (\n    <Autocomplete\n      placeholder='Place your Text'\n      value={value}\n      onSelect={onSelect}\n      onChangeText={onChangeText}>\n      {data.map(renderOption)}\n    </Autocomplete>\n  );\n};\n","import React from 'react';\nimport { ImageBackground } from 'react-native';\nimport { Avatar } from '@ui-kitten/components';\n\nexport const AvatarImageComponentShowcase = () => (\n  <Avatar\n    source={require('../../assets/icon.png')}\n    ImageComponent={ImageBackground}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Layout } from '@ui-kitten/components';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Avatar style={styles.avatar} shape='square' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} shape='rounded' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} shape='round' source={require('../../assets/icon.png')}/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  avatar: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { Avatar } from '@ui-kitten/components';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Avatar source={require('../../assets/icon.png')}/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Layout } from '@ui-kitten/components';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Avatar style={styles.avatar} size='tiny' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='small' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='medium' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='large' source={require('../../assets/icon.png')}/>\n\n    <Avatar style={styles.avatar} size='giant' source={require('../../assets/icon.png')}/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: 8,\n  },\n  avatar: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigation, BottomNavigationTab, Icon } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst EmailIcon = (props) => (\n  <Icon {...props} name='email-outline'/>\n);\n\nconst useBottomNavigationState = (initialState = 0) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const BottomNavigationAccessoriesShowcase = () => {\n\n  const topState = useBottomNavigationState();\n  const bottomState = useBottomNavigationState();\n\n  return (\n    <React.Fragment>\n\n      <BottomNavigation style={styles.bottomNavigation} {...topState}>\n        <BottomNavigationTab title='USERS' icon={PersonIcon}/>\n        <BottomNavigationTab title='ORDERS' icon={BellIcon}/>\n        <BottomNavigationTab title='TRANSACTIONS' icon={EmailIcon}/>\n      </BottomNavigation>\n\n      <BottomNavigation style={styles.bottomNavigation} {...bottomState}>\n        <BottomNavigationTab icon={PersonIcon}/>\n        <BottomNavigationTab icon={BellIcon}/>\n        <BottomNavigationTab icon={EmailIcon}/>\n      </BottomNavigation>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bottomNavigation: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab } from '@ui-kitten/components';\n\nexport const BottomNavigationSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <BottomNavigationTab title='USERS'/>\n      <BottomNavigationTab title='ORDERS'/>\n      <BottomNavigationTab title='TRANSACTIONS'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { BottomNavigationTab, Icon } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab\n    title='USERS'\n    icon={StarIcon}\n  />\n);\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab, Icon } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst EmailIcon = (props) => (\n  <Icon {...props} name='email-outline'/>\n);\n\nexport const BottomNavigationTabThemingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <BottomNavigationTab icon={PersonIcon} title='USERS'/>\n      <BottomNavigationTab icon={BellIcon} title='ORDERS'/>\n      <BottomNavigationTab icon={EmailIcon} title='TRANSACTIONS'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { BottomNavigation, BottomNavigationTab } from '@ui-kitten/components';\n\nexport const BottomNavigationWithoutIndicatorShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      appearance='noIndicator'\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <BottomNavigationTab title='USERS'/>\n      <BottomNavigationTab title='ORDERS'/>\n      <BottomNavigationTab title='TRANSACTIONS'/>\n    </BottomNavigation>\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Icon, Layout, Spinner } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst LoadingIndicator = (props) => (\n  <View style={[props.style, styles.indicator]}>\n    <Spinner size='small'/>\n  </View>\n);\n\nexport const ButtonAccessoriesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} status='primary' accessoryLeft={StarIcon}>\n      PRIMARY\n    </Button>\n\n    <Button style={styles.button} status='success' accessoryRight={StarIcon}>\n      SUCCESS\n    </Button>\n\n    <Button style={styles.button} status='danger' accessoryLeft={StarIcon}/>\n\n    <Button style={styles.button} appearance='ghost' status='danger' accessoryLeft={StarIcon}/>\n\n    <Button style={styles.button} appearance='outline' accessoryLeft={LoadingIndicator}>\n      LOADING\n    </Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n  indicator: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} appearance='filled'>\n      FILLED\n    </Button>\n\n    <Button style={styles.button} appearance='outline'>\n      OUTLINE\n    </Button>\n\n    <Button style={styles.button} appearance='ghost'>\n      GHOST\n    </Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} appearance='ghost' status='primary'>\n      PRIMARY\n    </Button>\n\n    <Button style={styles.button} appearance='ghost' status='success'>\n      SUCCESS\n    </Button>\n\n    <Button style={styles.button} appearance='ghost' status='info'>\n      INFO\n    </Button>\n\n    <Button style={styles.button} appearance='ghost' status='warning'>\n      WARNING\n    </Button>\n\n    <Button style={styles.button} appearance='ghost' status='danger'>\n      DANGER\n    </Button>\n\n    <Button style={styles.button} appearance='ghost' status='basic'>\n      BASIC\n    </Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} appearance='ghost' status='control'>\n        CONTROL\n      </Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n  controlContainer: {\n    margin: 2,\n    padding: 6,\n    borderRadius: 4,\n    justifyContent: 'center',\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} appearance='outline' status='primary'>\n      PRIMARY\n    </Button>\n\n    <Button style={styles.button} appearance='outline' status='success'>\n      SUCCESS\n    </Button>\n\n    <Button style={styles.button} appearance='outline' status='info'>\n      INFO\n    </Button>\n\n    <Button style={styles.button} appearance='outline' status='warning'>\n      WARNING\n    </Button>\n\n    <Button style={styles.button} appearance='outline' status='danger'>\n      DANGER\n    </Button>\n\n    <Button style={styles.button} appearance='outline' status='basic'>\n      BASIC\n    </Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} appearance='outline' status='control'>\n        CONTROL\n      </Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    justifyContent: 'center',\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, Text } from '@ui-kitten/components';\n\nexport const ButtonSimpleUsageShowcase = () => {\n\n  const [counter, setCounter] = React.useState(0);\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Button onPress={() => setCounter(counter + 1)}>\n        BUTTON\n      </Button>\n\n      <Text style={styles.text}>\n        Pressed {counter} times\n      </Text>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    marginHorizontal: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} size='tiny'>\n      TINY\n    </Button>\n\n    <Button style={styles.button} size='small'>\n      SMALL\n    </Button>\n\n    <Button style={styles.button} size='medium'>\n      MEDIUM\n    </Button>\n\n    <Button style={styles.button} size='large'>\n      LARGE\n    </Button>\n\n    <Button style={styles.button} size='giant'>\n      GIANT\n    </Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonStatesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button}>\n      ACTIVE\n    </Button>\n\n    <Button style={styles.button} disabled={true}>\n      DISABLED\n    </Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Layout } from '@ui-kitten/components';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} status='primary'>\n      PRIMARY\n    </Button>\n\n    <Button style={styles.button} status='success'>\n      SUCCESS\n    </Button>\n\n    <Button style={styles.button} status='info'>\n      INFO\n    </Button>\n\n    <Button style={styles.button} status='warning'>\n      WARNING\n    </Button>\n\n    <Button style={styles.button} status='danger'>\n      DANGER\n    </Button>\n\n    <Button style={styles.button} status='basic'>\n      BASIC\n    </Button>\n\n    <View style={styles.controlContainer}>\n      <Button style={styles.button} status='control'>\n        CONTROL\n      </Button>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    justifyContent: 'center',\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Icon, Layout, Spinner } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst LoadingIndicator = (props) => (\n  <View style={[props.style, styles.indicator]}>\n    <Spinner size='small'/>\n  </View>\n);\n\nexport const ButtonThemingShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Button style={styles.button} status='primary' accessoryLeft={StarIcon}>\n      PRIMARY\n    </Button>\n\n    <Button style={styles.button} status='success' accessoryRight={StarIcon}>\n      SUCCESS\n    </Button>\n\n    <Button style={styles.button} status='danger' accessoryLeft={StarIcon}/>\n\n    <Button style={styles.button} appearance='ghost' status='danger' accessoryLeft={StarIcon}/>\n\n    <Button style={styles.button} appearance='outline' accessoryLeft={LoadingIndicator}>\n      LOADING\n    </Button>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n  indicator: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='filled'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost'>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  buttonGroup: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupGhostShowcase = () => (\n  <Layout style={styles.container} level='1'>\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} appearance='ghost' status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    justifyContent: 'center',\n    backgroundColor: '#3366FF',\n  },\n});","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupOutlineShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} appearance='outline' status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    justifyContent: 'center',\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Layout, Text } from '@ui-kitten/components';\n\nexport const ButtonGroupSimpleUsageShowcase = () => {\n\n  const [text, setText] = React.useState('Press any button');\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <ButtonGroup>\n        <Button onPress={() => setText('Left button pressed')}>L</Button>\n        <Button onPress={() => setText('Middle button pressed')}>M</Button>\n        <Button onPress={() => setText('Right button pressed')}>R</Button>\n      </ButtonGroup>\n\n      <Text style={styles.text}>{text}</Text>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    marginHorizontal: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <ButtonGroup style={styles.buttonGroup} size='tiny'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='small'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='medium'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='large'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} size='giant'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, ButtonGroup, Layout } from '@ui-kitten/components';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <ButtonGroup style={styles.buttonGroup} status='primary'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='success'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='info'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='warning'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='danger'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='basic'>\n      <Button>L</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n\n    <View style={styles.controlContainer}>\n      <ButtonGroup style={styles.buttonGroup} status='control'>\n        <Button>L</Button>\n        <Button>R</Button>\n      </ButtonGroup>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    justifyContent: 'center',\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, ButtonGroup, Icon, Layout } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const ButtonGroupWithIconsShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <ButtonGroup style={styles.buttonGroup}>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} appearance='outline' status='success'>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n    </ButtonGroup>\n\n    <ButtonGroup style={styles.buttonGroup} status='danger'>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n      <Button accessoryLeft={StarIcon}/>\n    </ButtonGroup>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonGroup: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Calendar, Text } from '@ui-kitten/components';\n\nconst DayCell = ({ date }, style) => (\n  <View\n    style={[styles.dayContainer, style.container]}>\n    <Text style={style.text}>{`${date.getDate()}`}</Text>\n    <Text style={[style.text, styles.value]}>\n      {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n    </Text>\n  </View>\n);\n\nexport const CalendarCustomDayShowcase = () => {\n\n  const [date, setDate] = React.useState(null);\n\n  return (\n    <Calendar\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n      renderDay={DayCell}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Calendar, Layout, Text } from '@ui-kitten/components';\n\nconst useCalendarState = (initialState = null) => {\n  const [date, setDate] = React.useState(initialState);\n  return { date, onSelect: setDate };\n};\n\nconst filter = (date) => date.getDay() !== 0 && date.getDay() !== 6;\n\nconst now = new Date();\nconst yesterday = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);\nconst tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n\nexport const CalendarFiltersShowcase = () => {\n\n  const minMaxCalendarState = useCalendarState();\n  const filterCalendarState = useCalendarState();\n  const boundingCalendarState = useCalendarState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <View style={styles.calendarContainer}>\n        <Text style={styles.text} category='h6'>\n          Min / Max\n        </Text>\n\n        <Calendar\n          min={yesterday}\n          max={tomorrow}\n          {...minMaxCalendarState}\n        />\n      </View>\n\n      <View style={styles.calendarContainer}>\n        <Text style={styles.text} category='h6'>\n          Filter\n        </Text>\n\n        <Calendar\n          filter={filter}\n          {...filterCalendarState}\n        />\n      </View>\n\n      <View style={styles.calendarContainer}>\n        <Text style={styles.text} category='h6'>\n          Bounding Month\n        </Text>\n\n        <Calendar\n          boundingMonth={false}\n          {...boundingCalendarState}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  calendarContainer: {\n    margin: 2,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Calendar, Layout, Text } from '@ui-kitten/components';\n\nconst now = new Date();\nconst date = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\nconst initialVisibleDate = new Date(now.getFullYear(), now.getMonth() + 3, now.getDate() + 1);\n\nexport const CalendarInitialVisibleDateShowcase = () => {\n  const [ selectedDate, setSelectedDate ] = React.useState(date);\n\n  const componentRef = React.createRef<Calendar>();\n\n  const scrollToSelected = () => {\n    if (componentRef.current) {\n        componentRef.current.scrollToDate(selectedDate);\n    }\n  };\n\n  const scrollToToday = () => {\n    if (componentRef.current) {\n      componentRef.current.scrollToToday();\n    }\n  };\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Button onPress={scrollToToday}>Scroll to Today</Button>\n      <Button onPress={scrollToSelected}>Scroll to Selected Date</Button>\n\n      <View style={styles.calendarContainer}>\n        <Text\n          category='h6'\n          style={styles.text}>\n          Selected date: {selectedDate.toLocaleDateString()}\n        </Text>\n\n        <Calendar\n          ref={componentRef}\n          date={selectedDate}\n          initialVisibleDate={initialVisibleDate}\n          onSelect={nextDate => setSelectedDate(nextDate)} />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  calendarContainer: {\n    margin: 2,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { Calendar, NativeDateService } from '@ui-kitten/components';\n\nconst i18n = {\n  dayNames: {\n    short: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n    long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n  },\n  monthNames: {\n    short: ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    long: [\n      'Январь',\n      'Февраль',\n      'Март',\n      'Апрель',\n      'Май',\n      'Июнь',\n      'Июль',\n      'Август',\n      'Сентябрь',\n      'Октябрь',\n      'Ноябрь',\n      'Декабрь',\n    ],\n  },\n};\n\nconst localeDateService = new NativeDateService('ru', { i18n, startDayOfWeek: 1 });\n\nexport const CalendarLocaleSettingsShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Calendar\n      dateService={localeDateService}\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n    />\n  );\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  DateService,\n  TranslationWidth,\n} from '@ui-kitten/components';\nimport moment, { Moment } from 'moment';\n\nexport class MomentDateService extends DateService<Moment> {\n\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(locale: string = 'en') {\n    super();\n    this.setLocale(locale);\n  }\n\n  public setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  public addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  public addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  public addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  public clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  public compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  public createDate(year: number, month: number, date: number): Moment {\n    return moment.utc([year, month, date]);\n  }\n\n  public format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  public getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  public getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.localeData.days[style];\n  }\n\n  public getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  public getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  public getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  public getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const month: number = this.getMonth(date);\n\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  public getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.localeData.months[style][month];\n  }\n\n  public getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  public getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  public getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  public getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  public getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  public isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  public isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  public isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  public parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  public today(): Moment {\n    return moment();\n  }\n\n  public getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.SHORT]: momentLocaleData.monthsShort(),\n        [TranslationWidth.LONG]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.SHORT]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.LONG]: momentLocaleData.weekdays(),\n      },\n    };\n  }\n}\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { Calendar } from '@ui-kitten/components';\nimport { MomentDateService } from '@ui-kitten/moment';\nimport moment from 'moment';\n\nconst dateService = new MomentDateService();\n\nexport const CalendarMomentShowcase = () => {\n\n  const [date, setDate] = React.useState(moment());\n\n  return (\n    <Calendar\n      dateService={dateService}\n      date={date}\n      onSelect={nextDate => setDate(nextDate)}\n    />\n  );\n};\n","import React from 'react';\nimport { Calendar, Text } from '@ui-kitten/components';\n\nexport const CalendarSimpleUsageShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <React.Fragment>\n\n      <Text category='h6'>\n        Selected date: {date.toLocaleDateString()}\n      </Text>\n\n      <Calendar\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Calendar, Layout, RangeCalendar, Text } from '@ui-kitten/components';\n\nexport const CalendarThemingShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n  const [range, setRange] = React.useState({});\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <View style={styles.calendarContainer}>\n        <Text style={styles.text} category='h6'>\n          Date\n        </Text>\n\n        <Calendar\n          date={date}\n          onSelect={nextDate => setDate(nextDate)}\n        />\n      </View>\n\n      <View style={styles.calendarContainer}>\n        <Text style={styles.text} category='h6'>\n          Date Ranges\n        </Text>\n\n        <RangeCalendar\n          range={range}\n          onSelect={nextRange => setRange(nextRange)}\n        />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  calendarContainer: {\n    margin: 2,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { RangeCalendar } from '@ui-kitten/components';\n\nexport const RangeCalendarSimpleUsageShowcase = () => {\n\n  const [range, setRange] = React.useState({});\n\n  return (\n    <RangeCalendar\n      range={range}\n      onSelect={nextRange => setRange(nextRange)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Card, Layout, Text } from '@ui-kitten/components';\n\nconst Header = (props) => (\n  <View {...props}>\n    <Text category='h6'>Maldives</Text>\n    <Text category='s1'>By Wikipedia</Text>\n  </View>\n);\n\nconst Footer = (props) => (\n  <View {...props} style={[props.style, styles.footerContainer]}>\n    <Button\n      style={styles.footerControl}\n      size='small'\n      status='basic'>\n      CANCEL\n    </Button>\n    <Button\n      style={styles.footerControl}\n      size='small'>\n      ACCEPT\n    </Button>\n  </View>\n);\n\nexport const CardAccessoriesShowcase = () => (\n  <React.Fragment>\n    <Layout style={styles.topContainer} level='1'>\n\n      <Card style={styles.card} header={Header}>\n        <Text>With Header</Text>\n      </Card>\n\n      <Card style={styles.card} footer={Footer}>\n        <Text>With Footer</Text>\n      </Card>\n\n    </Layout>\n\n    <Card style={styles.card} header={Header} footer={Footer}>\n      <Text>\n        The Maldives, officially the Republic of Maldives, is a small country in South Asia, located in the Arabian Sea\n        of the Indian Ocean. It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian\n        continent\n      </Text>\n    </Card>\n\n  </React.Fragment>\n);\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  card: {\n    flex: 1,\n    margin: 2,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginHorizontal: 2,\n  },\n});\n","import React from 'react';\nimport { Card, Text } from '@ui-kitten/components';\n\nexport const CardSimpleUsageShowcase = () => (\n  <Card>\n    <Text>\n      The Maldives, officially the Republic of Maldives, is a small country in South Asia,\n      located in the Arabian Sea of the Indian Ocean.\n      It lies southwest of Sri Lanka and India, about 1,000 kilometres (620 mi) from the Asian continent\n    </Text>\n  </Card>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Card, Layout, Text } from '@ui-kitten/components';\n\nexport const CardStatusesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Card style={styles.card} status='primary'>\n      <Text>Primary</Text>\n    </Card>\n\n    <Card style={styles.card} status='success'>\n      <Text>Success</Text>\n    </Card>\n\n    <Card style={styles.card} status='info'>\n      <Text>Info</Text>\n    </Card>\n\n    <Card style={styles.card} status='warning'>\n      <Text>Warning</Text>\n    </Card>\n\n    <Card style={styles.card} status='danger'>\n      <Text>Danger</Text>\n    </Card>\n\n    <Card style={styles.card} status='basic'>\n      <Text>Basic</Text>\n    </Card>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  card: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from '@ui-kitten/components';\n\nexport const CheckboxIndeterminateShowcase = () => {\n\n  const [allChecked, setAllChecked] = React.useState(false);\n  const [indeterminate, setIndeterminate] = React.useState(false);\n  const [readChecked, setReadChecked] = React.useState(false);\n  const [writeChecked, setWriteChecked] = React.useState(false);\n\n  const onGroupCheckedChange = (checked) => {\n    setReadChecked(checked);\n    setWriteChecked(checked);\n    setAllChecked(checked);\n    updateGroup(checked, checked);\n  };\n\n  const onReadCheckedChange = (checked) => {\n    setReadChecked(checked);\n    updateGroup(checked, writeChecked);\n  };\n\n  const onWriteCheckedChange = (checked) => {\n    setWriteChecked(checked);\n    updateGroup(checked, readChecked);\n  };\n\n  const updateGroup = (...states) => {\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      setAllChecked(true);\n      setIndeterminate(true);\n    } else if (!someChecked && !everyChecked) {\n      setAllChecked(false);\n      setIndeterminate(false);\n    } else if (everyChecked) {\n      setAllChecked(true);\n      setIndeterminate(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CheckBox\n        style={styles.group}\n        checked={allChecked}\n        indeterminate={indeterminate}\n        onChange={onGroupCheckedChange}>\n        Permissions\n      </CheckBox>\n      <CheckBox\n        style={styles.option}\n        checked={readChecked}\n        onChange={onReadCheckedChange}>\n        Read\n      </CheckBox>\n      <CheckBox\n        style={styles.option}\n        checked={writeChecked}\n        onChange={onWriteCheckedChange}>\n        Write\n      </CheckBox>\n    </React.Fragment>\n  );\n};\n\nexport const styles = StyleSheet.create({\n  group: {\n    marginVertical: 4,\n  },\n  option: {\n    marginVertical: 4,\n    marginHorizontal: 12,\n  },\n});\n","import React from 'react';\nimport { CheckBox } from '@ui-kitten/components';\n\nexport const CheckboxSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <CheckBox\n      checked={checked}\n      onChange={nextChecked => setChecked(nextChecked)}>\n      {`Checked: ${checked}`}\n    </CheckBox>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox, Layout } from '@ui-kitten/components';\n\nexport const CheckboxStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n  const [indeterminateChecked, setIndeterminateChecked] = React.useState(false);\n  const [indeterminate, setIndeterminate] = React.useState(true);\n\n  const onIndeterminateChange = (isChecked, isIndeterminate) => {\n    setIndeterminateChecked(isChecked);\n    setIndeterminate(isIndeterminate);\n  };\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <CheckBox\n        style={styles.checkbox}\n        checked={activeChecked}\n        onChange={nextChecked => setActiveChecked(nextChecked)}>\n        Active\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        checked={indeterminateChecked}\n        indeterminate={indeterminate}\n        onChange={onIndeterminateChange}>\n        Indeterminate\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        disabled={true}>\n        Disabled\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        disabled={true}\n        checked={true}>\n        Checked Disabled\n      </CheckBox>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  checkbox: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { CheckBox, Layout } from '@ui-kitten/components';\n\nconst useCheckboxState = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n  return { checked, onChange: setChecked };\n};\n\nexport const CheckboxStatusShowcase = () => {\n\n  const primaryCheckboxState = useCheckboxState();\n  const successCheckboxState = useCheckboxState();\n  const infoCheckboxState = useCheckboxState();\n  const warningCheckboxState = useCheckboxState();\n  const dangerCheckboxState = useCheckboxState();\n  const basicCheckboxState = useCheckboxState();\n  const controlCheckboxState = useCheckboxState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='primary'\n        {...primaryCheckboxState}>\n        Primary\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='success'\n        {...successCheckboxState}>\n        Success\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='info'\n        {...infoCheckboxState}>\n        Info\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='warning'\n        {...warningCheckboxState}>\n        Warning\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='danger'\n        {...dangerCheckboxState}>\n        Danger\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        status='basic'\n        {...basicCheckboxState}>\n        Basic\n      </CheckBox>\n\n      <View style={styles.controlContainer}>\n        <CheckBox\n          style={styles.checkbox}\n          status='control'\n          {...controlCheckboxState}>\n          Control\n        </CheckBox>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  checkbox: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox, Layout } from '@ui-kitten/components';\n\nexport const CheckboxThemingShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(true);\n  const [indeterminateChecked, setIndeterminateChecked] = React.useState(false);\n  const [indeterminate, setIndeterminate] = React.useState(true);\n\n  const onIndeterminateChange = (isChecked, isIndeterminate) => {\n    setIndeterminateChecked(isChecked);\n    setIndeterminate(isIndeterminate);\n  };\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <CheckBox\n        style={styles.checkbox}\n        checked={activeChecked}\n        onChange={nextChecked => setActiveChecked(nextChecked)}>\n        Active\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        checked={indeterminateChecked}\n        indeterminate={indeterminate}\n        onChange={onIndeterminateChange}>\n        Indeterminate\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        disabled={true}>\n        Disabled\n      </CheckBox>\n\n      <CheckBox\n        style={styles.checkbox}\n        disabled={true}\n        checked={true}>\n        Checked Disabled\n      </CheckBox>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  checkbox: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Icon, Layout } from '@ui-kitten/components';\n\nconst CalendarIcon = (props) => (\n  <Icon {...props} name='calendar'/>\n);\n\nexport const DatepickerAccessoriesShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Datepicker\n        label='Label'\n        caption='Caption'\n        placeholder='Pick Date'\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n        accessoryRight={CalendarIcon}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 360,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Datepicker, Layout, Text } from '@ui-kitten/components';\n\nconst DayCell = ({ date }, style) => (\n  <View style={[styles.dayContainer, style.container]}>\n    <Text style={style.text}>\n      {date.getDate()}\n    </Text>\n    <Text style={[style.text, styles.value]}>\n      {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n    </Text>\n  </View>\n);\n\nexport const DatepickerCustomDayShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Datepicker\n        placeholder='Pick Date'\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n        renderDay={DayCell}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 360,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Datepicker, Layout } from '@ui-kitten/components';\n\nconst useDatepickerState = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nconst filter = (date) => date.getDay() !== 0 && date.getDay() !== 6;\n\nconst now = new Date();\nconst yesterday = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);\nconst tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n\nexport const DatepickerFiltersShowcase = () => {\n\n  const minMaxPickerState = useDatepickerState();\n  const filterPickerState = useDatepickerState();\n  const boundingPickerState = useDatepickerState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Datepicker\n        placeholder='Min / Max'\n        min={yesterday}\n        max={tomorrow}\n        {...minMaxPickerState}\n      />\n\n      <View style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          placeholder='Date Filter'\n          filter={filter}\n          {...filterPickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          placeholder='Bounding Month'\n          boundingMonth={false}\n          {...boundingPickerState}\n        />\n\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 360,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  picker: {\n    flex: 1,\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Datepicker, Layout, Text } from '@ui-kitten/components';\n\nconst now = new Date();\nconst date = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\nconst initialDate = new Date(now.getFullYear(), now.getMonth() + 3, now.getDate() + 1);\n\nexport const DatepickerInitialVisibleDateShowcase = () => {\n  const [ selectedDate, setSelectedDate ] = React.useState(date);\n  const [ initialVisibleDate, setInitialVisibleDate ] = React.useState(initialDate);\n\n  const componentRef = React.createRef<Datepicker>();\n\n  const scrollToSelected = () => {\n    if (componentRef.current) {\n        componentRef.current.scrollToDate(selectedDate);\n    }\n  };\n\n  const scrollToToday = () => {\n    if (componentRef.current) {\n      componentRef.current.scrollToToday();\n    }\n  };\n\n  const onSelect = (nextDate) => {\n    setSelectedDate(nextDate);\n\n    // clear initialVisibleDate to stop showing it when the datepicker is opened\n    setInitialVisibleDate(undefined);\n  };\n\n  const renderFooter = () => {\n    return (\n      <View>\n        <Button onPress={scrollToToday}>Scroll to Today</Button>\n        <Button onPress={scrollToSelected}>Scroll to Selected Date</Button>\n      </View>\n    );\n  };\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <View style={styles.calendarContainer}>\n        <Text\n          category='h6'\n          style={styles.text}>\n          Selected date: {selectedDate.toLocaleDateString()}\n        </Text>\n\n        <Datepicker\n          ref={componentRef}\n          date={selectedDate}\n          initialVisibleDate={initialVisibleDate}\n          onSelect={onSelect}\n          renderFooter={renderFooter} />\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  calendarContainer: {\n    margin: 2,\n  },\n  text: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout, NativeDateService } from '@ui-kitten/components';\n\nconst useDatepickerState = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nconst i18n = {\n  dayNames: {\n    short: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n    long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n  },\n  monthNames: {\n    short: ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    long: [\n      'Январь',\n      'Февраль',\n      'Март',\n      'Апрель',\n      'Май',\n      'Июнь',\n      'Июль',\n      'Август',\n      'Сентябрь',\n      'Октябрь',\n      'Ноябрь',\n      'Декабрь',\n    ],\n  },\n};\n\nconst localeDateService = new NativeDateService('ru', { i18n, startDayOfWeek: 1 });\nconst formatDateService = new NativeDateService('en', { format: 'DD.MM.YYYY' });\n\nexport const DatepickerLocaleSettingsShowcase = () => {\n\n  const dateFormatPickerState = useDatepickerState();\n  const localePickerState = useDatepickerState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Datepicker\n        style={styles.picker}\n        placeholder='Date Format'\n        dateService={formatDateService}\n        {...dateFormatPickerState}\n      />\n\n      <Datepicker\n        style={styles.picker}\n        placeholder='Locale'\n        dateService={localeDateService}\n        {...localePickerState}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    minHeight: 360,\n  },\n  picker: {\n    flex: 1,\n    marginHorizontal: 2,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport { Datepicker, Layout } from '@ui-kitten/components';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nconst dateService = new MomentDateService();\n\nexport const DatepickerMomentShowcase = () => {\n\n  const [date, setDate] = React.useState(moment());\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Datepicker\n        placeholder='Pick Date'\n        date={date}\n        dateService={dateService}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 360,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout, Text } from '@ui-kitten/components';\n\nexport const DatepickerSimpleUsageShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Text category='h6'>\n        Selected date: {date.toLocaleDateString()}\n      </Text>\n\n      <Datepicker\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout } from '@ui-kitten/components';\n\nconst useDatepickerState = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nexport const DatepickerSizeShowcase = () => {\n\n  const smallDatepickerState = useDatepickerState();\n  const mediumDatepickerState = useDatepickerState();\n  const largeDatepickerState = useDatepickerState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Datepicker\n        style={styles.datepicker}\n        size='small'\n        placeholder='Small'\n        {...smallDatepickerState}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        size='medium'\n        placeholder='Medium'\n        {...mediumDatepickerState}\n      />\n\n      <Datepicker\n        style={styles.datepicker}\n        size='large'\n        placeholder='Large'\n        {...largeDatepickerState}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 420,\n  },\n  datepicker: {\n    marginVertical: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Datepicker, Layout } from '@ui-kitten/components';\n\nconst useDatepickerState = (initialDate = null) => {\n  const [date, setDate] = React.useState(initialDate);\n  return { date, onSelect: setDate };\n};\n\nexport const DatepickerStatusShowcase = () => {\n\n  const primaryDatepickerState = useDatepickerState();\n  const successDatepickerState = useDatepickerState();\n  const infoDatepickerState = useDatepickerState();\n  const warningDatepickerState = useDatepickerState();\n  const dangerDatepickerState = useDatepickerState();\n  const basicDatepickerState = useDatepickerState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <View style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          status='primary'\n          placeholder='Primary'\n          {...primaryDatepickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          status='success'\n          placeholder='Success'\n          {...successDatepickerState}\n        />\n\n      </View>\n\n      <View style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          status='info'\n          placeholder='Info'\n          {...infoDatepickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          status='warning'\n          placeholder='Warning'\n          {...warningDatepickerState}\n        />\n\n      </View>\n\n      <View style={styles.rowContainer}>\n\n        <Datepicker\n          style={styles.picker}\n          status='danger'\n          placeholder='Danger'\n          {...dangerDatepickerState}\n        />\n\n        <Datepicker\n          style={styles.picker}\n          status='basic'\n          placeholder='Basic'\n          {...basicDatepickerState}\n        />\n\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 420,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  picker: {\n    flex: 1,\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Datepicker, Layout, Text } from '@ui-kitten/components';\n\nexport const DatepickerThemingShowcase = () => {\n\n  const [date, setDate] = React.useState(new Date());\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Text category='h6'>\n        Selected date: {date.toLocaleDateString()}\n      </Text>\n\n      <Datepicker\n        date={date}\n        onSelect={nextDate => setDate(nextDate)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, RangeDatepicker } from '@ui-kitten/components';\n\nexport const RangeDatepickerSimpleUsageShowcase = () => {\n\n  const [range, setRange] = React.useState({});\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <RangeDatepicker\n        range={range}\n        onSelect={nextRange => setRange(nextRange)}\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 360,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, Divider, Text } from '@ui-kitten/components';\n\nexport const DividerSimpleUsageShowcase = () => (\n  <React.Fragment>\n    <View style={styles.details}>\n      <Avatar size='giant' source={require('../../assets/icon.png')}/>\n      <Text style={styles.title} category='h6'>UI Kitten</Text>\n    </View>\n    <Divider/>\n    <Button style={styles.installButton}>INSTALL</Button>\n  </React.Fragment>\n);\n\nconst styles = StyleSheet.create({\n  details: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 4,\n  },\n  title: {\n    marginHorizontal: 8,\n  },\n  installButton: {\n    marginVertical: 4,\n  },\n});\n","import React from 'react';\nimport { ImageBackground, StyleSheet } from 'react-native';\nimport { Divider, Drawer, DrawerItem, Icon } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nconst Header = (props) => (\n  <React.Fragment>\n    <ImageBackground\n      style={[props.style, styles.header]}\n      source={require('../../assets/icon.png')}\n    />\n    <Divider/>\n  </React.Fragment>\n);\n\nexport const DrawerAccessoriesShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Drawer\n      header={Header}\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerItem\n        title='Users'\n        accessoryLeft={PersonIcon}\n        accessoryRight={ForwardIcon}\n      />\n      <DrawerItem\n        title='Orders'\n        accessoryLeft={BellIcon}\n        accessoryRight={ForwardIcon}\n      />\n    </Drawer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 128,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Drawer, DrawerGroup, DrawerItem, Icon } from '@ui-kitten/components';\n\nconst SmartphoneIcon = (props) => (\n  <Icon {...props} name='smartphone-outline'/>\n);\n\nconst BrowserIcon = (props) => (\n  <Icon {...props} name='browser-outline'/>\n);\n\nconst ColorPaletteIcon = (props) => (\n  <Icon {...props} name='color-palette-outline'/>\n);\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const DrawerGroupsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Drawer\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerGroup title='Akveo React Native' accessoryLeft={SmartphoneIcon}>\n        <DrawerItem title='UI Kitten' accessoryLeft={StarIcon}/>\n        <DrawerItem title='Kitten Tricks' accessoryLeft={StarIcon}/>\n      </DrawerGroup>\n      <DrawerGroup title='Akveo Angular' accessoryLeft={BrowserIcon}>\n        <DrawerItem title='Nebular' accessoryLeft={StarIcon}/>\n        <DrawerItem title='ngx-admin' accessoryLeft={StarIcon}/>\n        <DrawerItem title='UI Bakery' accessoryLeft={StarIcon}/>\n      </DrawerGroup>\n      <DrawerGroup title='Akveo Design' accessoryLeft={ColorPaletteIcon}>\n        <DrawerItem title='Eva Design System' accessoryLeft={StarIcon}/>\n        <DrawerItem title='Eva Icons' accessoryLeft={StarIcon}/>\n      </DrawerGroup>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { DrawerItem, Icon } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const DrawerItemSimpleUsageShowcase = () => (\n  <DrawerItem\n    title='Users'\n    accessoryLeft={StarIcon}\n    accessoryRight={ForwardIcon}\n  />\n);\n","import React from 'react';\nimport { Drawer, DrawerItem, Text } from '@ui-kitten/components';\n\nexport const DrawerNoMarkersShowcase = () => {\n\n  const [selectedTitle, setSelectedTitle] = React.useState('No items selected');\n\n  const onUsersPress = ({ index }) => {\n    setSelectedTitle('Users');\n  };\n\n  const onOrdersPress = ({ index }) => {\n    setSelectedTitle('Orders');\n  };\n\n  const onTransactionsPress = ({ index }) => {\n    setSelectedTitle('Transactions');\n  };\n\n  const onSettingsPress = ({ index }) => {\n    setSelectedTitle('Settings');\n  };\n\n  return (\n    <React.Fragment>\n      <Text category='h6'>{selectedTitle}</Text>\n      <Drawer>\n        <DrawerItem title='Users' onPress={onUsersPress}/>\n        <DrawerItem title='Orders' onPress={onOrdersPress}/>\n        <DrawerItem title='Transactions' onPress={onTransactionsPress}/>\n        <DrawerItem title='Settings' onPress={onSettingsPress}/>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Drawer, DrawerItem, IndexPath } from '@ui-kitten/components';\n\nexport const DrawerSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n\n  return (\n    <Drawer\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerItem title='Users'/>\n      <DrawerItem title='Orders'/>\n      <DrawerItem title='Transactions'/>\n      <DrawerItem title='Settings'/>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport { ImageBackground, StyleSheet } from 'react-native';\nimport { Divider, Drawer, DrawerItem, Icon } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nconst Header = (props) => (\n  <React.Fragment>\n    <ImageBackground\n      style={[props.style, styles.header]}\n      source={require('../../assets/icon.png')}\n    />\n    <Divider/>\n  </React.Fragment>\n);\n\nexport const DrawerThemingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Drawer\n      header={Header}\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <DrawerItem\n        title='Users'\n        accessoryLeft={PersonIcon}\n        accessoryRight={ForwardIcon}\n      />\n      <DrawerItem\n        title='Orders'\n        accessoryLeft={BellIcon}\n        accessoryRight={ForwardIcon}\n      />\n    </Drawer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    height: 128,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout } from '@ui-kitten/components';\n\nexport const IconAnimationShowcase = () => {\n\n  const zoomIconRef = React.useRef();\n  const pulseIconRef = React.useRef();\n  const shakeIconRef = React.useRef();\n  const infiniteAnimationIconRef = React.useRef();\n  const noAnimationIconRef = React.useRef();\n\n  React.useEffect(() => {\n    infiniteAnimationIconRef.current.startAnimation();\n  }, []);\n\n  const renderZoomIcon = (props) => (\n    <Icon\n      {...props}\n      ref={zoomIconRef}\n      animation='zoom'\n      name='maximize-outline'\n    />\n  );\n\n  const renderPulseIcon = (props) => (\n    <Icon\n      {...props}\n      ref={pulseIconRef}\n      animation='pulse'\n      name='activity'\n    />\n  );\n\n  const renderShakeIcon = (props) => (\n    <Icon\n      {...props}\n      ref={shakeIconRef}\n      animation='shake'\n      name='shake'\n    />\n  );\n\n  const renderInfiniteAnimationIcon = (props) => (\n    <Icon\n      {...props}\n      ref={infiniteAnimationIconRef}\n      animationConfig={{ cycles: Infinity }}\n      animation='shake'\n      name='clock-outline'\n    />\n  );\n\n  const renderNoAnimationIcon = (props) => (\n    <Icon\n      {...props}\n      ref={noAnimationIconRef}\n      animation={null}\n      name='eye'\n    />\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Button\n        style={styles.button}\n        accessoryLeft={renderZoomIcon}\n        onPress={() => zoomIconRef.current.startAnimation()}>\n        ZOOM\n      </Button>\n\n      <Button\n        appearance='outline'\n        status='success'\n        style={styles.button}\n        accessoryLeft={renderPulseIcon}\n        onPress={() => pulseIconRef.current.startAnimation()}>\n        PULSE\n      </Button>\n\n      <Button\n        appearance='ghost'\n        status='danger'\n        style={styles.button}\n        accessoryLeft={renderShakeIcon}\n        onPress={() => shakeIconRef.current.startAnimation()}>\n        SHAKE\n      </Button>\n\n      <Button\n        appearance='ghost'\n        status='info'\n        style={styles.button}\n        accessoryRight={renderInfiniteAnimationIcon}>\n        INFINITE\n      </Button>\n\n      <Button\n        appearance='ghost'\n        status='warning'\n        style={styles.button}\n        accessoryRight={renderNoAnimationIcon}>\n        NO ANIMATION\n      </Button>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Icon } from '@ui-kitten/components';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon\n    style={styles.icon}\n    fill='#8F9BB3'\n    name='star'\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    width: 32,\n    height: 32,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout } from '@ui-kitten/components';\n\nexport const IconThemingShowcase = () => {\n\n  const zoomIconRef = React.useRef();\n  const pulseIconRef = React.useRef();\n  const shakeIconRef = React.useRef();\n\n  React.useEffect(() => {\n    zoomIconRef.current.startAnimation();\n    pulseIconRef.current.startAnimation();\n    shakeIconRef.current.startAnimation();\n  }, []);\n\n  const renderZoomIcon = (props) => (\n    <Icon\n      {...props}\n      ref={zoomIconRef}\n      animationConfig={{ cycles: Infinity }}\n      animation='zoom'\n      name='maximize-outline'\n    />\n  );\n\n  const renderPulseIcon = (props) => (\n    <Icon\n      {...props}\n      ref={pulseIconRef}\n      animationConfig={{ cycles: Infinity }}\n      animation='pulse'\n      name='activity'\n    />\n  );\n\n  const renderShakeIcon = (props) => (\n    <Icon\n      {...props}\n      ref={shakeIconRef}\n      animationConfig={{ cycles: Infinity }}\n      animation='shake'\n      name='shake'\n    />\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Button\n        style={styles.button}\n        accessoryLeft={renderZoomIcon}>\n        ZOOM\n      </Button>\n\n      <Button\n        appearance='outline'\n        style={styles.button}\n        accessoryLeft={renderPulseIcon}>\n        PULSE\n      </Button>\n\n      <Button\n        appearance='ghost'\n        style={styles.button}\n        accessoryRight={renderShakeIcon}>\n        SHAKE\n      </Button>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  button: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Input,\n  Layout,\n  MenuItem,\n  OverflowMenu,\n  Select,\n  SelectItem,\n  Tooltip,\n} from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst HeartIcon = (props) => (\n  <Icon {...props} name='heart'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const IconWithinComponentsShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n  const [selectIndex, setSelectIndex] = React.useState(undefined);\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [tooltipVisible, setTooltipVisible] = React.useState(false);\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const toggleTooltip = () => {\n    setTooltipVisible(!tooltipVisible);\n  };\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderInputIcon = (props) => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon {...props} name={!secureTextEntry ? 'eye' : 'eye-off'}/>\n    </TouchableWithoutFeedback>\n  );\n\n  const renderTooltipButton = () => (\n    <Button\n      style={styles.button}\n      accessoryLeft={HeartIcon}\n      onPress={toggleTooltip}>\n      PRESS ME\n    </Button>\n  );\n\n  const renderMenuButton = () => (\n    <Button\n      style={styles.button}\n      accessoryLeft={HeartIcon}\n      onPress={toggleMenu}>\n      PRESS ME\n    </Button>\n  );\n\n  return (\n    <React.Fragment>\n\n      <Layout style={styles.inputContainer} level='1'>\n\n        <Input\n          style={styles.input}\n          placeholder='Input'\n          value={value}\n          secureTextEntry={secureTextEntry}\n          onChangeText={setValue}\n          accessoryRight={renderInputIcon}\n        />\n\n        <Select\n          style={styles.input}\n          placeholder='Select'\n          selectedIndex={selectIndex}\n          accessoryLeft={StarIcon}\n          onSelect={index => setSelectIndex(index)}>\n          <SelectItem accessoryLeft={HeartIcon} title='Option 1'/>\n          <SelectItem accessoryLeft={HeartIcon} title='Option 2'/>\n          <SelectItem accessoryLeft={HeartIcon} title='Option 3'/>\n        </Select>\n\n      </Layout>\n\n      <OverflowMenu\n        fullWidth={true}\n        onSelect={toggleMenu}\n        visible={menuVisible}\n        anchor={renderMenuButton}\n        onBackdropPress={toggleMenu}>\n        <MenuItem title='Menu Option 1' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Menu Option 2' accessoryRight={ForwardIcon}/>\n      </OverflowMenu>\n\n      <Layout style={styles.buttonContainer} level='1'>\n\n        <Tooltip\n          anchor={renderTooltipButton}\n          visible={tooltipVisible}\n          accessoryLeft={StarIcon}\n          onBackdropPress={toggleTooltip}>\n          Hi!\n        </Tooltip>\n\n        <Button\n          style={styles.button}\n          appearance='ghost'\n          accessoryLeft={StarIcon}\n        />\n\n      </Layout>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n  },\n  input: {\n    flex: 1,\n    margin: 2,\n  },\n  button: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native';\nimport { Icon, Input, Text } from '@ui-kitten/components';\n\nconst AlertIcon = (props) => (\n  <Icon {...props} name='alert-circle-outline'/>\n);\n\nexport const InputAccessoriesShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon {...props} name={secureTextEntry ? 'eye-off' : 'eye'}/>\n    </TouchableWithoutFeedback>\n  );\n\n  const renderCaption = () => {\n    return (\n      <View style={styles.captionContainer}>\n        {AlertIcon(styles.captionIcon)}\n        <Text style={styles.captionText}>Should contain at least 8 symbols</Text>\n      </View>\n    )\n  }\n\n  return (\n    <Input\n      value={value}\n      label='Password'\n      placeholder='Place your Text'\n      caption={renderCaption}\n      accessoryRight={renderIcon}\n      secureTextEntry={secureTextEntry}\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  captionContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  captionIcon: {\n    width: 10,\n    height: 10,\n    marginRight: 5\n  },\n  captionText: {\n    fontSize: 12,\n    fontWeight: \"400\",\n    fontFamily: \"opensans-regular\",\n    color: \"#8F9BB3\",\n  }\n});\n","import React from 'react';\nimport { Input } from '@ui-kitten/components';\n\nexport const InputSimpleUsageShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Input\n      placeholder='Place your Text'\n      value={value}\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from '@ui-kitten/components';\n\nconst useInputState = (initialValue = '') => {\n  const [value, setValue] = React.useState(initialValue);\n  return { value, onChangeText: setValue };\n};\n\nexport const InputSizeShowcase = () => {\n\n  const smallInputState = useInputState();\n  const mediumInputState = useInputState();\n  const largeInputState = useInputState();\n  const multilineInputState = useInputState();\n\n  return (\n    <React.Fragment>\n\n      <Input\n        style={styles.input}\n        size='small'\n        placeholder='Small'\n        {...smallInputState}\n      />\n\n      <Input\n        style={styles.input}\n        size='medium'\n        placeholder='Medium'\n        {...mediumInputState}\n      />\n\n      <Input\n        style={styles.input}\n        size='large'\n        placeholder='Large'\n        {...largeInputState}\n      />\n\n      <Input\n        multiline={true}\n        textStyle={{ minHeight: 64 }}\n        placeholder='Multiline'\n        {...multilineInputState}\n      />\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    marginVertical: 2,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input, Layout } from '@ui-kitten/components';\n\nexport const InputStatesShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Input\n        style={styles.input}\n        value={value}\n        placeholder='Active'\n        onChangeText={nextValue => setValue(nextValue)}\n      />\n\n      <Input\n        style={styles.input}\n        disabled={true}\n        placeholder='Disabled'\n      />\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  input: {\n    flex: 1,\n    margin: 2,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Input, Layout } from '@ui-kitten/components';\n\nconst useInputState = (initialValue = '') => {\n  const [value, setValue] = React.useState(initialValue);\n  return { value, onChangeText: setValue };\n};\n\nexport const InputStatusShowcase = () => {\n\n  const primaryInputState = useInputState();\n  const successInputState = useInputState();\n  const infoInputState = useInputState();\n  const warningInputState = useInputState();\n  const dangerInputState = useInputState();\n  const basicInputState = useInputState();\n  const controlInputState = useInputState();\n\n  return (\n    <React.Fragment>\n\n      <Input\n        style={styles.input}\n        status='primary'\n        placeholder='Primary'\n        {...primaryInputState}\n      />\n\n      <Layout style={styles.rowContainer} level='1'>\n        <Input\n          style={styles.input}\n          status='success'\n          placeholder='Success'\n          {...successInputState}\n        />\n        <Input\n          style={styles.input}\n          status='info'\n          placeholder='Info'\n          {...infoInputState}\n        />\n      </Layout>\n\n      <Layout style={styles.rowContainer} level='1'>\n        <Input\n          style={styles.input}\n          status='warning'\n          placeholder='Warning'\n          {...warningInputState}\n        />\n\n        <Input\n          style={styles.input}\n          status='danger'\n          placeholder='Danger'\n          {...dangerInputState}\n        />\n      </Layout>\n\n      <Layout style={styles.rowContainer} level='1'>\n        <Input\n          style={styles.input}\n          status='basic'\n          placeholder='Basic'\n          {...basicInputState}\n        />\n\n        <View style={styles.controlContainer}>\n          <Input\n            style={styles.input}\n            status='control'\n            placeholder='Control'\n            {...controlInputState}\n          />\n        </View>\n      </Layout>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    flex: 1,\n    margin: 2,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    backgroundColor: '#3366FF',\n  },\n});\n\n","import React from 'react';\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native';\nimport { Icon, Input, Text } from '@ui-kitten/components';\n\nconst AlertIcon = (props) => (\n  <Icon {...props} name='alert-circle-outline'/>\n);\n\nexport const InputThemingShowcase = () => {\n\n  const [value, setValue] = React.useState('');\n  const [secureTextEntry, setSecureTextEntry] = React.useState(true);\n\n  const toggleSecureEntry = () => {\n    setSecureTextEntry(!secureTextEntry);\n  };\n\n  const renderIcon = (props) => (\n    <TouchableWithoutFeedback onPress={toggleSecureEntry}>\n      <Icon {...props} name={secureTextEntry ? 'eye-off' : 'eye'}/>\n    </TouchableWithoutFeedback>\n  );\n\n  const renderCaption = () => {\n    return (\n      <View style={styles.captionContainer}>\n        {AlertIcon(styles.captionIcon)}\n        <Text style={styles.captionText}>Should contain at least 8 symbols</Text>\n      </View>\n    )\n  }\n\n  return (\n    <Input\n      value={value}\n      label='Password'\n      placeholder='Place your Text'\n      caption={renderCaption}\n      accessoryRight={renderIcon}\n      secureTextEntry={secureTextEntry}\n      onChangeText={nextValue => setValue(nextValue)}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  captionContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  captionIcon: {\n    width: 10,\n    height: 10,\n    marginRight: 5\n  },\n  captionText: {\n    fontSize: 12,\n    fontWeight: \"400\",\n    fontFamily: \"opensans-regular\",\n    color: \"#8F9BB3\",\n  }\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text } from '@ui-kitten/components';\n\nexport const LayoutLevelShowcase = () => (\n  <Layout style={styles.container}>\n\n    <Layout style={styles.layout} level='4'>\n      <Text>4</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='3'>\n      <Text>3</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='2'>\n      <Text>2</Text>\n    </Layout>\n\n    <Layout style={styles.layout} level='1'>\n      <Text>1</Text>\n    </Layout>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  layout: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Button, Icon, List, ListItem } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nconst data = new Array(8).fill({\n  title: 'Title for Item',\n  description: 'Description for Item',\n});\n\nexport const ListAccessoriesShowcase = () => {\n\n  const renderItemAccessory = (props) => (\n    <Button size='tiny'>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (props) => (\n    <Icon {...props} name='person'/>\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      accessoryLeft={renderItemIcon}\n      accessoryRight={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      style={styles.container}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 192,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, List, Text } from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Item',\n});\n\nexport const ListCustomItemShowcase = () => {\n\n  const renderItemHeader = (headerProps, info) => (\n    <View {...headerProps}>\n      <Text category='h6'>\n        {info.item.title} {info.index + 1}\n      </Text>\n    </View>\n  );\n\n  const renderItemFooter = (footerProps) => (\n    <Text {...footerProps}>\n      By Wikipedia\n    </Text>\n  );\n\n  const renderItem = (info) => (\n    <Card\n      style={styles.item}\n      status='basic'\n      header={headerProps => renderItemHeader(headerProps, info)}\n      footer={renderItemFooter}>\n      <Text>\n        Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\n        standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n        a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting,\n        remaining essentially unchanged.\n      </Text>\n    </Card>\n  );\n\n  return (\n    <List\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 320,\n  },\n  contentContainer: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n  },\n  item: {\n    marginVertical: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Divider, List, ListItem } from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Item',\n  description: 'Description for Item',\n});\n\nexport const ListDividersShowcase = () => {\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      style={styles.container}\n      data={data}\n      ItemSeparatorComponent={Divider}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 200,\n  },\n});\n","import React from 'react';\nimport { Avatar, Button, ListItem } from '@ui-kitten/components';\n\nconst InstallButton = (props) => (\n  <Button size='tiny'>\n    INSTALL\n  </Button>\n);\n\nconst ItemImage = (props) => (\n  <Avatar\n    {...props}\n    style={[props.style, { tintColor: null }]}\n    source={require('../../assets/icon.png')}\n  />\n);\n\nexport const ListItemSimpleUsageShowcase = () => (\n  <ListItem\n    title='UI Kitten'\n    description='A set of React Native components'\n    accessoryLeft={ItemImage}\n    accessoryRight={InstallButton}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, ListItem } from '@ui-kitten/components';\n\nconst data = new Array(8).fill({\n  title: 'Item',\n});\n\nexport const ListSimpleUsageShowcase = () => {\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  return (\n    <List\n      style={styles.container}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 180,\n  },\n});\n","import React from 'react';\nimport { Icon, Layout, Menu, MenuItem } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nconst useMenuState = (initialState = null) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const MenuAccessoriesShowcase = () => {\n\n  const leftMenuState = useMenuState();\n  const rightMenuState = useMenuState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Menu style={styles.menu} {...leftMenuState}>\n        <MenuItem title='Users' accessoryLeft={StarIcon}/>\n        <MenuItem title='Orders' accessoryLeft={StarIcon}/>\n        <MenuItem title='Transactions' accessoryLeft={StarIcon}/>\n      </Menu>\n\n      <Menu style={styles.menu} {...rightMenuState}>\n        <MenuItem title='Users' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Orders' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Transactions' accessoryRight={ForwardIcon}/>\n      </Menu>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  menu: {\n    flex: 1,\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { Icon, Layout, Menu, MenuItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const MenuDisabledOptionsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <Layout level='1'>\n\n      <Menu\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <MenuItem\n          title='Users'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <MenuItem\n          title='Orders'\n          disabled={true}\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <MenuItem\n          title='Transactions'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n      </Menu>\n\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { Icon, Menu, MenuGroup, MenuItem } from '@ui-kitten/components';\n\nconst SmartphoneIcon = (props) => (\n  <Icon {...props} name='smartphone-outline'/>\n);\n\nconst BrowserIcon = (props) => (\n  <Icon {...props} name='browser-outline'/>\n);\n\nconst ColorPaletteIcon = (props) => (\n  <Icon {...props} name='color-palette-outline'/>\n);\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const MenuGroupsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  return (\n    <React.Fragment>\n\n      <Menu\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <MenuGroup title='Akveo React Native' accessoryLeft={SmartphoneIcon}>\n          <MenuItem title='UI Kitten' accessoryLeft={StarIcon}/>\n          <MenuItem title='Kitten Tricks' accessoryLeft={StarIcon}/>\n        </MenuGroup>\n        <MenuGroup title='Akveo Angular' accessoryLeft={BrowserIcon}>\n          <MenuItem title='Nebular' accessoryLeft={StarIcon}/>\n          <MenuItem title='ngx-admin' accessoryLeft={StarIcon}/>\n          <MenuItem title='UI Bakery' accessoryLeft={StarIcon}/>\n        </MenuGroup>\n        <MenuGroup title='Akveo Design' accessoryLeft={ColorPaletteIcon}>\n          <MenuItem title='Eva Design System' accessoryLeft={StarIcon}/>\n          <MenuItem title='Eva Icons' accessoryLeft={StarIcon}/>\n        </MenuGroup>\n      </Menu>\n\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Icon, MenuItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const MenuItemSimpleUsageShowcase = () => (\n  <MenuItem\n    title='Users'\n    accessoryLeft={StarIcon}\n    accessoryRight={ForwardIcon}\n  />\n);\n","import React from 'react';\nimport { Menu, MenuItem, Text } from '@ui-kitten/components';\n\nexport const MenuNoMarkersShowcase = () => {\n\n  const [selectedTitle, setSelectedTitle] = React.useState('No items selected');\n\n  const onUsersPress = ({ index }) => {\n    setSelectedTitle('Users');\n  };\n\n  const onOrdersPress = ({ index }) => {\n    setSelectedTitle('Orders');\n  };\n\n  const onTransactionsPress = ({ index }) => {\n    setSelectedTitle('Transactions');\n  };\n\n  const onSettingsPress = ({ index }) => {\n    setSelectedTitle('Settings');\n  };\n\n  return (\n    <React.Fragment>\n      <Text category='h6'>{selectedTitle}</Text>\n      <Menu>\n        <MenuItem title='Users' onPress={onUsersPress}/>\n        <MenuItem title='Orders' onPress={onOrdersPress}/>\n        <MenuItem title='Transactions' onPress={onTransactionsPress}/>\n        <MenuItem title='Settings' onPress={onSettingsPress}/>\n      </Menu>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { IndexPath, Menu, MenuItem } from '@ui-kitten/components';\n\nexport const MenuSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n\n  return (\n    <Menu\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <MenuItem title='Users'/>\n      <MenuItem title='Orders'/>\n      <MenuItem title='Transactions'/>\n      <MenuItem title='Settings'/>\n    </Menu>\n  );\n};\n","import React from 'react';\nimport { Icon, Layout, Menu, MenuItem } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nconst useMenuState = (initialState = null) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const MenuThemingShowcase = () => {\n\n  const leftMenuState = useMenuState();\n  const rightMenuState = useMenuState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Menu style={styles.menu} {...leftMenuState}>\n        <MenuItem title='Users' accessoryLeft={StarIcon}/>\n        <MenuItem title='Orders' accessoryLeft={StarIcon}/>\n        <MenuItem title='Transactions' accessoryLeft={StarIcon}/>\n      </Menu>\n\n      <Menu style={styles.menu} {...rightMenuState}>\n        <MenuItem title='Users' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Orders' accessoryRight={ForwardIcon}/>\n        <MenuItem title='Transactions' accessoryRight={ForwardIcon}/>\n      </Menu>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  menu: {\n    flex: 1,\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Card, Layout, Modal, Text } from '@ui-kitten/components';\n\nexport const ModalSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Button onPress={() => setVisible(true)}>\n        TOGGLE MODAL\n      </Button>\n\n      <Modal visible={visible}>\n        <Card disabled={true}>\n          <Text>Welcome to UI Kitten 😻</Text>\n          <Button onPress={() => setVisible(false)}>\n            DISMISS\n          </Button>\n        </Card>\n      </Modal>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, Card, Modal, Text } from '@ui-kitten/components';\n\nexport const ModalWithBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <View style={styles.container}>\n\n      <Button onPress={() => setVisible(true)}>\n        TOGGLE MODAL\n      </Button>\n\n      <Modal\n        visible={visible}\n        backdropStyle={styles.backdrop}\n        onBackdropPress={() => setVisible(false)}>\n        <Card disabled={true}>\n          <Text>Welcome to UI Kitten 😻</Text>\n          <Button onPress={() => setVisible(false)}>\n            DISMISS\n          </Button>\n        </Card>\n      </Modal>\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Icon, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nexport const OverflowMenuAccessoriesShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onSelect = (index) => {\n    setSelectedIndex(index);\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        selectedIndex={selectedIndex}\n        onSelect={onSelect}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users' accessoryLeft={StarIcon}/>\n        <MenuItem title='Orders' accessoryLeft={StarIcon}/>\n        <MenuItem title='Transactions' accessoryLeft={StarIcon}/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuFullWidthShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [visible, setVisible] = React.useState(false);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        fullWidth={true}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu, Text } from '@ui-kitten/components';\n\nexport const OverflowMenuNoMarkersShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [selectedTitle, setSelectedTitle] = React.useState('No items selected');\n\n  const onUsersPress = ({ index }) => {\n    setSelectedTitle('Users');\n    setVisible(false);\n  };\n\n  const onOrdersPress = ({ index }) => {\n    setSelectedTitle('Orders');\n    setVisible(false);\n  };\n\n  const onTransactionsPress = ({ index }) => {\n    setSelectedTitle('Transactions');\n    setVisible(false);\n  };\n\n  const onSettingsPress = ({ index }) => {\n    setSelectedTitle('Settings');\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <Text category='h6'>{selectedTitle}</Text>\n      <OverflowMenu\n        visible={visible}\n        anchor={renderToggleButton}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users' onPress={onUsersPress}/>\n        <MenuItem title='Orders' onPress={onOrdersPress}/>\n        <MenuItem title='Transactions' onPress={onTransactionsPress}/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, IndexPath, Layout, MenuItem, OverflowMenu, Select, SelectItem } from '@ui-kitten/components';\n\nconst placements = [\n  'top',\n  'top start',\n  'top end',\n  'bottom',\n  'bottom start',\n  'bottom end',\n  'left',\n  'left start',\n  'left end',\n  'right',\n  'right start',\n  'right end',\n];\n\nexport const OverflowMenuPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placementIndex, setPlacementIndex] = React.useState(new IndexPath(1, 0));\n  const placement = placements[placementIndex.row];\n\n  const onPlacementSelect = (index) => {\n    setPlacementIndex(index);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  const renderPlacementItem = (title) => (\n    <SelectItem title={title}/>\n  );\n\n  return (\n    <React.Fragment>\n\n      <Select\n        placeholder='Select Placement'\n        value={placement}\n        selectedIndex={placementIndex}\n        onSelect={onPlacementSelect}>\n        {placements.map(renderPlacementItem)}\n      </Select>\n\n      <View style={styles.buttonContainer}>\n\n        <OverflowMenu\n          anchor={renderToggleButton}\n          visible={visible}\n          placement={placement}\n          onBackdropPress={() => setVisible(false)}>\n          <MenuItem title='Users'/>\n          <MenuItem title='Orders'/>\n          <MenuItem title='Transactions'/>\n        </OverflowMenu>\n\n      </View>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 80,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [visible, setVisible] = React.useState(false);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nconst data = [\n  { title: 'Menu Item 1' },\n  { title: 'Menu Item 2' },\n  { title: 'Menu Item 3' },\n  { title: 'Menu Item 4' },\n];\n\nexport const OverflowMenuStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        backdropStyle={styles.backdrop}\n        visible={visible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuWithDisabledItemsShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <OverflowMenu\n        anchor={renderToggleButton}\n        visible={visible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders' disabled={true}/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Layout, MenuItem, OverflowMenu } from '@ui-kitten/components';\n\nexport const OverflowMenuWithoutDividerShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\n  const [visible, setVisible] = React.useState(false);\n\n  const onItemSelect = (index) => {\n    setSelectedIndex(index);\n    setVisible(false);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE MENU\n    </Button>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <OverflowMenu\n        appearance='noDivider'\n        anchor={renderToggleButton}\n        visible={visible}\n        selectedIndex={selectedIndex}\n        onSelect={onItemSelect}\n        onBackdropPress={() => setVisible(false)}>\n        <MenuItem title='Users'/>\n        <MenuItem title='Orders'/>\n        <MenuItem title='Transactions'/>\n      </OverflowMenu>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 144,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Button, Layout, Popover, Text } from '@ui-kitten/components';\n\nexport const PopoverFullWidthShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  return (\n    <Popover\n      visible={visible}\n      anchor={renderToggleButton}\n      fullWidth={true}\n      onBackdropPress={() => setVisible(false)}>\n      <Layout style={styles.content}>\n        <Avatar\n          style={styles.avatar}\n          source={require('../../assets/icon.png')}/>\n        <Text>\n          Welcome to UI Kitten 😻\n        </Text>\n      </Layout>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n  },\n  avatar: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Button, IndexPath, Layout, Popover, Select, SelectItem, Text } from '@ui-kitten/components';\n\nconst placements = [\n  'top',\n  'top start',\n  'top end',\n  'bottom',\n  'bottom start',\n  'bottom end',\n  'left',\n  'left start',\n  'left end',\n  'right',\n  'right start',\n  'right end',\n];\n\nexport const PopoverPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placementIndex, setPlacementIndex] = React.useState(new IndexPath(4));\n  const placement = placements[placementIndex.row];\n\n  const onPlacementSelect = (index) => {\n    setPlacementIndex(index);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  const renderPlacementItem = (title) => (\n    <SelectItem title={title}/>\n  );\n\n  return (\n    <React.Fragment>\n\n      <Select\n        placeholder='Select Placement'\n        value={placement}\n        selectedIndex={placementIndex}\n        onSelect={onPlacementSelect}>\n        {placements.map(renderPlacementItem)}\n      </Select>\n\n      <View style={styles.buttonContainer}>\n\n        <Popover\n          anchor={renderToggleButton}\n          visible={visible}\n          placement={placement}\n          onBackdropPress={() => setVisible(false)}>\n          <Layout style={styles.content}>\n            <Avatar\n              style={styles.avatar}\n              source={require('../../assets/icon.png')}/>\n            <Text>\n              Welcome to UI Kitten 😻\n            </Text>\n          </Layout>\n        </Popover>\n\n      </View>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 64,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n  },\n  avatar: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Button, Layout, Popover, Text } from '@ui-kitten/components';\n\nexport const PopoverSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  return (\n    <Popover\n      visible={visible}\n      anchor={renderToggleButton}\n      onBackdropPress={() => setVisible(false)}>\n      <Layout style={styles.content}>\n        <Avatar\n          style={styles.avatar}\n          source={require('../../assets/icon.png')}/>\n        <Text>\n          Welcome to UI Kitten 😻\n        </Text>\n      </Layout>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n  },\n  avatar: {\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Avatar, Button, Layout, Popover, Text } from '@ui-kitten/components';\n\nexport const PopoverStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE POPOVER\n    </Button>\n  );\n\n  return (\n    <Popover\n      backdropStyle={styles.backdrop}\n      visible={visible}\n      anchor={renderToggleButton}\n      onBackdropPress={() => setVisible(false)}>\n      <Layout style={styles.content}>\n        <Avatar\n          style={styles.avatar}\n          source={require('../../assets/icon.png')}/>\n        <Text>\n          Welcome to UI Kitten 😻\n        </Text>\n      </Layout>\n    </Popover>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    paddingVertical: 8,\n  },\n  avatar: {\n    marginHorizontal: 4,\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Radio } from '@ui-kitten/components';\n\nexport const RadioSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <Radio\n      checked={checked}\n      onChange={nextChecked => setChecked(nextChecked)}>\n      {`Checked: ${checked}`}\n    </Radio>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Radio } from '@ui-kitten/components';\n\nexport const RadioStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Radio\n        style={styles.radio}\n        checked={activeChecked}\n        onChange={nextChecked => setActiveChecked(nextChecked)}>\n        Active\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        disabled={true}>\n        Disabled\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        checked={true}\n        disabled={true}>\n        Checked Disabled\n      </Radio>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 2,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Radio } from '@ui-kitten/components';\n\nconst useRadioState = (initialCheck = false) => {\n  const [checked, setChecked] = React.useState(initialCheck);\n  return { checked, onChange: setChecked };\n};\n\nexport const RadioStatusShowcase = () => {\n\n  const primaryRadioState = useRadioState();\n  const successRadioState = useRadioState();\n  const infoRadioState = useRadioState();\n  const warningRadioState = useRadioState();\n  const dangerRadioState = useRadioState();\n  const basicRadioState = useRadioState();\n  const controlRadioState = useRadioState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Radio\n        style={styles.radio}\n        status='primary'\n        {...primaryRadioState}>\n        Primary\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='success'\n        {...successRadioState}>\n        Success\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='info'\n        {...infoRadioState}>\n        Info\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='warning'\n        {...warningRadioState}>\n        Warning\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='danger'\n        {...dangerRadioState}>\n        Danger\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        status='basic'\n        {...basicRadioState}>\n        Basic\n      </Radio>\n\n      <View style={styles.controlContainer}>\n        <Radio\n          style={styles.radio}\n          status='control'\n          {...controlRadioState}>\n          Control\n        </Radio>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Radio } from '@ui-kitten/components';\n\nexport const RadioThemingShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(true);\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Radio\n        style={styles.radio}\n        checked={activeChecked}\n        onChange={nextChecked => setActiveChecked(nextChecked)}>\n        Active\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        disabled={true}>\n        Disabled\n      </Radio>\n\n      <Radio\n        style={styles.radio}\n        checked={true}\n        disabled={true}>\n        Checked Disabled\n      </Radio>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  radio: {\n    margin: 2,\n  },\n});\n\n","import React from 'react';\nimport { Radio, RadioGroup, Text } from '@ui-kitten/components';\n\nexport const RadioGroupSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <React.Fragment>\n\n      <Text category='h6'>\n        {`Selected Option: ${selectedIndex + 1}`}\n      </Text>\n\n      <RadioGroup\n        selectedIndex={selectedIndex}\n        onChange={index => setSelectedIndex(index)}>\n        <Radio>Option 1</Radio>\n        <Radio>Option 2</Radio>\n        <Radio>Option 3</Radio>\n      </RadioGroup>\n\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Icon, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const SelectAccessoriesShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <Select\n        label='Label'\n        caption='Caption'\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectItem\n          title='Option 1'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <SelectItem\n          title='Option 2'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <SelectItem\n          title='Option 3'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 128,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectDisabledOptionsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <Select\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectItem title='Option 1'/>\n        <SelectItem disabled={true} title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 128,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectGroup, SelectItem } from '@ui-kitten/components';\n\nconst data = [\n  'Developer',\n  'Designer',\n  'Product Manager',\n];\n\nconst groupedData = {\n  'UI/UX': [\n    'Frontend Developer',\n    'Designer',\n  ],\n  'Management': [\n    'Product Manager',\n    'Business Analyst',\n  ],\n};\n\nexport const SelectDisplayValueShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n  const [multiSelectedIndex, setMultiSelectedIndex] = React.useState([\n    new IndexPath(0, 0),\n    new IndexPath(1, 1),\n  ]);\n\n  const displayValue = data[selectedIndex.row];\n  const groupDisplayValues = multiSelectedIndex.map(index => {\n    const groupTitle = Object.keys(groupedData)[index.section];\n    return groupedData[groupTitle][index.row];\n  });\n\n  const renderOption = (title) => (\n    <SelectItem title={title}/>\n  );\n\n  const renderGroup = (title) => (\n    <SelectGroup title={title}>\n      {groupedData[title].map(renderOption)}\n    </SelectGroup>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Select\n        style={styles.select}\n        placeholder='Default'\n        value={displayValue}\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        {data.map(renderOption)}\n      </Select>\n\n      <Select\n        style={styles.select}\n        multiSelect={true}\n        placeholder='Multi'\n        value={groupDisplayValues.join(', ')}\n        selectedIndex={multiSelectedIndex}\n        onSelect={index => setMultiSelectedIndex(index)}>\n        {Object.keys(groupedData).map(renderGroup)}\n      </Select>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 192,\n  },\n  select: {\n    flex: 1,\n    margin: 2,\n  },\n});\n\n","import React from 'react';\nimport { Icon, SelectItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const SelectItemSimpleUsageShowcase = () => (\n  <SelectItem\n    accessoryLeft={StarIcon}\n    accessoryRight={ForwardIcon}\n    title='Option 1'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectMultiSelectShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState([\n    new IndexPath(0),\n    new IndexPath(1),\n  ]);\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <Select\n        multiSelect={true}\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 128,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <Select\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 128,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst useSelectState = (initialState = undefined) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const SelectSizeShowcase = () => {\n\n  const smallSelectState = useSelectState();\n  const mediumSelectState = useSelectState();\n  const largeSelectState = useSelectState();\n\n  return (\n    <React.Fragment>\n\n      <Select\n        style={styles.select}\n        size='small'\n        placeholder='Small'\n        {...smallSelectState}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Select\n        style={styles.select}\n        size='medium'\n        placeholder='Medium'\n        {...mediumSelectState}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Select\n        style={styles.select}\n        size='large'\n        placeholder='Large'\n        {...largeSelectState}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  select: {\n    marginVertical: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nexport const SelectStatesShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Select\n        style={styles.select}\n        placeholder='Active'\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Select\n        style={styles.select}\n        placeholder='Disabled'\n        disabled={true}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 128,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst useSelectState = (initialState = undefined) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\nexport const SelectStatusShowcase = () => {\n\n  const primarySelectState = useSelectState();\n  const successSelectState = useSelectState();\n  const infoSelectState = useSelectState();\n  const warningSelectState = useSelectState();\n  const dangerSelectState = useSelectState();\n  const basicSelectState = useSelectState();\n  const controlSelectState = useSelectState();\n\n  return (\n    <React.Fragment>\n\n      <Select\n        style={styles.select}\n        status='primary'\n        placeholder='Primary'\n        {...primarySelectState}>\n        <SelectItem title='Option 1'/>\n        <SelectItem title='Option 2'/>\n        <SelectItem title='Option 3'/>\n      </Select>\n\n      <Layout style={styles.rowContainer} level='1'>\n\n        <Select\n          style={styles.select}\n          status='success'\n          placeholder='Success'\n          {...successSelectState}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n        <Select\n          style={styles.select}\n          status='info'\n          placeholder='Info'\n          {...infoSelectState}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n      </Layout>\n\n      <Layout style={styles.rowContainer} level='1'>\n\n        <Select\n          style={styles.select}\n          status='warning'\n          placeholder='Warning'\n          {...warningSelectState}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n        <Select\n          style={styles.select}\n          status='danger'\n          placeholder='Danger'\n          {...dangerSelectState}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n      </Layout>\n\n      <Layout style={styles.rowContainer} level='1'>\n\n        <Select\n          style={styles.select}\n          status='basic'\n          placeholder='Basic'\n          {...basicSelectState}>\n          <SelectItem title='Option 1'/>\n          <SelectItem title='Option 2'/>\n          <SelectItem title='Option 3'/>\n        </Select>\n\n        <View style={styles.controlContainer}>\n          <Select\n            style={styles.select}\n            status='control'\n            placeholder='Control'\n            {...controlSelectState}>\n            <SelectItem title='Option 1'/>\n            <SelectItem title='Option 2'/>\n            <SelectItem title='Option 3'/>\n          </Select>\n        </View>\n\n      </Layout>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  select: {\n    flex: 1,\n    margin: 2,\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 2,\n    padding: 6,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Icon, Layout, Select, SelectItem } from '@ui-kitten/components';\n\nconst StarIcon = (props) => (\n  <Icon {...props} name='star'/>\n);\n\nconst ForwardIcon = (props) => (\n  <Icon {...props} name='arrow-ios-forward'/>\n);\n\nexport const SelectThemingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <Select\n        label='Label'\n        caption='Caption'\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectItem\n          title='Option 1'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <SelectItem\n          title='Option 2'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n        <SelectItem\n          title='Option 3'\n          accessoryLeft={StarIcon}\n          accessoryRight={ForwardIcon}\n        />\n      </Select>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 128,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { IndexPath, Layout, Select, SelectGroup, SelectItem } from '@ui-kitten/components';\n\nexport const SelectWithGroupsShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0, 1));\n  const [multiSelectedIndex, setMultiSelectedIndex] = React.useState([\n    new IndexPath(0, 0),\n    new IndexPath(1, 1),\n  ]);\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Select\n        style={styles.select}\n        placeholder='Default'\n        selectedIndex={selectedIndex}\n        onSelect={index => setSelectedIndex(index)}>\n        <SelectGroup title='Group 1'>\n          <SelectItem title='Option 1.1'/>\n          <SelectItem title='Option 1.2'/>\n          <SelectItem title='Option 1.3'/>\n        </SelectGroup>\n        <SelectGroup title='Group 2'>\n          <SelectItem title='Option 2.1'/>\n          <SelectItem title='Option 2.2'/>\n          <SelectItem title='Option 2.3'/>\n        </SelectGroup>\n      </Select>\n\n      <Select\n        style={styles.select}\n        multiSelect={true}\n        placeholder='Multi'\n        selectedIndex={multiSelectedIndex}\n        onSelect={index => setMultiSelectedIndex(index)}>\n        <SelectGroup title='Group 1'>\n          <SelectItem title='Option 1.1'/>\n          <SelectItem title='Option 1.2'/>\n          <SelectItem title='Option 1.3'/>\n        </SelectGroup>\n        <SelectGroup title='Group 2'>\n          <SelectItem title='Option 2.1'/>\n          <SelectItem title='Option 2.2'/>\n          <SelectItem title='Option 2.3'/>\n        </SelectGroup>\n      </Select>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    height: 192,\n  },\n  select: {\n    flex: 1,\n    margin: 2,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { List, ListItem, Spinner } from '@ui-kitten/components';\n\nconst DATA = new Array(8).fill({\n  title: 'Title for Item',\n});\n\nexport const SpinnerDataLoadingShowcase = () => {\n\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    setTimeout(loadData, 5000);\n  }, []);\n\n  const loadData = () => {\n    setData(DATA);\n  };\n\n  const renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  const renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  const renderData = () => (\n    <List\n      data={data}\n      renderItem={renderDataItem}\n    />\n  );\n\n  return data.length > 0 ? renderData() : renderLoading();\n};\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Spinner } from '@ui-kitten/components';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Spinner } from '@ui-kitten/components';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Spinner size='tiny'/>\n\n    <Spinner size='small'/>\n\n    <Spinner size='medium'/>\n\n    <Spinner size='large'/>\n\n    <Spinner size='giant'/>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Spinner } from '@ui-kitten/components';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Spinner status='primary'/>\n\n    <Spinner status='success'/>\n\n    <Spinner status='info'/>\n\n    <Spinner status='warning'/>\n\n    <Spinner status='danger'/>\n\n    <Spinner status='basic'/>\n\n    <View style={styles.controlContainer}>\n      <Spinner status='control'/>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n  },\n  controlContainer: {\n    borderRadius: 4,\n    padding: 12,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { Spinner } from '@ui-kitten/components';\n\nexport const SpinnerThemingShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { styled } from '@ui-kitten/components';\n\n@styled('StyledComponent')\nclass StyledComponent extends React.Component {\n  render() {\n    return (\n      <TouchableOpacity style={this.props.eva.style}/>\n    );\n  }\n}\n\n// mapping.json\n// {\n//   \"StyledComponent\": {\n//     \"meta\": {\n//       \"parameters\": {\n//         \"width\": {\n//           \"type\": \"number\"\n//         },\n//         \"height\": {\n//           \"type\": \"number\"\n//         },\n//         \"backgroundColor\": {\n//           \"type\": \"string\"\n//         }\n//       },\n//       \"appearances\": {\n//         \"default\": {\n//           \"default\": true\n//         }\n//       },\n//       \"variantGroups\": {},\n//       \"states\": {}\n//     },\n//     \"appearances\": {\n//       \"default\": {\n//         \"mapping\": {\n//           \"width\": 32,\n//             \"height\": 32,\n//             \"backgroundColor\": \"color-primary-default\"\n//         }\n//       }\n//     }\n//   }\n// }\n\nexport const StyledComponentSimpleUsageShowcase = StyledComponent;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Interaction, styled } from '@ui-kitten/components';\n\n@styled('StyledComponent')\nclass StyledComponent extends React.Component {\n\n  onPressIn = () => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n  };\n\n  onPressOut = () => {\n    this.props.eva.dispatch([]);\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        style={this.props.eva.style}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      />\n    );\n  }\n}\n\n// mapping.json\n// {\n//   \"StyledComponent\": {\n//     \"meta\": {\n//       \"parameters\": {\n//         \"width\": {\n//           \"type\": \"number\"\n//         },\n//         \"height\": {\n//           \"type\": \"number\"\n//         },\n//         \"backgroundColor\": {\n//           \"type\": \"string\"\n//         }\n//       },\n//       \"appearances\": {\n//         \"default\": {\n//           \"default\": true\n//         }\n//       },\n//       \"variantGroups\": {},\n//       \"states\": {\n//         \"active\": {\n//           \"default\": false,\n//           \"priority\": 0\n//         }\n//       }\n//     },\n//     \"appearances\": {\n//       \"default\": {\n//         \"mapping\": {\n//           \"width\": 32,\n//           \"height\": 32,\n//           \"backgroundColor\": \"color-primary-default\",\n//           \"state\": {\n//             \"active\": {\n//               \"backgroundColor\": \"color-primary-active\"\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n// };\n\nexport const StyledComponentStatesShowcase = StyledComponent;\n","import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { Interaction, styled } from '@ui-kitten/components';\n\n@styled('StyledComponent')\nclass StyledComponent extends React.Component {\n\n  onPressIn = () => {\n    this.props.eva.dispatch([Interaction.ACTIVE]);\n  };\n\n  onPressOut = () => {\n    this.props.eva.dispatch([]);\n  };\n\n  render() {\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        style={this.props.eva.style}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n      />\n    );\n  }\n}\n\n// mapping.json\n// {\n//   \"StyledComponent\": {\n//     \"meta\": {\n//       \"parameters\": {\n//         \"width\": {\n//           \"type\": \"number\"\n//         },\n//         \"height\": {\n//           \"type\": \"number\"\n//         },\n//         \"backgroundColor\": {\n//           \"type\": \"string\"\n//         }\n//       },\n//       \"appearances\": {\n//         \"default\": {\n//           \"default\": true\n//         }\n//       },\n//       \"variantGroups\": {\n//         \"status\": {\n//           \"primary\": {\n//             \"default\": true\n//           },\n//           \"danger\": {\n//             \"default\": false\n//           }\n//         }\n//       },\n//       \"states\": {\n//         \"active\": {\n//           \"default\": false,\n//             \"priority\": 0\n//         }\n//       }\n//     },\n//     \"appearances\": {\n//       \"default\": {\n//         \"mapping\": {\n//           \"width\": 40,\n//             \"height\": 40\n//         },\n//         \"variantGroups\": {\n//           \"status\": {\n//             \"primary\": {\n//               \"backgroundColor\": \"color-primary-default\",\n//                 \"state\": {\n//                 \"active\": {\n//                   \"backgroundColor\": \"color-primary-active\"\n//                 }\n//               }\n//             },\n//             \"danger\": {\n//               \"backgroundColor\": \"color-danger-default\",\n//                 \"state\": {\n//                 \"active\": {\n//                   \"backgroundColor\": \"color-danger-active\"\n//                 }\n//               }\n//             }\n//           }\n//         }\n//       }\n//     }\n//   }\n// }\n\nexport const StyledComponentVariantsShowcase = () => (\n  <StyledComponent status='danger'/>\n);\n","import React from 'react';\nimport { Icon, Tab, TabBar } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst EmailIcon = (props) => (\n  <Icon {...props} name='email-outline'/>\n);\n\nconst useTabBarState = (initialState = 0) => {\n  const [selectedIndex, setSelectedIndex] = React.useState(initialState);\n  return { selectedIndex, onSelect: setSelectedIndex };\n};\n\n\nexport const TabBarAccessoriesShowcase = () => {\n\n  const topState = useTabBarState();\n  const bottomState = useTabBarState();\n\n  return (\n    <React.Fragment>\n\n      <TabBar {...topState}>\n        <Tab icon={PersonIcon}/>\n        <Tab icon={BellIcon}/>\n        <Tab icon={EmailIcon}/>\n      </TabBar>\n\n      <TabBar {...bottomState}>\n        <Tab title='USERS' icon={PersonIcon}/>\n        <Tab title='ORDERS' icon={BellIcon}/>\n        <Tab title='TRANSACTIONS' icon={EmailIcon}/>\n      </TabBar>\n\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Tab, TabBar } from '@ui-kitten/components';\n\nexport const TabBarSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabBar\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <Tab title='USERS'/>\n      <Tab title='ORDERS'/>\n      <Tab title='TRANSACTIONS'/>\n    </TabBar>\n  );\n};\n","import React from 'react';\nimport { Icon, Tab } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nexport const TabSimpleUsageShowcase = () => (\n  <Tab title='USERS' icon={PersonIcon}/>\n);\n","import React from 'react';\nimport { Icon, Tab, TabBar } from '@ui-kitten/components';\n\nconst PersonIcon = (props) => (\n  <Icon {...props} name='person-outline'/>\n);\n\nconst BellIcon = (props) => (\n  <Icon {...props} name='bell-outline'/>\n);\n\nconst EmailIcon = (props) => (\n  <Icon {...props} name='email-outline'/>\n);\nexport const TabThemingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabBar\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <Tab icon={PersonIcon} title='USERS'/>\n      <Tab icon={BellIcon} title='ORDERS'/>\n      <Tab icon={EmailIcon} title='TRANSACTIONS'/>\n    </TabBar>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Tab, TabView, Text } from '@ui-kitten/components';\n\nexport const TabViewLazyLoadingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const shouldLoadComponent = (index) => index === selectedIndex;\n\n  return (\n    <TabView\n      selectedIndex={selectedIndex}\n      shouldLoadComponent={shouldLoadComponent}\n      onSelect={index => setSelectedIndex(index)}>\n      <Tab title='USERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>USERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>ORDERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='TRANSACTIONS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>TRANSACTIONS</Text>\n        </Layout>\n      </Tab>\n    </TabView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    height: 64,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Tab, TabView, Text } from '@ui-kitten/components';\n\nexport const TabViewSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <TabView\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <Tab title='USERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>USERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='ORDERS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>ORDERS</Text>\n        </Layout>\n      </Tab>\n      <Tab title='TRANSACTIONS'>\n        <Layout style={styles.tabContainer}>\n          <Text category='h5'>TRANSACTIONS</Text>\n        </Layout>\n      </Tab>\n    </TabView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabContainer: {\n    height: 64,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text } from '@ui-kitten/components';\n\nexport const TextAppearancesShowcase = () => (\n  <React.Fragment>\n\n    <Text style={styles.text}>\n      Default Text.\n    </Text>\n\n    <Text style={styles.text} appearance='hint'>\n      Hint Text.\n    </Text>\n\n    <View style={styles.alternativeContainer}>\n      <Text style={styles.text} appearance='alternative'>\n        Alternative Text.\n      </Text>\n    </View>\n\n  </React.Fragment>\n);\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    margin: 2,\n  },\n  alternativeContainer: {\n    borderRadius: 4,\n    marginVertical: 2,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Text } from '@ui-kitten/components';\n\nexport const TextCategoriesShowcase = () => (\n  <React.Fragment>\n\n    <View style={styles.row}>\n      <Text style={styles.text} category='h1'>H1</Text>\n      <Text style={styles.text} category='h2'>H2</Text>\n      <Text style={styles.text} category='h3'>H3</Text>\n      <Text style={styles.text} category='h4'>H4</Text>\n      <Text style={styles.text} category='h5'>H5</Text>\n      <Text style={styles.text} category='h6'>H6</Text>\n    </View>\n\n    <View style={styles.row}>\n      <Text style={styles.text} category='s1'>S1</Text>\n      <Text style={styles.text} category='s2'>S2</Text>\n    </View>\n\n    <View style={styles.row}>\n      <Text style={styles.text} category='p1'>P1</Text>\n      <Text style={styles.text} category='p2'>P2</Text>\n    </View>\n\n    <View style={styles.row}>\n      <Text style={styles.text} category='c1'>C1</Text>\n      <Text style={styles.text} category='c2'>C2</Text>\n      <Text style={styles.text} category='label'>LABEL</Text>\n    </View>\n\n  </React.Fragment>\n);\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Text } from '@ui-kitten/components';\n\nexport const TextStatusesShowcase = () => (\n  <Layout style={styles.container} level='1'>\n\n    <Text style={styles.text} status='primary'>Primary</Text>\n    <Text style={styles.text} status='success'>Success</Text>\n    <Text style={styles.text} status='info'>Info</Text>\n    <Text style={styles.text} status='warning'>Warning</Text>\n    <Text style={styles.text} status='danger'>Danger</Text>\n    <Text style={styles.text} status='basic'>Basic</Text>\n    <View style={styles.controlContainer}>\n      <Text style={styles.text} status='control'>Control</Text>\n    </View>\n\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n  },\n  text: {\n    margin: 4,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 4,\n    padding: 4,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { dark, light } from '@eva-design/eva';\nimport { Card, Layout, Text, ThemeProvider } from '@ui-kitten/components';\n\nexport const ThemeProviderSimpleUsageShowcase = () => (\n  <React.Fragment>\n\n    <ThemeProvider theme={light}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text>I use light theme</Text>\n      </Card>\n    </ThemeProvider>\n\n    <ThemeProvider theme={dark}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text>I use dark theme</Text>\n      </Card>\n    </ThemeProvider>\n\n    <ThemeProvider theme={{ ...light, 'color-primary-default': 'red' }}>\n      <Card style={{ marginVertical: 8 }}>\n        <Text status='primary'>I use custom light theme</Text>\n      </Card>\n    </ThemeProvider>\n\n  </React.Fragment>\n);\n","import React from 'react';\nimport { Toggle } from '@ui-kitten/components';\n\nexport const ToggleSimpleUsageShowcase = () => {\n\n  const [checked, setChecked] = React.useState(false);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return (\n    <Toggle checked={checked} onChange={onCheckedChange}>\n      {`Checked: ${checked}`}\n    </Toggle>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Toggle } from '@ui-kitten/components';\n\nexport const ToggleStatesShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(false);\n\n  const onActiveCheckedChange = (isChecked) => {\n    setActiveChecked(isChecked);\n  };\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Toggle\n        style={styles.toggle}\n        checked={activeChecked}\n        onChange={onActiveCheckedChange}>\n        Active\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        disabled={true}>\n        Disabled\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        checked={true}\n        disabled={true}>\n        Checked Disabled\n      </Toggle>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Toggle } from '@ui-kitten/components';\n\nconst useToggleState = (initialState = false) => {\n  const [checked, setChecked] = React.useState(initialState);\n\n  const onCheckedChange = (isChecked) => {\n    setChecked(isChecked);\n  };\n\n  return { checked, onChange: onCheckedChange };\n};\n\nexport const ToggleStatusShowcase = () => {\n\n  const primaryToggleState = useToggleState();\n  const successToggleState = useToggleState();\n  const infoToggleState = useToggleState();\n  const warningToggleState = useToggleState();\n  const dangerToggleState = useToggleState();\n  const basicToggleState = useToggleState();\n  const controlToggleState = useToggleState();\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Toggle\n        style={styles.toggle}\n        status='primary'\n        {...primaryToggleState}>\n        Primary\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='success'\n        {...successToggleState}>\n        Success\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='info'\n        {...infoToggleState}>\n        Info\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='warning'\n        {...warningToggleState}>\n        Warning\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='danger'\n        {...dangerToggleState}>\n        Danger\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        status='basic'\n        {...basicToggleState}>\n        Basic\n      </Toggle>\n\n      <View style={styles.controlContainer}>\n        <Toggle\n          style={styles.toggle}\n          status='control'\n          {...controlToggleState}>\n          Control\n        </Toggle>\n      </View>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 2,\n  },\n  controlContainer: {\n    borderRadius: 4,\n    margin: 8,\n    padding: 6,\n    backgroundColor: '#3366FF',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Toggle } from '@ui-kitten/components';\n\nexport const ToggleThemingShowcase = () => {\n\n  const [activeChecked, setActiveChecked] = React.useState(true);\n\n  const onActiveCheckedChange = (isChecked) => {\n    setActiveChecked(isChecked);\n  };\n\n  return (\n    <Layout style={styles.container} level='1'>\n\n      <Toggle\n        style={styles.toggle}\n        checked={activeChecked}\n        onChange={onActiveCheckedChange}>\n        Active\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        disabled={true}>\n        Disabled\n      </Toggle>\n\n      <Toggle\n        style={styles.toggle}\n        checked={true}\n        disabled={true}>\n        Checked Disabled\n      </Toggle>\n\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  toggle: {\n    margin: 2,\n  },\n});\n","import React from 'react';\nimport { Button, Icon, Tooltip } from '@ui-kitten/components';\n\nconst InfoIcon = (props) => (\n  <Icon {...props} name='info'/>\n);\n\nexport const TooltipAccessoriesShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      accessoryLeft={InfoIcon}\n      onBackdropPress={() => setVisible(false)}>\n      Welcome to UI Kitten 😻\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, IndexPath, Layout, Select, SelectItem, Tooltip } from '@ui-kitten/components';\n\nconst placements = [\n  'top',\n  'top start',\n  'top end',\n  'bottom',\n  'bottom start',\n  'bottom end',\n  'left',\n  'left start',\n  'left end',\n  'right',\n  'right start',\n  'right end',\n];\n\nexport const TooltipPlacementShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n  const [placementIndex, setPlacementIndex] = React.useState(new IndexPath(1, 0));\n  const placement = placements[placementIndex.row];\n\n  const onPlacementSelect = (index) => {\n    setPlacementIndex(index);\n  };\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  const renderPlacementItem = (title) => (\n    <SelectItem title={title}/>\n  );\n\n  return (\n    <React.Fragment>\n\n      <Select\n        placeholder='Select Placement'\n        value={placement}\n        selectedIndex={placementIndex}\n        onSelect={onPlacementSelect}>\n        {placements.map(renderPlacementItem)}\n      </Select>\n\n      <Layout style={styles.buttonContainer} level='1'>\n\n        <Tooltip\n          anchor={renderToggleButton}\n          visible={visible}\n          placement={placement}\n          onBackdropPress={() => setVisible(false)}>\n          Welcome to UI Kitten 😻\n        </Tooltip>\n\n      </Layout>\n\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 64,\n  },\n});\n","import React from 'react';\nimport { Button, Tooltip } from '@ui-kitten/components';\n\nexport const TooltipSimpleUsageShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      onBackdropPress={() => setVisible(false)}>\n      Welcome to UI Kitten 😻\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { Button, Tooltip } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport const TooltipStyledBackdropShowcase = () => {\n\n  const [visible, setVisible] = React.useState(false);\n\n  const renderToggleButton = () => (\n    <Button onPress={() => setVisible(true)}>\n      TOGGLE TOOLTIP\n    </Button>\n  );\n\n  return (\n    <Tooltip\n      anchor={renderToggleButton}\n      visible={visible}\n      backdropStyle={styles.backdrop}\n      onBackdropPress={() => setVisible(false)}>\n      Welcome to UI Kitten 😻\n    </Tooltip>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n","import React from 'react';\nimport { Icon, Layout, MenuItem, OverflowMenu, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nconst EditIcon = (props) => (\n  <Icon {...props} name='edit'/>\n);\n\nconst MenuIcon = (props) => (\n  <Icon {...props} name='more-vertical'/>\n);\n\nconst InfoIcon = (props) => (\n  <Icon {...props} name='info'/>\n);\n\nconst LogoutIcon = (props) => (\n  <Icon {...props} name='log-out'/>\n);\n\nexport const TopNavigationAccessoriesShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderMenuAction = () => (\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\n  );\n\n  const renderRightActions = () => (\n    <React.Fragment>\n      <TopNavigationAction icon={EditIcon}/>\n      <OverflowMenu\n        anchor={renderMenuAction}\n        visible={menuVisible}\n        onBackdropPress={toggleMenu}>\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\n      </OverflowMenu>\n    </React.Fragment>\n  );\n\n  const renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon}/>\n  );\n\n  return (\n    <Layout style={styles.container} level='1'>\n      <TopNavigation\n        alignment='center'\n        title='Eva Application'\n        subtitle='Subtitle'\n        accessoryLeft={renderBackAction}\n        accessoryRight={renderRightActions}\n      />\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 128,\n  },\n});\n","import React from 'react';\nimport { Icon, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Divider, Icon, List, ListItem, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nconst SettingsIcon = (props) => (\n  <Icon {...props} name='settings'/>\n);\n\nconst data = new Array(8).fill({\n  title: 'Title for Item',\n  description: 'Description for Item',\n});\n\nexport const TopNavigationDividerShowcase = () => {\n\n  const renderSettingsAction = () => (\n    <TopNavigationAction icon={SettingsIcon}/>\n  );\n\n  const renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon}/>\n  );\n\n  const renderItemAccessory = (props) => (\n    <Button size='tiny'>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (props) => (\n    <Icon {...props} name='person'/>\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      accessoryLeft={renderItemIcon}\n      accessoryRight={renderItemAccessory}\n    />\n  );\n\n  return (\n    <React.Fragment>\n      <TopNavigation\n        title='Eva Application'\n        accessoryLeft={renderBackAction}\n        accessoryRight={renderSettingsAction}\n      />\n      <Divider/>\n      <List\n        style={styles.container}\n        data={data}\n        renderItem={renderItem}\n      />\n    </React.Fragment>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 320,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Avatar, Icon, MenuItem, OverflowMenu, Text, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\n\n\nconst MenuIcon = (props) => (\n  <Icon {...props} name='more-vertical'/>\n);\n\nconst InfoIcon = (props) => (\n  <Icon {...props} name='info'/>\n);\n\nconst LogoutIcon = (props) => (\n  <Icon {...props} name='log-out'/>\n);\n\nexport const TopNavigationImageTitleShowcase = () => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const renderMenuAction = () => (\n    <TopNavigationAction icon={MenuIcon} onPress={toggleMenu}/>\n  );\n\n  const renderOverflowMenuAction = () => (\n    <React.Fragment>\n      <OverflowMenu\n        anchor={renderMenuAction}\n        visible={menuVisible}\n        onBackdropPress={toggleMenu}>\n        <MenuItem accessoryLeft={InfoIcon} title='About'/>\n        <MenuItem accessoryLeft={LogoutIcon} title='Logout'/>\n      </OverflowMenu>\n    </React.Fragment>\n  );\n\n  const renderTitle = (props) => (\n    <View style={styles.titleContainer}>\n      <Avatar\n        style={styles.logo}\n        source={require('../../assets/icon.png')}\n      />\n      <Text {...props}>Eva Application</Text>\n    </View>\n  );\n\n  return (\n    <TopNavigation\n      title={renderTitle}\n      accessoryRight={renderOverflowMenuAction}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  logo: {\n    marginHorizontal: 16,\n  },\n});\n","import React from 'react';\nimport { Icon, Text, TopNavigation, TopNavigationAction } from '@ui-kitten/components';\n\nconst BackIcon = (props) => (\n  <Icon {...props} name='arrow-back'/>\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    accessoryLeft={BackAction}\n    title='Eva Application'\n  />\n);\n\n\nconst TopNavigationStyling = () => (\n  <TopNavigation\n    title={evaProps => <Text {...evaProps}>Title</Text>}\n    subtitle={evaProps => <Text {...evaProps}>Subtitle</Text>}\n  />\n);\n","import React from 'react';\nimport { StyleService, Text, useStyleSheet } from '@ui-kitten/components';\nimport { View } from 'react-native';\n\nexport const UseStyleSheetSimpleUsageShowcase = () => {\n  const styles = useStyleSheet(themedStyles);\n\n  return (\n    <View style={styles.container}>\n      <Text category='h4' status='control'>\n        I use success color as background!\n      </Text>\n    </View>\n  );\n};\n\nconst themedStyles = StyleService.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'color-success-default',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\n\nexport const UseThemeSimpleUsageShowcase = () => {\n  const theme = useTheme();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme['color-primary-default'] }]}>\n      <Text category='h4' status='control'>\n        I use primary color as background!\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text, ViewPager } from '@ui-kitten/components';\n\nexport const ViewPagerLazyLoadingShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  const shouldLoadComponent = (index) => index === selectedIndex;\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      shouldLoadComponent={shouldLoadComponent}\n      onSelect={index => setSelectedIndex(index)}>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 1</Text>\n      </Layout>\n      <Layout\n        level='2'\n        style={styles.tab}>\n        <Text category='h5'>Tab 2</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout, Text, ViewPager } from '@ui-kitten/components';\n\nexport const ViewPagerSimpleUsageShowcase = () => {\n\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  return (\n    <ViewPager\n      selectedIndex={selectedIndex}\n      onSelect={index => setSelectedIndex(index)}>\n      <Layout\n        style={styles.tab}\n        level='2'>\n        <Text category='h5'>USERS</Text>\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='2'>\n        <Text category='h5'>ORDERS</Text>\n      </Layout>\n      <Layout\n        style={styles.tab}\n        level='2'>\n        <Text category='h5'>TRANSACTIONS</Text>\n      </Layout>\n    </ViewPager>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 192,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { View } from 'react-native';\nimport { Text, withStyles } from '@ui-kitten/components';\n\nconst ThemedComponent = ({ eva }) => (\n  <View style={eva.style.container}>\n    <Text\n      style={{ color: eva.theme['color-success-default'] }}\n      category='h4'>\n      I use info as background color and success as text color!\n    </Text>\n  </View>\n);\n\nexport const WithStylesSimpleUsageShowcase = withStyles(ThemedComponent, theme => ({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme['color-info-default'],\n  },\n}));\n\n","import React from 'react';\nimport { createBrowserApp } from '@react-navigation/web';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { ShowcaseIFrame } from '../components/showcaseIFrame.component';\nimport { ShowcaseThemingIFrame } from '../components/showcaseThemingIFrame.component';\nimport { AutocompleteAccessoriesShowcase } from '../components/autocomplete/autocompleteAccessories.component';\nimport { AutocompleteAsyncShowcase } from '../components/autocomplete/autocompleteAsync.component';\nimport { AutocompleteHandleKeyboardShowcase } from '../components/autocomplete/autocompleteHandleKeyboard.component';\nimport { AutocompleteSimpleUsageShowcase } from '../components/autocomplete/autocompleteSimpleUsage.component';\nimport { AvatarImageComponentShowcase } from '../components/avatar/avatarImageComponent.component';\nimport { AvatarShapeShowcase } from '../components/avatar/avatarShape.component';\nimport { AvatarSimpleUsageShowcase } from '../components/avatar/avatarSimpleUsage.component';\nimport { AvatarSizeShowcase } from '../components/avatar/avatarSize.component';\nimport { BottomNavigationAccessoriesShowcase } from '../components/bottomNavigation/bottomNavigationAccessories.component';\nimport { BottomNavigationSimpleUsageShowcase } from '../components/bottomNavigation/bottomNavigationSimpleUsage.component';\nimport { BottomNavigationTabSimpleUsageShowcase } from '../components/bottomNavigation/bottomNavigationTabSimpleUsage.component';\nimport { BottomNavigationTabThemingShowcase } from '../components/bottomNavigation/bottomNavigationTabTheming.component';\nimport { BottomNavigationWithoutIndicatorShowcase } from '../components/bottomNavigation/bottomNavigationWithoutIndicator.component';\nimport { ButtonAccessoriesShowcase } from '../components/button/buttonAccessories.component';\nimport { ButtonAppearancesShowcase } from '../components/button/buttonAppearances.component';\nimport { ButtonGhostShowcase } from '../components/button/buttonGhost.component';\nimport { ButtonOutlineShowcase } from '../components/button/buttonOutline.component';\nimport { ButtonSimpleUsageShowcase } from '../components/button/buttonSimpleUsage.component';\nimport { ButtonSizeShowcase } from '../components/button/buttonSize.component';\nimport { ButtonStatesShowcase } from '../components/button/buttonStates.component';\nimport { ButtonStatusShowcase } from '../components/button/buttonStatus.component';\nimport { ButtonThemingShowcase } from '../components/button/buttonTheming.component';\nimport { ButtonGroupAppearanceShowcase } from '../components/buttonGroup/buttonGroupAppearance.component';\nimport { ButtonGroupGhostShowcase } from '../components/buttonGroup/buttonGroupGhost.component';\nimport { ButtonGroupOutlineShowcase } from '../components/buttonGroup/buttonGroupOutline.component';\nimport { ButtonGroupSimpleUsageShowcase } from '../components/buttonGroup/buttonGroupSimpleUsage.component';\nimport { ButtonGroupSizeShowcase } from '../components/buttonGroup/buttonGroupSize.component';\nimport { ButtonGroupStatusShowcase } from '../components/buttonGroup/buttonGroupStatus.component';\nimport { ButtonGroupWithIconsShowcase } from '../components/buttonGroup/buttonGroupWithIcons.component';\nimport { CalendarCustomDayShowcase } from '../components/calendar/calendarCustomDay.component';\nimport { CalendarFiltersShowcase } from '../components/calendar/calendarFilters.component';\nimport { CalendarInitialVisibleDateShowcase } from '../components/calendar/calendarInitialVisibleDate.component';\nimport { CalendarLocaleSettingsShowcase } from '../components/calendar/calendarLocaleSettings.component';\nimport { CalendarMomentShowcase } from '../components/calendar/calendarMoment.component';\nimport { CalendarSimpleUsageShowcase } from '../components/calendar/calendarSimpleUsage.component';\nimport { CalendarThemingShowcase } from '../components/calendar/calendarTheming.component';\nimport { RangeCalendarSimpleUsageShowcase } from '../components/calendar/rangeCalendarSimpleUsage.component';\nimport { CardAccessoriesShowcase } from '../components/card/cardAccessories.component';\nimport { CardSimpleUsageShowcase } from '../components/card/cardSimpleUsage.component';\nimport { CardStatusesShowcase } from '../components/card/cardStatuses.component';\nimport { CheckboxIndeterminateShowcase } from '../components/checkbox/checkboxIndeterminate.component';\nimport { CheckboxSimpleUsageShowcase } from '../components/checkbox/checkboxSimpleUsage.component';\nimport { CheckboxStatesShowcase } from '../components/checkbox/checkboxStates.component';\nimport { CheckboxStatusShowcase } from '../components/checkbox/checkboxStatus.component';\nimport { CheckboxThemingShowcase } from '../components/checkbox/checkboxTheming.component';\nimport { DatepickerAccessoriesShowcase } from '../components/datepicker/datepickerAccessories.component';\nimport { DatepickerCustomDayShowcase } from '../components/datepicker/datepickerCustomDay.component';\nimport { DatepickerFiltersShowcase } from '../components/datepicker/datepickerFilters.component';\nimport { DatepickerInitialVisibleDateShowcase } from '../components/datepicker/datepickerInitialVisibleDate.component';\nimport { DatepickerLocaleSettingsShowcase } from '../components/datepicker/datepickerLocaleSettings.component';\nimport { DatepickerMomentShowcase } from '../components/datepicker/datepickerMoment.component';\nimport { DatepickerSimpleUsageShowcase } from '../components/datepicker/datepickerSimpleUsage.component';\nimport { DatepickerSizeShowcase } from '../components/datepicker/datepickerSize.component';\nimport { DatepickerStatusShowcase } from '../components/datepicker/datepickerStatus.component';\nimport { DatepickerThemingShowcase } from '../components/datepicker/datepickerTheming.component';\nimport { RangeDatepickerSimpleUsageShowcase } from '../components/datepicker/rangeDatepickerSimpleUsage.component';\nimport { DividerSimpleUsageShowcase } from '../components/divider/dividerSimpleUsage.component';\nimport { DrawerAccessoriesShowcase } from '../components/drawer/drawerAccessories.component';\nimport { DrawerGroupsShowcase } from '../components/drawer/drawerGroups.component';\nimport { DrawerItemSimpleUsageShowcase } from '../components/drawer/drawerItemSimpleUsage.component';\nimport { DrawerNoMarkersShowcase } from '../components/drawer/drawerNoMarkers.component';\nimport { DrawerSimpleUsageShowcase } from '../components/drawer/drawerSimpleUsage.component';\nimport { DrawerThemingShowcase } from '../components/drawer/drawerTheming.component';\nimport { IconAnimationShowcase } from '../components/icon/iconAnimation.component';\nimport { IconSimpleUsageShowcase } from '../components/icon/iconSimpleUsage.component';\nimport { IconThemingShowcase } from '../components/icon/iconTheming.component';\nimport { IconWithinComponentsShowcase } from '../components/icon/iconWithinComponents.component';\nimport { InputAccessoriesShowcase } from '../components/input/inputAccessories.component';\nimport { InputSimpleUsageShowcase } from '../components/input/inputSimpleUsage.component';\nimport { InputSizeShowcase } from '../components/input/inputSize.component';\nimport { InputStatesShowcase } from '../components/input/inputStates.component';\nimport { InputStatusShowcase } from '../components/input/inputStatus.component';\nimport { InputThemingShowcase } from '../components/input/inputTheming.component';\nimport { LayoutLevelShowcase } from '../components/layout/layoutLevel.component';\nimport { ListAccessoriesShowcase } from '../components/list/listAccessories.component';\nimport { ListCustomItemShowcase } from '../components/list/listCustomItem.component';\nimport { ListDividersShowcase } from '../components/list/listDividers.component';\nimport { ListItemSimpleUsageShowcase } from '../components/list/listItemSimpleUsage.component';\nimport { ListSimpleUsageShowcase } from '../components/list/listSimpleUsage.component';\nimport { MenuAccessoriesShowcase } from '../components/menu/menuAccessories.component';\nimport { MenuDisabledOptionsShowcase } from '../components/menu/menuDisabledOptions.component';\nimport { MenuGroupsShowcase } from '../components/menu/menuGroups.component';\nimport { MenuItemSimpleUsageShowcase } from '../components/menu/menuItemSimpleUsage.component';\nimport { MenuNoMarkersShowcase } from '../components/menu/menuNoMarkers.component';\nimport { MenuSimpleUsageShowcase } from '../components/menu/menuSimpleUsage.component';\nimport { MenuThemingShowcase } from '../components/menu/menuTheming.component';\nimport { ModalSimpleUsageShowcase } from '../components/modal/modalSimpleUsage.component';\nimport { ModalWithBackdropShowcase } from '../components/modal/modalWithBackdrop.component';\nimport { OverflowMenuAccessoriesShowcase } from '../components/overflowMenu/overflowMenuAccessories.component';\nimport { OverflowMenuFullWidthShowcase } from '../components/overflowMenu/overflowMenuFullWidth.component';\nimport { OverflowMenuNoMarkersShowcase } from '../components/overflowMenu/overflowMenuNoMarkers.component';\nimport { OverflowMenuPlacementShowcase } from '../components/overflowMenu/overflowMenuPlacement.component';\nimport { OverflowMenuSimpleUsageShowcase } from '../components/overflowMenu/overflowMenuSimpleUsage.component';\nimport { OverflowMenuStyledBackdropShowcase } from '../components/overflowMenu/overflowMenuStyledBackdrop.component';\nimport { OverflowMenuWithDisabledItemsShowcase } from '../components/overflowMenu/overflowMenuWithDisabledItems.component';\nimport { OverflowMenuWithoutDividerShowcase } from '../components/overflowMenu/overflowMenuWithoutDivider.component';\nimport { PopoverFullWidthShowcase } from '../components/popover/popoverFullWidth.component';\nimport { PopoverPlacementShowcase } from '../components/popover/popoverPlacement.component';\nimport { PopoverSimpleUsageShowcase } from '../components/popover/popoverSimpleUsage.component';\nimport { PopoverStyledBackdropShowcase } from '../components/popover/popoverStyledBackdrop.component';\nimport { RadioSimpleUsageShowcase } from '../components/radio/radioSimpleUsage.component';\nimport { RadioStatesShowcase } from '../components/radio/radioStates.component';\nimport { RadioStatusShowcase } from '../components/radio/radioStatus.component';\nimport { RadioThemingShowcase } from '../components/radio/radioTheming.component';\nimport { RadioGroupSimpleUsageShowcase } from '../components/radioGroup/radioGroupSimpleUsage.component';\nimport { SelectAccessoriesShowcase } from '../components/select/selectAccessories.component';\nimport { SelectDisabledOptionsShowcase } from '../components/select/selectDisabledOptions.component';\nimport { SelectDisplayValueShowcase } from '../components/select/selectDisplayValue.component';\nimport { SelectItemSimpleUsageShowcase } from '../components/select/selectItemSimpleUsage.component';\nimport { SelectMultiSelectShowcase } from '../components/select/selectMultiSelect.component';\nimport { SelectSimpleUsageShowcase } from '../components/select/selectSimpleUsage.component';\nimport { SelectSizeShowcase } from '../components/select/selectSize.component';\nimport { SelectStatesShowcase } from '../components/select/selectStates.component';\nimport { SelectStatusShowcase } from '../components/select/selectStatus.component';\nimport { SelectThemingShowcase } from '../components/select/selectTheming.component';\nimport { SelectWithGroupsShowcase } from '../components/select/selectWithGroups.component';\nimport { SpinnerDataLoadingShowcase } from '../components/spinner/spinnerDataLoading.component';\nimport { SpinnerSimpleUsageShowcase } from '../components/spinner/spinnerSimpleUsage.component';\nimport { SpinnerSizesShowcase } from '../components/spinner/spinnerSizes.component';\nimport { SpinnerStatusesShowcase } from '../components/spinner/spinnerStatuses.component';\nimport { SpinnerThemingShowcase } from '../components/spinner/spinnerTheming.component';\nimport { StyledComponentSimpleUsageShowcase } from '../components/styled/styledComponentSimpleUsage.component';\nimport { StyledComponentStatesShowcase } from '../components/styled/styledComponentStates.component';\nimport { StyledComponentVariantsShowcase } from '../components/styled/styledComponentVariants.component';\nimport { TabBarAccessoriesShowcase } from '../components/tab/tabBarAccessories.component';\nimport { TabBarSimpleUsageShowcase } from '../components/tab/tabBarSimpleUsage.component';\nimport { TabSimpleUsageShowcase } from '../components/tab/tabSimpleUsage.component';\nimport { TabThemingShowcase } from '../components/tab/tabTheming.component';\nimport { TabViewLazyLoadingShowcase } from '../components/tab/tabViewLazyLoading.component';\nimport { TabViewSimpleUsageShowcase } from '../components/tab/tabViewSimpleUsage.component';\nimport { TextAppearancesShowcase } from '../components/text/textAppearances.component';\nimport { TextCategoriesShowcase } from '../components/text/textCategories.component';\nimport { TextStatusesShowcase } from '../components/text/textStatuses.component';\nimport { ThemeProviderSimpleUsageShowcase } from '../components/themeProvider/themeProviderSimpleUsage.component';\nimport { ToggleSimpleUsageShowcase } from '../components/toggle/toggleSimpleUsage.component';\nimport { ToggleStatesShowcase } from '../components/toggle/toggleStates.component';\nimport { ToggleStatusShowcase } from '../components/toggle/toggleStatus.component';\nimport { ToggleThemingShowcase } from '../components/toggle/toggleTheming.component';\nimport { TooltipAccessoriesShowcase } from '../components/tooltip/tooltipAccessories.component';\nimport { TooltipPlacementShowcase } from '../components/tooltip/tooltipPlacement.component';\nimport { TooltipSimpleUsageShowcase } from '../components/tooltip/tooltipSimpleUsage.component';\nimport { TooltipStyledBackdropShowcase } from '../components/tooltip/tooltipStyledBackdrop.component';\nimport { TopNavigationAccessoriesShowcase } from '../components/topNavigation/topNavigationAccessories.component';\nimport { TopNavigationActionSimpleUsageShowcase } from '../components/topNavigation/topNavigationActionSimpleUsage.component';\nimport { TopNavigationDividerShowcase } from '../components/topNavigation/topNavigationDivider.component';\nimport { TopNavigationImageTitleShowcase } from '../components/topNavigation/topNavigationImageTitle.component';\nimport { TopNavigationSimpleUsageShowcase } from '../components/topNavigation/topNavigationSimpleUsage.component';\nimport { UseStyleSheetSimpleUsageShowcase } from '../components/useStyleSheet/useStyleSheetSimpleUsage.component';\nimport { UseThemeSimpleUsageShowcase } from '../components/useTheme/useThemeSimpleUsage.component';\nimport { ViewPagerLazyLoadingShowcase } from '../components/viewPager/viewPagerLazyLoading.component';\nimport { ViewPagerSimpleUsageShowcase } from '../components/viewPager/viewPagerSimpleUsage.component';\nimport { WithStylesSimpleUsageShowcase } from '../components/withStyles/withStylesSimpleUsage.component';\n\nconst routes = {\n  AutocompleteAccessories: () => ShowcaseIFrame(AutocompleteAccessoriesShowcase, 'AutocompleteAccessories'),\n  AutocompleteAsync: () => ShowcaseIFrame(AutocompleteAsyncShowcase, 'AutocompleteAsync'),\n  AutocompleteHandleKeyboard: () => ShowcaseIFrame(AutocompleteHandleKeyboardShowcase, 'AutocompleteHandleKeyboard'),\n  AutocompleteSimpleUsage: () => ShowcaseIFrame(AutocompleteSimpleUsageShowcase, 'AutocompleteSimpleUsage'),\n  AvatarImageComponent: () => ShowcaseIFrame(AvatarImageComponentShowcase, 'AvatarImageComponent'),\n  AvatarShape: () => ShowcaseIFrame(AvatarShapeShowcase, 'AvatarShape'),\n  AvatarSimpleUsage: () => ShowcaseIFrame(AvatarSimpleUsageShowcase, 'AvatarSimpleUsage'),\n  AvatarSize: () => ShowcaseIFrame(AvatarSizeShowcase, 'AvatarSize'),\n  BottomNavigationAccessories: () => ShowcaseIFrame(BottomNavigationAccessoriesShowcase, 'BottomNavigationAccessories'),\n  BottomNavigationSimpleUsage: () => ShowcaseIFrame(BottomNavigationSimpleUsageShowcase, 'BottomNavigationSimpleUsage'),\n  BottomNavigationTabSimpleUsage: () => ShowcaseIFrame(BottomNavigationTabSimpleUsageShowcase, 'BottomNavigationTabSimpleUsage'),\n  BottomNavigationTabTheming: () => ShowcaseThemingIFrame(BottomNavigationTabThemingShowcase, 'BottomNavigationTabTheming'),\n  BottomNavigationWithoutIndicator: () => ShowcaseIFrame(BottomNavigationWithoutIndicatorShowcase, 'BottomNavigationWithoutIndicator'),\n  ButtonAccessories: () => ShowcaseIFrame(ButtonAccessoriesShowcase, 'ButtonAccessories'),\n  ButtonAppearances: () => ShowcaseIFrame(ButtonAppearancesShowcase, 'ButtonAppearances'),\n  ButtonGhost: () => ShowcaseIFrame(ButtonGhostShowcase, 'ButtonGhost'),\n  ButtonOutline: () => ShowcaseIFrame(ButtonOutlineShowcase, 'ButtonOutline'),\n  ButtonSimpleUsage: () => ShowcaseIFrame(ButtonSimpleUsageShowcase, 'ButtonSimpleUsage'),\n  ButtonSize: () => ShowcaseIFrame(ButtonSizeShowcase, 'ButtonSize'),\n  ButtonStates: () => ShowcaseIFrame(ButtonStatesShowcase, 'ButtonStates'),\n  ButtonStatus: () => ShowcaseIFrame(ButtonStatusShowcase, 'ButtonStatus'),\n  ButtonTheming: () => ShowcaseThemingIFrame(ButtonThemingShowcase, 'ButtonTheming'),\n  ButtonGroupAppearance: () => ShowcaseIFrame(ButtonGroupAppearanceShowcase, 'ButtonGroupAppearance'),\n  ButtonGroupGhost: () => ShowcaseIFrame(ButtonGroupGhostShowcase, 'ButtonGroupGhost'),\n  ButtonGroupOutline: () => ShowcaseIFrame(ButtonGroupOutlineShowcase, 'ButtonGroupOutline'),\n  ButtonGroupSimpleUsage: () => ShowcaseIFrame(ButtonGroupSimpleUsageShowcase, 'ButtonGroupSimpleUsage'),\n  ButtonGroupSize: () => ShowcaseIFrame(ButtonGroupSizeShowcase, 'ButtonGroupSize'),\n  ButtonGroupStatus: () => ShowcaseIFrame(ButtonGroupStatusShowcase, 'ButtonGroupStatus'),\n  ButtonGroupWithIcons: () => ShowcaseIFrame(ButtonGroupWithIconsShowcase, 'ButtonGroupWithIcons'),\n  CalendarCustomDay: () => ShowcaseIFrame(CalendarCustomDayShowcase, 'CalendarCustomDay'),\n  CalendarFilters: () => ShowcaseIFrame(CalendarFiltersShowcase, 'CalendarFilters'),\n  CalendarInitialVisibleDate: () => ShowcaseIFrame(CalendarInitialVisibleDateShowcase, 'CalendarInitialVisibleDate'),\n  CalendarLocaleSettings: () => ShowcaseIFrame(CalendarLocaleSettingsShowcase, 'CalendarLocaleSettings'),\n  CalendarMoment: () => ShowcaseIFrame(CalendarMomentShowcase, 'CalendarMoment'),\n  CalendarSimpleUsage: () => ShowcaseIFrame(CalendarSimpleUsageShowcase, 'CalendarSimpleUsage'),\n  CalendarTheming: () => ShowcaseThemingIFrame(CalendarThemingShowcase, 'CalendarTheming'),\n  RangeCalendarSimpleUsage: () => ShowcaseIFrame(RangeCalendarSimpleUsageShowcase, 'RangeCalendarSimpleUsage'),\n  CardAccessories: () => ShowcaseIFrame(CardAccessoriesShowcase, 'CardAccessories'),\n  CardSimpleUsage: () => ShowcaseIFrame(CardSimpleUsageShowcase, 'CardSimpleUsage'),\n  CardStatuses: () => ShowcaseIFrame(CardStatusesShowcase, 'CardStatuses'),\n  CheckboxIndeterminate: () => ShowcaseIFrame(CheckboxIndeterminateShowcase, 'CheckboxIndeterminate'),\n  CheckboxSimpleUsage: () => ShowcaseIFrame(CheckboxSimpleUsageShowcase, 'CheckboxSimpleUsage'),\n  CheckboxStates: () => ShowcaseIFrame(CheckboxStatesShowcase, 'CheckboxStates'),\n  CheckboxStatus: () => ShowcaseIFrame(CheckboxStatusShowcase, 'CheckboxStatus'),\n  CheckboxTheming: () => ShowcaseThemingIFrame(CheckboxThemingShowcase, 'CheckboxTheming'),\n  DatepickerAccessories: () => ShowcaseIFrame(DatepickerAccessoriesShowcase, 'DatepickerAccessories'),\n  DatepickerCustomDay: () => ShowcaseIFrame(DatepickerCustomDayShowcase, 'DatepickerCustomDay'),\n  DatepickerFilters: () => ShowcaseIFrame(DatepickerFiltersShowcase, 'DatepickerFilters'),\n  DatepickerInitialVisibleDate: () => ShowcaseIFrame(DatepickerInitialVisibleDateShowcase, 'DatepickerInitialVisibleDate'),\n  DatepickerLocaleSettings: () => ShowcaseIFrame(DatepickerLocaleSettingsShowcase, 'DatepickerLocaleSettings'),\n  DatepickerMoment: () => ShowcaseIFrame(DatepickerMomentShowcase, 'DatepickerMoment'),\n  DatepickerSimpleUsage: () => ShowcaseIFrame(DatepickerSimpleUsageShowcase, 'DatepickerSimpleUsage'),\n  DatepickerSize: () => ShowcaseIFrame(DatepickerSizeShowcase, 'DatepickerSize'),\n  DatepickerStatus: () => ShowcaseIFrame(DatepickerStatusShowcase, 'DatepickerStatus'),\n  DatepickerTheming: () => ShowcaseThemingIFrame(DatepickerThemingShowcase, 'DatepickerTheming'),\n  RangeDatepickerSimpleUsage: () => ShowcaseIFrame(RangeDatepickerSimpleUsageShowcase, 'RangeDatepickerSimpleUsage'),\n  DividerSimpleUsage: () => ShowcaseIFrame(DividerSimpleUsageShowcase, 'DividerSimpleUsage'),\n  DrawerAccessories: () => ShowcaseIFrame(DrawerAccessoriesShowcase, 'DrawerAccessories'),\n  DrawerGroups: () => ShowcaseIFrame(DrawerGroupsShowcase, 'DrawerGroups'),\n  DrawerItemSimpleUsage: () => ShowcaseIFrame(DrawerItemSimpleUsageShowcase, 'DrawerItemSimpleUsage'),\n  DrawerNoMarkers: () => ShowcaseIFrame(DrawerNoMarkersShowcase, 'DrawerNoMarkers'),\n  DrawerSimpleUsage: () => ShowcaseIFrame(DrawerSimpleUsageShowcase, 'DrawerSimpleUsage'),\n  DrawerTheming: () => ShowcaseThemingIFrame(DrawerThemingShowcase, 'DrawerTheming'),\n  IconAnimation: () => ShowcaseIFrame(IconAnimationShowcase, 'IconAnimation'),\n  IconSimpleUsage: () => ShowcaseIFrame(IconSimpleUsageShowcase, 'IconSimpleUsage'),\n  IconTheming: () => ShowcaseThemingIFrame(IconThemingShowcase, 'IconTheming'),\n  IconWithinComponents: () => ShowcaseIFrame(IconWithinComponentsShowcase, 'IconWithinComponents'),\n  InputAccessories: () => ShowcaseIFrame(InputAccessoriesShowcase, 'InputAccessories'),\n  InputSimpleUsage: () => ShowcaseIFrame(InputSimpleUsageShowcase, 'InputSimpleUsage'),\n  InputSize: () => ShowcaseIFrame(InputSizeShowcase, 'InputSize'),\n  InputStates: () => ShowcaseIFrame(InputStatesShowcase, 'InputStates'),\n  InputStatus: () => ShowcaseIFrame(InputStatusShowcase, 'InputStatus'),\n  InputTheming: () => ShowcaseThemingIFrame(InputThemingShowcase, 'InputTheming'),\n  LayoutLevel: () => ShowcaseIFrame(LayoutLevelShowcase, 'LayoutLevel'),\n  ListAccessories: () => ShowcaseIFrame(ListAccessoriesShowcase, 'ListAccessories'),\n  ListCustomItem: () => ShowcaseIFrame(ListCustomItemShowcase, 'ListCustomItem'),\n  ListDividers: () => ShowcaseIFrame(ListDividersShowcase, 'ListDividers'),\n  ListItemSimpleUsage: () => ShowcaseIFrame(ListItemSimpleUsageShowcase, 'ListItemSimpleUsage'),\n  ListSimpleUsage: () => ShowcaseIFrame(ListSimpleUsageShowcase, 'ListSimpleUsage'),\n  MenuAccessories: () => ShowcaseIFrame(MenuAccessoriesShowcase, 'MenuAccessories'),\n  MenuDisabledOptions: () => ShowcaseIFrame(MenuDisabledOptionsShowcase, 'MenuDisabledOptions'),\n  MenuGroups: () => ShowcaseIFrame(MenuGroupsShowcase, 'MenuGroups'),\n  MenuItemSimpleUsage: () => ShowcaseIFrame(MenuItemSimpleUsageShowcase, 'MenuItemSimpleUsage'),\n  MenuNoMarkers: () => ShowcaseIFrame(MenuNoMarkersShowcase, 'MenuNoMarkers'),\n  MenuSimpleUsage: () => ShowcaseIFrame(MenuSimpleUsageShowcase, 'MenuSimpleUsage'),\n  MenuTheming: () => ShowcaseThemingIFrame(MenuThemingShowcase, 'MenuTheming'),\n  ModalSimpleUsage: () => ShowcaseIFrame(ModalSimpleUsageShowcase, 'ModalSimpleUsage'),\n  ModalWithBackdrop: () => ShowcaseIFrame(ModalWithBackdropShowcase, 'ModalWithBackdrop'),\n  OverflowMenuAccessories: () => ShowcaseIFrame(OverflowMenuAccessoriesShowcase, 'OverflowMenuAccessories'),\n  OverflowMenuFullWidth: () => ShowcaseIFrame(OverflowMenuFullWidthShowcase, 'OverflowMenuFullWidth'),\n  OverflowMenuNoMarkers: () => ShowcaseIFrame(OverflowMenuNoMarkersShowcase, 'OverflowMenuNoMarkers'),\n  OverflowMenuPlacement: () => ShowcaseIFrame(OverflowMenuPlacementShowcase, 'OverflowMenuPlacement'),\n  OverflowMenuSimpleUsage: () => ShowcaseIFrame(OverflowMenuSimpleUsageShowcase, 'OverflowMenuSimpleUsage'),\n  OverflowMenuStyledBackdrop: () => ShowcaseIFrame(OverflowMenuStyledBackdropShowcase, 'OverflowMenuStyledBackdrop'),\n  OverflowMenuWithDisabledItems: () => ShowcaseIFrame(OverflowMenuWithDisabledItemsShowcase, 'OverflowMenuWithDisabledItems'),\n  OverflowMenuWithoutDivider: () => ShowcaseIFrame(OverflowMenuWithoutDividerShowcase, 'OverflowMenuWithoutDivider'),\n  PopoverFullWidth: () => ShowcaseIFrame(PopoverFullWidthShowcase, 'PopoverFullWidth'),\n  PopoverPlacement: () => ShowcaseIFrame(PopoverPlacementShowcase, 'PopoverPlacement'),\n  PopoverSimpleUsage: () => ShowcaseIFrame(PopoverSimpleUsageShowcase, 'PopoverSimpleUsage'),\n  PopoverStyledBackdrop: () => ShowcaseIFrame(PopoverStyledBackdropShowcase, 'PopoverStyledBackdrop'),\n  RadioSimpleUsage: () => ShowcaseIFrame(RadioSimpleUsageShowcase, 'RadioSimpleUsage'),\n  RadioStates: () => ShowcaseIFrame(RadioStatesShowcase, 'RadioStates'),\n  RadioStatus: () => ShowcaseIFrame(RadioStatusShowcase, 'RadioStatus'),\n  RadioTheming: () => ShowcaseThemingIFrame(RadioThemingShowcase, 'RadioTheming'),\n  RadioGroupSimpleUsage: () => ShowcaseIFrame(RadioGroupSimpleUsageShowcase, 'RadioGroupSimpleUsage'),\n  SelectAccessories: () => ShowcaseIFrame(SelectAccessoriesShowcase, 'SelectAccessories'),\n  SelectDisabledOptions: () => ShowcaseIFrame(SelectDisabledOptionsShowcase, 'SelectDisabledOptions'),\n  SelectDisplayValue: () => ShowcaseIFrame(SelectDisplayValueShowcase, 'SelectDisplayValue'),\n  SelectItemSimpleUsage: () => ShowcaseIFrame(SelectItemSimpleUsageShowcase, 'SelectItemSimpleUsage'),\n  SelectMultiSelect: () => ShowcaseIFrame(SelectMultiSelectShowcase, 'SelectMultiSelect'),\n  SelectSimpleUsage: () => ShowcaseIFrame(SelectSimpleUsageShowcase, 'SelectSimpleUsage'),\n  SelectSize: () => ShowcaseIFrame(SelectSizeShowcase, 'SelectSize'),\n  SelectStates: () => ShowcaseIFrame(SelectStatesShowcase, 'SelectStates'),\n  SelectStatus: () => ShowcaseIFrame(SelectStatusShowcase, 'SelectStatus'),\n  SelectTheming: () => ShowcaseThemingIFrame(SelectThemingShowcase, 'SelectTheming'),\n  SelectWithGroups: () => ShowcaseIFrame(SelectWithGroupsShowcase, 'SelectWithGroups'),\n  SpinnerDataLoading: () => ShowcaseIFrame(SpinnerDataLoadingShowcase, 'SpinnerDataLoading'),\n  SpinnerSimpleUsage: () => ShowcaseIFrame(SpinnerSimpleUsageShowcase, 'SpinnerSimpleUsage'),\n  SpinnerSizes: () => ShowcaseIFrame(SpinnerSizesShowcase, 'SpinnerSizes'),\n  SpinnerStatuses: () => ShowcaseIFrame(SpinnerStatusesShowcase, 'SpinnerStatuses'),\n  SpinnerTheming: () => ShowcaseThemingIFrame(SpinnerThemingShowcase, 'SpinnerTheming'),\n  StyledComponentSimpleUsage: () => ShowcaseIFrame(StyledComponentSimpleUsageShowcase, 'StyledComponentSimpleUsage'),\n  StyledComponentStates: () => ShowcaseIFrame(StyledComponentStatesShowcase, 'StyledComponentStates'),\n  StyledComponentVariants: () => ShowcaseIFrame(StyledComponentVariantsShowcase, 'StyledComponentVariants'),\n  TabBarAccessories: () => ShowcaseIFrame(TabBarAccessoriesShowcase, 'TabBarAccessories'),\n  TabBarSimpleUsage: () => ShowcaseIFrame(TabBarSimpleUsageShowcase, 'TabBarSimpleUsage'),\n  TabSimpleUsage: () => ShowcaseIFrame(TabSimpleUsageShowcase, 'TabSimpleUsage'),\n  TabTheming: () => ShowcaseThemingIFrame(TabThemingShowcase, 'TabTheming'),\n  TabViewLazyLoading: () => ShowcaseIFrame(TabViewLazyLoadingShowcase, 'TabViewLazyLoading'),\n  TabViewSimpleUsage: () => ShowcaseIFrame(TabViewSimpleUsageShowcase, 'TabViewSimpleUsage'),\n  TextAppearances: () => ShowcaseIFrame(TextAppearancesShowcase, 'TextAppearances'),\n  TextCategories: () => ShowcaseIFrame(TextCategoriesShowcase, 'TextCategories'),\n  TextStatuses: () => ShowcaseIFrame(TextStatusesShowcase, 'TextStatuses'),\n  ThemeProviderSimpleUsage: () => ShowcaseIFrame(ThemeProviderSimpleUsageShowcase, 'ThemeProviderSimpleUsage'),\n  ToggleSimpleUsage: () => ShowcaseIFrame(ToggleSimpleUsageShowcase, 'ToggleSimpleUsage'),\n  ToggleStates: () => ShowcaseIFrame(ToggleStatesShowcase, 'ToggleStates'),\n  ToggleStatus: () => ShowcaseIFrame(ToggleStatusShowcase, 'ToggleStatus'),\n  ToggleTheming: () => ShowcaseThemingIFrame(ToggleThemingShowcase, 'ToggleTheming'),\n  TooltipAccessories: () => ShowcaseIFrame(TooltipAccessoriesShowcase, 'TooltipAccessories'),\n  TooltipPlacement: () => ShowcaseIFrame(TooltipPlacementShowcase, 'TooltipPlacement'),\n  TooltipSimpleUsage: () => ShowcaseIFrame(TooltipSimpleUsageShowcase, 'TooltipSimpleUsage'),\n  TooltipStyledBackdrop: () => ShowcaseIFrame(TooltipStyledBackdropShowcase, 'TooltipStyledBackdrop'),\n  TopNavigationAccessories: () => ShowcaseIFrame(TopNavigationAccessoriesShowcase, 'TopNavigationAccessories'),\n  TopNavigationActionSimpleUsage: () => ShowcaseIFrame(TopNavigationActionSimpleUsageShowcase, 'TopNavigationActionSimpleUsage'),\n  TopNavigationDivider: () => ShowcaseIFrame(TopNavigationDividerShowcase, 'TopNavigationDivider'),\n  TopNavigationImageTitle: () => ShowcaseIFrame(TopNavigationImageTitleShowcase, 'TopNavigationImageTitle'),\n  TopNavigationSimpleUsage: () => ShowcaseIFrame(TopNavigationSimpleUsageShowcase, 'TopNavigationSimpleUsage'),\n  UseStyleSheetSimpleUsage: () => ShowcaseIFrame(UseStyleSheetSimpleUsageShowcase, 'UseStyleSheetSimpleUsage'),\n  UseThemeSimpleUsage: () => ShowcaseIFrame(UseThemeSimpleUsageShowcase, 'UseThemeSimpleUsage'),\n  ViewPagerLazyLoading: () => ShowcaseIFrame(ViewPagerLazyLoadingShowcase, 'ViewPagerLazyLoading'),\n  ViewPagerSimpleUsage: () => ShowcaseIFrame(ViewPagerSimpleUsageShowcase, 'ViewPagerSimpleUsage'),\n  WithStylesSimpleUsage: () => ShowcaseIFrame(WithStylesSimpleUsageShowcase, 'WithStylesSimpleUsage')\n};\n\nconst AppStack = createStackNavigator(routes, { headerMode: 'none' });\nexport const AppNavigator = createBrowserApp(AppStack, { history: 'hash' });","import React from 'react';\nimport { Updates } from 'expo';\nimport { enableScreens } from 'react-native-screens';\nimport * as eva from '@eva-design/eva';\nimport * as material from '@eva-design/material';\nimport {\n  ApplicationProvider,\n  ApplicationProviderProps,\n  IconRegistry,\n} from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { default as customMapping } from './mapping.json';\nimport { themes } from './themes';\nimport { AppNavigator } from '../navigation/app.navigator';\nimport {\n  AppMapping,\n  AppTheme,\n  ThemeContext,\n  ThemeContextType,\n} from '../services/theme.service';\n\nconst mappings = {\n  Eva: eva.mapping,\n  Material: material.mapping,\n};\n\nconst storedMapping: string = localStorage.getItem('mapping');\nconst isMappingKey: boolean = Object.keys(mappings).includes(storedMapping);\n\nconst mapping: AppMapping = isMappingKey ? (storedMapping as AppMapping) : AppMapping.eva;\n\nenableScreens();\n\nexport default (): React.ReactElement => {\n\n  const [theme, setTheme] = React.useState<AppTheme>(AppTheme.light);\n\n  const dispatchMappingChange = (nextMapping: AppMapping): void => {\n    localStorage.setItem('mapping', nextMapping);\n    Updates.reload().then();\n  };\n\n  const isDarkMode = (): boolean => {\n    return theme === AppTheme.dark;\n  };\n\n  const applicationProviderConfig: ApplicationProviderProps = {\n    mapping: mappings[mapping],\n    theme: themes[mapping][theme],\n    // @ts-ignore\n    customMapping: customMapping,\n  };\n\n  const themeContextProviderConfig: ThemeContextType = {\n    mapping: mapping,\n    theme: theme,\n    setMapping: dispatchMappingChange,\n    setTheme: setTheme,\n    isDarkMode: isDarkMode,\n  };\n\n  return (\n    <React.Fragment>\n      <IconRegistry icons={EvaIconsPack}/>\n      <ApplicationProvider {...applicationProviderConfig}>\n        <ThemeContext.Provider value={themeContextProviderConfig}>\n          <AppNavigator/>\n        </ThemeContext.Provider>\n      </ApplicationProvider>\n    </React.Fragment>\n  );\n};\n","import App from './app/app.component';\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var map = {\n\t\"./af\": 152,\n\t\"./af.js\": 152,\n\t\"./ar\": 153,\n\t\"./ar-dz\": 154,\n\t\"./ar-dz.js\": 154,\n\t\"./ar-kw\": 155,\n\t\"./ar-kw.js\": 155,\n\t\"./ar-ly\": 156,\n\t\"./ar-ly.js\": 156,\n\t\"./ar-ma\": 157,\n\t\"./ar-ma.js\": 157,\n\t\"./ar-sa\": 158,\n\t\"./ar-sa.js\": 158,\n\t\"./ar-tn\": 159,\n\t\"./ar-tn.js\": 159,\n\t\"./ar.js\": 153,\n\t\"./az\": 160,\n\t\"./az.js\": 160,\n\t\"./be\": 161,\n\t\"./be.js\": 161,\n\t\"./bg\": 162,\n\t\"./bg.js\": 162,\n\t\"./bm\": 163,\n\t\"./bm.js\": 163,\n\t\"./bn\": 164,\n\t\"./bn.js\": 164,\n\t\"./bo\": 165,\n\t\"./bo.js\": 165,\n\t\"./br\": 166,\n\t\"./br.js\": 166,\n\t\"./bs\": 167,\n\t\"./bs.js\": 167,\n\t\"./ca\": 168,\n\t\"./ca.js\": 168,\n\t\"./cs\": 169,\n\t\"./cs.js\": 169,\n\t\"./cv\": 170,\n\t\"./cv.js\": 170,\n\t\"./cy\": 171,\n\t\"./cy.js\": 171,\n\t\"./da\": 172,\n\t\"./da.js\": 172,\n\t\"./de\": 173,\n\t\"./de-at\": 174,\n\t\"./de-at.js\": 174,\n\t\"./de-ch\": 175,\n\t\"./de-ch.js\": 175,\n\t\"./de.js\": 173,\n\t\"./dv\": 176,\n\t\"./dv.js\": 176,\n\t\"./el\": 177,\n\t\"./el.js\": 177,\n\t\"./en-au\": 178,\n\t\"./en-au.js\": 178,\n\t\"./en-ca\": 179,\n\t\"./en-ca.js\": 179,\n\t\"./en-gb\": 180,\n\t\"./en-gb.js\": 180,\n\t\"./en-ie\": 181,\n\t\"./en-ie.js\": 181,\n\t\"./en-il\": 182,\n\t\"./en-il.js\": 182,\n\t\"./en-in\": 183,\n\t\"./en-in.js\": 183,\n\t\"./en-nz\": 184,\n\t\"./en-nz.js\": 184,\n\t\"./en-sg\": 185,\n\t\"./en-sg.js\": 185,\n\t\"./eo\": 186,\n\t\"./eo.js\": 186,\n\t\"./es\": 187,\n\t\"./es-do\": 188,\n\t\"./es-do.js\": 188,\n\t\"./es-us\": 189,\n\t\"./es-us.js\": 189,\n\t\"./es.js\": 187,\n\t\"./et\": 190,\n\t\"./et.js\": 190,\n\t\"./eu\": 191,\n\t\"./eu.js\": 191,\n\t\"./fa\": 192,\n\t\"./fa.js\": 192,\n\t\"./fi\": 193,\n\t\"./fi.js\": 193,\n\t\"./fil\": 194,\n\t\"./fil.js\": 194,\n\t\"./fo\": 195,\n\t\"./fo.js\": 195,\n\t\"./fr\": 196,\n\t\"./fr-ca\": 197,\n\t\"./fr-ca.js\": 197,\n\t\"./fr-ch\": 198,\n\t\"./fr-ch.js\": 198,\n\t\"./fr.js\": 196,\n\t\"./fy\": 199,\n\t\"./fy.js\": 199,\n\t\"./ga\": 200,\n\t\"./ga.js\": 200,\n\t\"./gd\": 201,\n\t\"./gd.js\": 201,\n\t\"./gl\": 202,\n\t\"./gl.js\": 202,\n\t\"./gom-deva\": 203,\n\t\"./gom-deva.js\": 203,\n\t\"./gom-latn\": 204,\n\t\"./gom-latn.js\": 204,\n\t\"./gu\": 205,\n\t\"./gu.js\": 205,\n\t\"./he\": 206,\n\t\"./he.js\": 206,\n\t\"./hi\": 207,\n\t\"./hi.js\": 207,\n\t\"./hr\": 208,\n\t\"./hr.js\": 208,\n\t\"./hu\": 209,\n\t\"./hu.js\": 209,\n\t\"./hy-am\": 210,\n\t\"./hy-am.js\": 210,\n\t\"./id\": 211,\n\t\"./id.js\": 211,\n\t\"./is\": 212,\n\t\"./is.js\": 212,\n\t\"./it\": 213,\n\t\"./it-ch\": 214,\n\t\"./it-ch.js\": 214,\n\t\"./it.js\": 213,\n\t\"./ja\": 215,\n\t\"./ja.js\": 215,\n\t\"./jv\": 216,\n\t\"./jv.js\": 216,\n\t\"./ka\": 217,\n\t\"./ka.js\": 217,\n\t\"./kk\": 218,\n\t\"./kk.js\": 218,\n\t\"./km\": 219,\n\t\"./km.js\": 219,\n\t\"./kn\": 220,\n\t\"./kn.js\": 220,\n\t\"./ko\": 221,\n\t\"./ko.js\": 221,\n\t\"./ku\": 222,\n\t\"./ku.js\": 222,\n\t\"./ky\": 223,\n\t\"./ky.js\": 223,\n\t\"./lb\": 224,\n\t\"./lb.js\": 224,\n\t\"./lo\": 225,\n\t\"./lo.js\": 225,\n\t\"./lt\": 226,\n\t\"./lt.js\": 226,\n\t\"./lv\": 227,\n\t\"./lv.js\": 227,\n\t\"./me\": 228,\n\t\"./me.js\": 228,\n\t\"./mi\": 229,\n\t\"./mi.js\": 229,\n\t\"./mk\": 230,\n\t\"./mk.js\": 230,\n\t\"./ml\": 231,\n\t\"./ml.js\": 231,\n\t\"./mn\": 232,\n\t\"./mn.js\": 232,\n\t\"./mr\": 233,\n\t\"./mr.js\": 233,\n\t\"./ms\": 234,\n\t\"./ms-my\": 235,\n\t\"./ms-my.js\": 235,\n\t\"./ms.js\": 234,\n\t\"./mt\": 236,\n\t\"./mt.js\": 236,\n\t\"./my\": 237,\n\t\"./my.js\": 237,\n\t\"./nb\": 238,\n\t\"./nb.js\": 238,\n\t\"./ne\": 239,\n\t\"./ne.js\": 239,\n\t\"./nl\": 240,\n\t\"./nl-be\": 241,\n\t\"./nl-be.js\": 241,\n\t\"./nl.js\": 240,\n\t\"./nn\": 242,\n\t\"./nn.js\": 242,\n\t\"./oc-lnc\": 243,\n\t\"./oc-lnc.js\": 243,\n\t\"./pa-in\": 244,\n\t\"./pa-in.js\": 244,\n\t\"./pl\": 245,\n\t\"./pl.js\": 245,\n\t\"./pt\": 246,\n\t\"./pt-br\": 247,\n\t\"./pt-br.js\": 247,\n\t\"./pt.js\": 246,\n\t\"./ro\": 248,\n\t\"./ro.js\": 248,\n\t\"./ru\": 249,\n\t\"./ru.js\": 249,\n\t\"./sd\": 250,\n\t\"./sd.js\": 250,\n\t\"./se\": 251,\n\t\"./se.js\": 251,\n\t\"./si\": 252,\n\t\"./si.js\": 252,\n\t\"./sk\": 253,\n\t\"./sk.js\": 253,\n\t\"./sl\": 254,\n\t\"./sl.js\": 254,\n\t\"./sq\": 255,\n\t\"./sq.js\": 255,\n\t\"./sr\": 256,\n\t\"./sr-cyrl\": 257,\n\t\"./sr-cyrl.js\": 257,\n\t\"./sr.js\": 256,\n\t\"./ss\": 258,\n\t\"./ss.js\": 258,\n\t\"./sv\": 259,\n\t\"./sv.js\": 259,\n\t\"./sw\": 260,\n\t\"./sw.js\": 260,\n\t\"./ta\": 261,\n\t\"./ta.js\": 261,\n\t\"./te\": 262,\n\t\"./te.js\": 262,\n\t\"./tet\": 263,\n\t\"./tet.js\": 263,\n\t\"./tg\": 264,\n\t\"./tg.js\": 264,\n\t\"./th\": 265,\n\t\"./th.js\": 265,\n\t\"./tl-ph\": 266,\n\t\"./tl-ph.js\": 266,\n\t\"./tlh\": 267,\n\t\"./tlh.js\": 267,\n\t\"./tr\": 268,\n\t\"./tr.js\": 268,\n\t\"./tzl\": 269,\n\t\"./tzl.js\": 269,\n\t\"./tzm\": 270,\n\t\"./tzm-latn\": 271,\n\t\"./tzm-latn.js\": 271,\n\t\"./tzm.js\": 270,\n\t\"./ug-cn\": 272,\n\t\"./ug-cn.js\": 272,\n\t\"./uk\": 273,\n\t\"./uk.js\": 273,\n\t\"./ur\": 274,\n\t\"./ur.js\": 274,\n\t\"./uz\": 275,\n\t\"./uz-latn\": 276,\n\t\"./uz-latn.js\": 276,\n\t\"./uz.js\": 275,\n\t\"./vi\": 277,\n\t\"./vi.js\": 277,\n\t\"./x-pseudo\": 278,\n\t\"./x-pseudo.js\": 278,\n\t\"./yo\": 279,\n\t\"./yo.js\": 279,\n\t\"./zh-cn\": 280,\n\t\"./zh-cn.js\": 280,\n\t\"./zh-hk\": 281,\n\t\"./zh-hk.js\": 281,\n\t\"./zh-mo\": 282,\n\t\"./zh-mo.js\": 282,\n\t\"./zh-tw\": 283,\n\t\"./zh-tw.js\": 283\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 373;","module.exports = __webpack_public_path__ + \"static/media/icon.a78e4b51.png\";"],"sourceRoot":""}